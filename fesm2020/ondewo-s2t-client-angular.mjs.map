{"version":3,"file":"ondewo-s2t-client-angular.mjs","sources":["../../api/ondewo/s2t/speech-to-text.pb.ts","../../api/ondewo/s2t/speech-to-text.pbconf.ts","../../api/ondewo/s2t/speech-to-text.pbsc.ts","../../ondewo-s2t-client-angular.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n  uint8ArrayToBase64\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nexport enum CTCDecoding {\n  DEFAULT = 0,\n  GREEDY = 1,\n  BEAM_SEARCH_WITH_LM = 2\n}\n/**\n * Message implementation for ondewo.s2t.TranscribeRequestConfig\n */\nexport class TranscribeRequestConfig implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeRequestConfig';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeRequestConfig();\n    TranscribeRequestConfig.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeRequestConfig) {\n    _instance.s2tPipelineId = _instance.s2tPipelineId || '';\n    _instance.ctcDecoding = _instance.ctcDecoding || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeRequestConfig,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.s2tPipelineId = _reader.readString();\n          break;\n        case 2:\n          _instance.ctcDecoding = _reader.readEnum();\n          break;\n        case 3:\n          _instance.languageModelName = _reader.readString();\n          break;\n        case 4:\n          _instance.postProcessing = new PostProcessingOptions();\n          _reader.readMessage(\n            _instance.postProcessing,\n            PostProcessingOptions.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.utteranceDetection = new UtteranceDetectionOptions();\n          _reader.readMessage(\n            _instance.utteranceDetection,\n            UtteranceDetectionOptions.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.pyannote = new Pyannote();\n          _reader.readMessage(\n            _instance.pyannote,\n            Pyannote.deserializeBinaryFromReader\n          );\n          break;\n        case 7:\n          _instance.matchbox = new Matchbox();\n          _reader.readMessage(\n            _instance.matchbox,\n            Matchbox.deserializeBinaryFromReader\n          );\n          break;\n        case 8:\n          _instance.returnOptions = new TranscriptionReturnOptions();\n          _reader.readMessage(\n            _instance.returnOptions,\n            TranscriptionReturnOptions.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeRequestConfig.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeRequestConfig,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.s2tPipelineId) {\n      _writer.writeString(1, _instance.s2tPipelineId);\n    }\n    if (_instance.ctcDecoding) {\n      _writer.writeEnum(2, _instance.ctcDecoding);\n    }\n    if (_instance.languageModelName || _instance.languageModelName === '') {\n      _writer.writeString(3, _instance.languageModelName);\n    }\n    if (_instance.postProcessing) {\n      _writer.writeMessage(\n        4,\n        _instance.postProcessing as any,\n        PostProcessingOptions.serializeBinaryToWriter\n      );\n    }\n    if (_instance.utteranceDetection) {\n      _writer.writeMessage(\n        5,\n        _instance.utteranceDetection as any,\n        UtteranceDetectionOptions.serializeBinaryToWriter\n      );\n    }\n    if (_instance.pyannote) {\n      _writer.writeMessage(\n        6,\n        _instance.pyannote as any,\n        Pyannote.serializeBinaryToWriter\n      );\n    }\n    if (_instance.matchbox) {\n      _writer.writeMessage(\n        7,\n        _instance.matchbox as any,\n        Matchbox.serializeBinaryToWriter\n      );\n    }\n    if (_instance.returnOptions) {\n      _writer.writeMessage(\n        8,\n        _instance.returnOptions as any,\n        TranscriptionReturnOptions.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _s2tPipelineId?: string;\n  private _ctcDecoding?: CTCDecoding;\n  private _languageModelName?: string;\n  private _postProcessing?: PostProcessingOptions;\n  private _utteranceDetection?: UtteranceDetectionOptions;\n  private _pyannote?: Pyannote;\n  private _matchbox?: Matchbox;\n  private _returnOptions?: TranscriptionReturnOptions;\n\n  private _oneofLanguageModelName: TranscribeRequestConfig.OneofLanguageModelNameCase =\n    TranscribeRequestConfig.OneofLanguageModelNameCase.none;\n  private _oneofPostProcessing: TranscribeRequestConfig.OneofPostProcessingCase =\n    TranscribeRequestConfig.OneofPostProcessingCase.none;\n  private _oneofUtteranceDetection: TranscribeRequestConfig.OneofUtteranceDetectionCase =\n    TranscribeRequestConfig.OneofUtteranceDetectionCase.none;\n  private _voiceActivityDetection: TranscribeRequestConfig.VoiceActivityDetectionCase =\n    TranscribeRequestConfig.VoiceActivityDetectionCase.none;\n  private _oneofReturnOptions: TranscribeRequestConfig.OneofReturnOptionsCase =\n    TranscribeRequestConfig.OneofReturnOptionsCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeRequestConfig to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeRequestConfig.AsObject>) {\n    _value = _value || {};\n    this.s2tPipelineId = _value.s2tPipelineId;\n    this.ctcDecoding = _value.ctcDecoding;\n    this.languageModelName = _value.languageModelName;\n    this.postProcessing = _value.postProcessing\n      ? new PostProcessingOptions(_value.postProcessing)\n      : undefined;\n    this.utteranceDetection = _value.utteranceDetection\n      ? new UtteranceDetectionOptions(_value.utteranceDetection)\n      : undefined;\n    this.pyannote = _value.pyannote ? new Pyannote(_value.pyannote) : undefined;\n    this.matchbox = _value.matchbox ? new Matchbox(_value.matchbox) : undefined;\n    this.returnOptions = _value.returnOptions\n      ? new TranscriptionReturnOptions(_value.returnOptions)\n      : undefined;\n    TranscribeRequestConfig.refineValues(this);\n  }\n  get s2tPipelineId(): string | undefined {\n    return this._s2tPipelineId;\n  }\n  set s2tPipelineId(value: string | undefined) {\n    this._s2tPipelineId = value;\n  }\n  get ctcDecoding(): CTCDecoding | undefined {\n    return this._ctcDecoding;\n  }\n  set ctcDecoding(value: CTCDecoding | undefined) {\n    this._ctcDecoding = value;\n  }\n  get languageModelName(): string | undefined {\n    return this._languageModelName;\n  }\n  set languageModelName(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofLanguageModelName =\n        TranscribeRequestConfig.OneofLanguageModelNameCase.languageModelName;\n    }\n    this._languageModelName = value;\n  }\n  get postProcessing(): PostProcessingOptions | undefined {\n    return this._postProcessing;\n  }\n  set postProcessing(value: PostProcessingOptions | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofPostProcessing =\n        TranscribeRequestConfig.OneofPostProcessingCase.postProcessing;\n    }\n    this._postProcessing = value;\n  }\n  get utteranceDetection(): UtteranceDetectionOptions | undefined {\n    return this._utteranceDetection;\n  }\n  set utteranceDetection(value: UtteranceDetectionOptions | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofUtteranceDetection =\n        TranscribeRequestConfig.OneofUtteranceDetectionCase.utteranceDetection;\n    }\n    this._utteranceDetection = value;\n  }\n  get pyannote(): Pyannote | undefined {\n    return this._pyannote;\n  }\n  set pyannote(value: Pyannote | undefined) {\n    if (value !== undefined && value !== null) {\n      this._matchbox = undefined;\n      this._voiceActivityDetection =\n        TranscribeRequestConfig.VoiceActivityDetectionCase.pyannote;\n    }\n    this._pyannote = value;\n  }\n  get matchbox(): Matchbox | undefined {\n    return this._matchbox;\n  }\n  set matchbox(value: Matchbox | undefined) {\n    if (value !== undefined && value !== null) {\n      this._pyannote = undefined;\n      this._voiceActivityDetection =\n        TranscribeRequestConfig.VoiceActivityDetectionCase.matchbox;\n    }\n    this._matchbox = value;\n  }\n  get returnOptions(): TranscriptionReturnOptions | undefined {\n    return this._returnOptions;\n  }\n  set returnOptions(value: TranscriptionReturnOptions | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofReturnOptions =\n        TranscribeRequestConfig.OneofReturnOptionsCase.returnOptions;\n    }\n    this._returnOptions = value;\n  }\n  get oneofLanguageModelName() {\n    return this._oneofLanguageModelName;\n  }\n  get oneofPostProcessing() {\n    return this._oneofPostProcessing;\n  }\n  get oneofUtteranceDetection() {\n    return this._oneofUtteranceDetection;\n  }\n  get voiceActivityDetection() {\n    return this._voiceActivityDetection;\n  }\n  get oneofReturnOptions() {\n    return this._oneofReturnOptions;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeRequestConfig.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeRequestConfig.AsObject {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      ctcDecoding: this.ctcDecoding,\n      languageModelName: this.languageModelName,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toObject()\n        : undefined,\n      utteranceDetection: this.utteranceDetection\n        ? this.utteranceDetection.toObject()\n        : undefined,\n      pyannote: this.pyannote ? this.pyannote.toObject() : undefined,\n      matchbox: this.matchbox ? this.matchbox.toObject() : undefined,\n      returnOptions: this.returnOptions\n        ? this.returnOptions.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeRequestConfig.AsProtobufJSON {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      ctcDecoding:\n        CTCDecoding[\n          this.ctcDecoding === null || this.ctcDecoding === undefined\n            ? 0\n            : this.ctcDecoding\n        ],\n      languageModelName:\n        this.languageModelName === null || this.languageModelName === undefined\n          ? null\n          : this.languageModelName,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toProtobufJSON(options)\n        : null,\n      utteranceDetection: this.utteranceDetection\n        ? this.utteranceDetection.toProtobufJSON(options)\n        : null,\n      pyannote: this.pyannote ? this.pyannote.toProtobufJSON(options) : null,\n      matchbox: this.matchbox ? this.matchbox.toProtobufJSON(options) : null,\n      returnOptions: this.returnOptions\n        ? this.returnOptions.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module TranscribeRequestConfig {\n  /**\n   * Standard JavaScript object representation for TranscribeRequestConfig\n   */\n  export interface AsObject {\n    s2tPipelineId?: string;\n    ctcDecoding?: CTCDecoding;\n    languageModelName?: string;\n    postProcessing?: PostProcessingOptions.AsObject;\n    utteranceDetection?: UtteranceDetectionOptions.AsObject;\n    pyannote?: Pyannote.AsObject;\n    matchbox?: Matchbox.AsObject;\n    returnOptions?: TranscriptionReturnOptions.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeRequestConfig\n   */\n  export interface AsProtobufJSON {\n    s2tPipelineId?: string;\n    ctcDecoding?: string;\n    languageModelName?: string | null;\n    postProcessing?: PostProcessingOptions.AsProtobufJSON | null;\n    utteranceDetection?: UtteranceDetectionOptions.AsProtobufJSON | null;\n    pyannote?: Pyannote.AsProtobufJSON | null;\n    matchbox?: Matchbox.AsProtobufJSON | null;\n    returnOptions?: TranscriptionReturnOptions.AsProtobufJSON | null;\n  }\n  export enum OneofLanguageModelNameCase {\n    none = 0,\n    languageModelName = 1\n  }\n  export enum OneofPostProcessingCase {\n    none = 0,\n    postProcessing = 1\n  }\n  export enum OneofUtteranceDetectionCase {\n    none = 0,\n    utteranceDetection = 1\n  }\n  export enum VoiceActivityDetectionCase {\n    none = 0,\n    pyannote = 1,\n    matchbox = 2\n  }\n  export enum OneofReturnOptionsCase {\n    none = 0,\n    returnOptions = 1\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscriptionReturnOptions\n */\nexport class TranscriptionReturnOptions implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscriptionReturnOptions';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscriptionReturnOptions();\n    TranscriptionReturnOptions.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscriptionReturnOptions) {\n    _instance.returnStartOfSpeech = _instance.returnStartOfSpeech || false;\n    _instance.returnAudio = _instance.returnAudio || false;\n    _instance.returnAlternativeTranscriptions =\n      _instance.returnAlternativeTranscriptions || false;\n    _instance.returnConfidenceScore = _instance.returnConfidenceScore || false;\n    _instance.returnWordTiming = _instance.returnWordTiming || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscriptionReturnOptions,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.returnStartOfSpeech = _reader.readBool();\n          break;\n        case 2:\n          _instance.returnAudio = _reader.readBool();\n          break;\n        case 3:\n          _instance.returnAlternativeTranscriptions = _reader.readBool();\n          break;\n        case 4:\n          _instance.returnConfidenceScore = _reader.readBool();\n          break;\n        case 8:\n          _instance.returnWordTiming = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscriptionReturnOptions.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscriptionReturnOptions,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.returnStartOfSpeech) {\n      _writer.writeBool(1, _instance.returnStartOfSpeech);\n    }\n    if (_instance.returnAudio) {\n      _writer.writeBool(2, _instance.returnAudio);\n    }\n    if (_instance.returnAlternativeTranscriptions) {\n      _writer.writeBool(3, _instance.returnAlternativeTranscriptions);\n    }\n    if (_instance.returnConfidenceScore) {\n      _writer.writeBool(4, _instance.returnConfidenceScore);\n    }\n    if (_instance.returnWordTiming) {\n      _writer.writeBool(8, _instance.returnWordTiming);\n    }\n  }\n\n  private _returnStartOfSpeech?: boolean;\n  private _returnAudio?: boolean;\n  private _returnAlternativeTranscriptions?: boolean;\n  private _returnConfidenceScore?: boolean;\n  private _returnWordTiming?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscriptionReturnOptions to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscriptionReturnOptions.AsObject>) {\n    _value = _value || {};\n    this.returnStartOfSpeech = _value.returnStartOfSpeech;\n    this.returnAudio = _value.returnAudio;\n    this.returnAlternativeTranscriptions =\n      _value.returnAlternativeTranscriptions;\n    this.returnConfidenceScore = _value.returnConfidenceScore;\n    this.returnWordTiming = _value.returnWordTiming;\n    TranscriptionReturnOptions.refineValues(this);\n  }\n  get returnStartOfSpeech(): boolean | undefined {\n    return this._returnStartOfSpeech;\n  }\n  set returnStartOfSpeech(value: boolean | undefined) {\n    this._returnStartOfSpeech = value;\n  }\n  get returnAudio(): boolean | undefined {\n    return this._returnAudio;\n  }\n  set returnAudio(value: boolean | undefined) {\n    this._returnAudio = value;\n  }\n  get returnAlternativeTranscriptions(): boolean | undefined {\n    return this._returnAlternativeTranscriptions;\n  }\n  set returnAlternativeTranscriptions(value: boolean | undefined) {\n    this._returnAlternativeTranscriptions = value;\n  }\n  get returnConfidenceScore(): boolean | undefined {\n    return this._returnConfidenceScore;\n  }\n  set returnConfidenceScore(value: boolean | undefined) {\n    this._returnConfidenceScore = value;\n  }\n  get returnWordTiming(): boolean | undefined {\n    return this._returnWordTiming;\n  }\n  set returnWordTiming(value: boolean | undefined) {\n    this._returnWordTiming = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscriptionReturnOptions.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscriptionReturnOptions.AsObject {\n    return {\n      returnStartOfSpeech: this.returnStartOfSpeech,\n      returnAudio: this.returnAudio,\n      returnAlternativeTranscriptions: this.returnAlternativeTranscriptions,\n      returnConfidenceScore: this.returnConfidenceScore,\n      returnWordTiming: this.returnWordTiming\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscriptionReturnOptions.AsProtobufJSON {\n    return {\n      returnStartOfSpeech: this.returnStartOfSpeech,\n      returnAudio: this.returnAudio,\n      returnAlternativeTranscriptions: this.returnAlternativeTranscriptions,\n      returnConfidenceScore: this.returnConfidenceScore,\n      returnWordTiming: this.returnWordTiming\n    };\n  }\n}\nexport module TranscriptionReturnOptions {\n  /**\n   * Standard JavaScript object representation for TranscriptionReturnOptions\n   */\n  export interface AsObject {\n    returnStartOfSpeech?: boolean;\n    returnAudio?: boolean;\n    returnAlternativeTranscriptions?: boolean;\n    returnConfidenceScore?: boolean;\n    returnWordTiming?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscriptionReturnOptions\n   */\n  export interface AsProtobufJSON {\n    returnStartOfSpeech?: boolean;\n    returnAudio?: boolean;\n    returnAlternativeTranscriptions?: boolean;\n    returnConfidenceScore?: boolean;\n    returnWordTiming?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.UtteranceDetectionOptions\n */\nexport class UtteranceDetectionOptions implements GrpcMessage {\n  static id = 'ondewo.s2t.UtteranceDetectionOptions';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new UtteranceDetectionOptions();\n    UtteranceDetectionOptions.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: UtteranceDetectionOptions) {\n    _instance.startOfUtteranceThreshold =\n      _instance.startOfUtteranceThreshold || 0;\n    _instance.endOfUtteranceThreshold = _instance.endOfUtteranceThreshold || 0;\n    _instance.nextChunkTimeout = _instance.nextChunkTimeout || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: UtteranceDetectionOptions,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.transcribeNotFinal = _reader.readBool();\n          break;\n        case 2:\n          _instance.startOfUtteranceThreshold = _reader.readFloat();\n          break;\n        case 3:\n          _instance.endOfUtteranceThreshold = _reader.readFloat();\n          break;\n        case 4:\n          _instance.nextChunkTimeout = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    UtteranceDetectionOptions.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: UtteranceDetectionOptions,\n    _writer: BinaryWriter\n  ) {\n    if (\n      _instance.transcribeNotFinal ||\n      _instance.transcribeNotFinal === false\n    ) {\n      _writer.writeBool(1, _instance.transcribeNotFinal);\n    }\n    if (_instance.startOfUtteranceThreshold) {\n      _writer.writeFloat(2, _instance.startOfUtteranceThreshold);\n    }\n    if (_instance.endOfUtteranceThreshold) {\n      _writer.writeFloat(3, _instance.endOfUtteranceThreshold);\n    }\n    if (_instance.nextChunkTimeout) {\n      _writer.writeFloat(4, _instance.nextChunkTimeout);\n    }\n  }\n\n  private _transcribeNotFinal?: boolean;\n  private _startOfUtteranceThreshold?: number;\n  private _endOfUtteranceThreshold?: number;\n  private _nextChunkTimeout?: number;\n\n  private _oneofTranscribeNotFinal: UtteranceDetectionOptions.OneofTranscribeNotFinalCase =\n    UtteranceDetectionOptions.OneofTranscribeNotFinalCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of UtteranceDetectionOptions to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<UtteranceDetectionOptions.AsObject>) {\n    _value = _value || {};\n    this.transcribeNotFinal = _value.transcribeNotFinal;\n    this.startOfUtteranceThreshold = _value.startOfUtteranceThreshold;\n    this.endOfUtteranceThreshold = _value.endOfUtteranceThreshold;\n    this.nextChunkTimeout = _value.nextChunkTimeout;\n    UtteranceDetectionOptions.refineValues(this);\n  }\n  get transcribeNotFinal(): boolean | undefined {\n    return this._transcribeNotFinal;\n  }\n  set transcribeNotFinal(value: boolean | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofTranscribeNotFinal =\n        UtteranceDetectionOptions.OneofTranscribeNotFinalCase.transcribeNotFinal;\n    }\n    this._transcribeNotFinal = value;\n  }\n  get startOfUtteranceThreshold(): number | undefined {\n    return this._startOfUtteranceThreshold;\n  }\n  set startOfUtteranceThreshold(value: number | undefined) {\n    this._startOfUtteranceThreshold = value;\n  }\n  get endOfUtteranceThreshold(): number | undefined {\n    return this._endOfUtteranceThreshold;\n  }\n  set endOfUtteranceThreshold(value: number | undefined) {\n    this._endOfUtteranceThreshold = value;\n  }\n  get nextChunkTimeout(): number | undefined {\n    return this._nextChunkTimeout;\n  }\n  set nextChunkTimeout(value: number | undefined) {\n    this._nextChunkTimeout = value;\n  }\n  get oneofTranscribeNotFinal() {\n    return this._oneofTranscribeNotFinal;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    UtteranceDetectionOptions.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): UtteranceDetectionOptions.AsObject {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold,\n      nextChunkTimeout: this.nextChunkTimeout\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): UtteranceDetectionOptions.AsProtobufJSON {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold,\n      nextChunkTimeout: this.nextChunkTimeout\n    };\n  }\n}\nexport module UtteranceDetectionOptions {\n  /**\n   * Standard JavaScript object representation for UtteranceDetectionOptions\n   */\n  export interface AsObject {\n    transcribeNotFinal?: boolean;\n    startOfUtteranceThreshold?: number;\n    endOfUtteranceThreshold?: number;\n    nextChunkTimeout?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for UtteranceDetectionOptions\n   */\n  export interface AsProtobufJSON {\n    transcribeNotFinal?: boolean;\n    startOfUtteranceThreshold?: number;\n    endOfUtteranceThreshold?: number;\n    nextChunkTimeout?: number;\n  }\n  export enum OneofTranscribeNotFinalCase {\n    none = 0,\n    transcribeNotFinal = 1\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PostProcessingOptions\n */\nexport class PostProcessingOptions implements GrpcMessage {\n  static id = 'ondewo.s2t.PostProcessingOptions';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PostProcessingOptions();\n    PostProcessingOptions.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PostProcessingOptions) {\n    _instance.spellingCorrection = _instance.spellingCorrection || false;\n    _instance.normalize = _instance.normalize || false;\n    _instance.config = _instance.config || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PostProcessingOptions,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.spellingCorrection = _reader.readBool();\n          break;\n        case 2:\n          _instance.normalize = _reader.readBool();\n          break;\n        case 3:\n          _instance.config = new PostProcessing();\n          _reader.readMessage(\n            _instance.config,\n            PostProcessing.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PostProcessingOptions.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PostProcessingOptions,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.spellingCorrection) {\n      _writer.writeBool(1, _instance.spellingCorrection);\n    }\n    if (_instance.normalize) {\n      _writer.writeBool(2, _instance.normalize);\n    }\n    if (_instance.config) {\n      _writer.writeMessage(\n        3,\n        _instance.config as any,\n        PostProcessing.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _spellingCorrection?: boolean;\n  private _normalize?: boolean;\n  private _config?: PostProcessing;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PostProcessingOptions to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PostProcessingOptions.AsObject>) {\n    _value = _value || {};\n    this.spellingCorrection = _value.spellingCorrection;\n    this.normalize = _value.normalize;\n    this.config = _value.config ? new PostProcessing(_value.config) : undefined;\n    PostProcessingOptions.refineValues(this);\n  }\n  get spellingCorrection(): boolean | undefined {\n    return this._spellingCorrection;\n  }\n  set spellingCorrection(value: boolean | undefined) {\n    this._spellingCorrection = value;\n  }\n  get normalize(): boolean | undefined {\n    return this._normalize;\n  }\n  set normalize(value: boolean | undefined) {\n    this._normalize = value;\n  }\n  get config(): PostProcessing | undefined {\n    return this._config;\n  }\n  set config(value: PostProcessing | undefined) {\n    this._config = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PostProcessingOptions.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PostProcessingOptions.AsObject {\n    return {\n      spellingCorrection: this.spellingCorrection,\n      normalize: this.normalize,\n      config: this.config ? this.config.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PostProcessingOptions.AsProtobufJSON {\n    return {\n      spellingCorrection: this.spellingCorrection,\n      normalize: this.normalize,\n      config: this.config ? this.config.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module PostProcessingOptions {\n  /**\n   * Standard JavaScript object representation for PostProcessingOptions\n   */\n  export interface AsObject {\n    spellingCorrection?: boolean;\n    normalize?: boolean;\n    config?: PostProcessing.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for PostProcessingOptions\n   */\n  export interface AsProtobufJSON {\n    spellingCorrection?: boolean;\n    normalize?: boolean;\n    config?: PostProcessing.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeStreamRequest\n */\nexport class TranscribeStreamRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeStreamRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeStreamRequest();\n    TranscribeStreamRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeStreamRequest) {\n    _instance.audioChunk = _instance.audioChunk || new Uint8Array();\n    _instance.endOfStream = _instance.endOfStream || false;\n    _instance.config = _instance.config || undefined;\n    _instance.muteAudio = _instance.muteAudio || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeStreamRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.audioChunk = _reader.readBytes();\n          break;\n        case 2:\n          _instance.endOfStream = _reader.readBool();\n          break;\n        case 3:\n          _instance.config = new TranscribeRequestConfig();\n          _reader.readMessage(\n            _instance.config,\n            TranscribeRequestConfig.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.muteAudio = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeStreamRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeStreamRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.audioChunk && _instance.audioChunk.length) {\n      _writer.writeBytes(1, _instance.audioChunk);\n    }\n    if (_instance.endOfStream) {\n      _writer.writeBool(2, _instance.endOfStream);\n    }\n    if (_instance.config) {\n      _writer.writeMessage(\n        3,\n        _instance.config as any,\n        TranscribeRequestConfig.serializeBinaryToWriter\n      );\n    }\n    if (_instance.muteAudio) {\n      _writer.writeBool(4, _instance.muteAudio);\n    }\n  }\n\n  private _audioChunk?: Uint8Array;\n  private _endOfStream?: boolean;\n  private _config?: TranscribeRequestConfig;\n  private _muteAudio?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeStreamRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeStreamRequest.AsObject>) {\n    _value = _value || {};\n    this.audioChunk = _value.audioChunk;\n    this.endOfStream = _value.endOfStream;\n    this.config = _value.config\n      ? new TranscribeRequestConfig(_value.config)\n      : undefined;\n    this.muteAudio = _value.muteAudio;\n    TranscribeStreamRequest.refineValues(this);\n  }\n  get audioChunk(): Uint8Array | undefined {\n    return this._audioChunk;\n  }\n  set audioChunk(value: Uint8Array | undefined) {\n    this._audioChunk = value;\n  }\n  get endOfStream(): boolean | undefined {\n    return this._endOfStream;\n  }\n  set endOfStream(value: boolean | undefined) {\n    this._endOfStream = value;\n  }\n  get config(): TranscribeRequestConfig | undefined {\n    return this._config;\n  }\n  set config(value: TranscribeRequestConfig | undefined) {\n    this._config = value;\n  }\n  get muteAudio(): boolean | undefined {\n    return this._muteAudio;\n  }\n  set muteAudio(value: boolean | undefined) {\n    this._muteAudio = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeStreamRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeStreamRequest.AsObject {\n    return {\n      audioChunk: this.audioChunk\n        ? this.audioChunk.subarray(0)\n        : new Uint8Array(),\n      endOfStream: this.endOfStream,\n      config: this.config ? this.config.toObject() : undefined,\n      muteAudio: this.muteAudio\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeStreamRequest.AsProtobufJSON {\n    return {\n      audioChunk: this.audioChunk ? uint8ArrayToBase64(this.audioChunk) : '',\n      endOfStream: this.endOfStream,\n      config: this.config ? this.config.toProtobufJSON(options) : null,\n      muteAudio: this.muteAudio\n    };\n  }\n}\nexport module TranscribeStreamRequest {\n  /**\n   * Standard JavaScript object representation for TranscribeStreamRequest\n   */\n  export interface AsObject {\n    audioChunk?: Uint8Array;\n    endOfStream?: boolean;\n    config?: TranscribeRequestConfig.AsObject;\n    muteAudio?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeStreamRequest\n   */\n  export interface AsProtobufJSON {\n    audioChunk?: string;\n    endOfStream?: boolean;\n    config?: TranscribeRequestConfig.AsProtobufJSON | null;\n    muteAudio?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Transcription\n */\nexport class Transcription implements GrpcMessage {\n  static id = 'ondewo.s2t.Transcription';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Transcription();\n    Transcription.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Transcription) {\n    _instance.transcription = _instance.transcription || '';\n    _instance.confidenceScore = _instance.confidenceScore || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Transcription,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.transcription = _reader.readString();\n          break;\n        case 2:\n          _instance.confidenceScore = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Transcription.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Transcription,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcription) {\n      _writer.writeString(1, _instance.transcription);\n    }\n    if (_instance.confidenceScore) {\n      _writer.writeFloat(2, _instance.confidenceScore);\n    }\n  }\n\n  private _transcription?: string;\n  private _confidenceScore?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Transcription to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Transcription.AsObject>) {\n    _value = _value || {};\n    this.transcription = _value.transcription;\n    this.confidenceScore = _value.confidenceScore;\n    Transcription.refineValues(this);\n  }\n  get transcription(): string | undefined {\n    return this._transcription;\n  }\n  set transcription(value: string | undefined) {\n    this._transcription = value;\n  }\n  get confidenceScore(): number | undefined {\n    return this._confidenceScore;\n  }\n  set confidenceScore(value: number | undefined) {\n    this._confidenceScore = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Transcription.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Transcription.AsObject {\n    return {\n      transcription: this.transcription,\n      confidenceScore: this.confidenceScore\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Transcription.AsProtobufJSON {\n    return {\n      transcription: this.transcription,\n      confidenceScore: this.confidenceScore\n    };\n  }\n}\nexport module Transcription {\n  /**\n   * Standard JavaScript object representation for Transcription\n   */\n  export interface AsObject {\n    transcription?: string;\n    confidenceScore?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Transcription\n   */\n  export interface AsProtobufJSON {\n    transcription?: string;\n    confidenceScore?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeStreamResponse\n */\nexport class TranscribeStreamResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeStreamResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeStreamResponse();\n    TranscribeStreamResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeStreamResponse) {\n    _instance.transcriptions = _instance.transcriptions || [];\n    _instance.time = _instance.time || 0;\n    _instance.final = _instance.final || false;\n    _instance.returnAudio = _instance.returnAudio || false;\n    _instance.audio = _instance.audio || new Uint8Array();\n    _instance.utteranceStart = _instance.utteranceStart || false;\n    _instance.audioUuid = _instance.audioUuid || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeStreamResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Transcription();\n          _reader.readMessage(\n            messageInitializer1,\n            Transcription.deserializeBinaryFromReader\n          );\n          (_instance.transcriptions = _instance.transcriptions || []).push(\n            messageInitializer1\n          );\n          break;\n        case 2:\n          _instance.time = _reader.readFloat();\n          break;\n        case 3:\n          _instance.final = _reader.readBool();\n          break;\n        case 4:\n          _instance.returnAudio = _reader.readBool();\n          break;\n        case 5:\n          _instance.audio = _reader.readBytes();\n          break;\n        case 6:\n          _instance.utteranceStart = _reader.readBool();\n          break;\n        case 7:\n          _instance.audioUuid = _reader.readString();\n          break;\n        case 8:\n          _instance.config = new TranscribeRequestConfig();\n          _reader.readMessage(\n            _instance.config,\n            TranscribeRequestConfig.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeStreamResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeStreamResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcriptions && _instance.transcriptions.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.transcriptions as any,\n        Transcription.serializeBinaryToWriter\n      );\n    }\n    if (_instance.time) {\n      _writer.writeFloat(2, _instance.time);\n    }\n    if (_instance.final) {\n      _writer.writeBool(3, _instance.final);\n    }\n    if (_instance.returnAudio) {\n      _writer.writeBool(4, _instance.returnAudio);\n    }\n    if (_instance.audio && _instance.audio.length) {\n      _writer.writeBytes(5, _instance.audio);\n    }\n    if (_instance.utteranceStart) {\n      _writer.writeBool(6, _instance.utteranceStart);\n    }\n    if (_instance.audioUuid) {\n      _writer.writeString(7, _instance.audioUuid);\n    }\n    if (_instance.config) {\n      _writer.writeMessage(\n        8,\n        _instance.config as any,\n        TranscribeRequestConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _transcriptions?: Transcription[];\n  private _time?: number;\n  private _final?: boolean;\n  private _returnAudio?: boolean;\n  private _audio?: Uint8Array;\n  private _utteranceStart?: boolean;\n  private _audioUuid?: string;\n  private _config?: TranscribeRequestConfig;\n\n  private _oneofConfig: TranscribeStreamResponse.OneofConfigCase =\n    TranscribeStreamResponse.OneofConfigCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeStreamResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeStreamResponse.AsObject>) {\n    _value = _value || {};\n    this.transcriptions = (_value.transcriptions || []).map(\n      m => new Transcription(m)\n    );\n    this.time = _value.time;\n    this.final = _value.final;\n    this.returnAudio = _value.returnAudio;\n    this.audio = _value.audio;\n    this.utteranceStart = _value.utteranceStart;\n    this.audioUuid = _value.audioUuid;\n    this.config = _value.config\n      ? new TranscribeRequestConfig(_value.config)\n      : undefined;\n    TranscribeStreamResponse.refineValues(this);\n  }\n  get transcriptions(): Transcription[] | undefined {\n    return this._transcriptions;\n  }\n  set transcriptions(value: Transcription[] | undefined) {\n    this._transcriptions = value;\n  }\n  get time(): number | undefined {\n    return this._time;\n  }\n  set time(value: number | undefined) {\n    this._time = value;\n  }\n  get final(): boolean | undefined {\n    return this._final;\n  }\n  set final(value: boolean | undefined) {\n    this._final = value;\n  }\n  get returnAudio(): boolean | undefined {\n    return this._returnAudio;\n  }\n  set returnAudio(value: boolean | undefined) {\n    this._returnAudio = value;\n  }\n  get audio(): Uint8Array | undefined {\n    return this._audio;\n  }\n  set audio(value: Uint8Array | undefined) {\n    this._audio = value;\n  }\n  get utteranceStart(): boolean | undefined {\n    return this._utteranceStart;\n  }\n  set utteranceStart(value: boolean | undefined) {\n    this._utteranceStart = value;\n  }\n  get audioUuid(): string | undefined {\n    return this._audioUuid;\n  }\n  set audioUuid(value: string | undefined) {\n    this._audioUuid = value;\n  }\n  get config(): TranscribeRequestConfig | undefined {\n    return this._config;\n  }\n  set config(value: TranscribeRequestConfig | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofConfig = TranscribeStreamResponse.OneofConfigCase.config;\n    }\n    this._config = value;\n  }\n  get oneofConfig() {\n    return this._oneofConfig;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeStreamResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeStreamResponse.AsObject {\n    return {\n      transcriptions: (this.transcriptions || []).map(m => m.toObject()),\n      time: this.time,\n      final: this.final,\n      returnAudio: this.returnAudio,\n      audio: this.audio ? this.audio.subarray(0) : new Uint8Array(),\n      utteranceStart: this.utteranceStart,\n      audioUuid: this.audioUuid,\n      config: this.config ? this.config.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeStreamResponse.AsProtobufJSON {\n    return {\n      transcriptions: (this.transcriptions || []).map(m =>\n        m.toProtobufJSON(options)\n      ),\n      time: this.time,\n      final: this.final,\n      returnAudio: this.returnAudio,\n      audio: this.audio ? uint8ArrayToBase64(this.audio) : '',\n      utteranceStart: this.utteranceStart,\n      audioUuid: this.audioUuid,\n      config: this.config ? this.config.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module TranscribeStreamResponse {\n  /**\n   * Standard JavaScript object representation for TranscribeStreamResponse\n   */\n  export interface AsObject {\n    transcriptions?: Transcription.AsObject[];\n    time?: number;\n    final?: boolean;\n    returnAudio?: boolean;\n    audio?: Uint8Array;\n    utteranceStart?: boolean;\n    audioUuid?: string;\n    config?: TranscribeRequestConfig.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeStreamResponse\n   */\n  export interface AsProtobufJSON {\n    transcriptions?: Transcription.AsProtobufJSON[] | null;\n    time?: number;\n    final?: boolean;\n    returnAudio?: boolean;\n    audio?: string;\n    utteranceStart?: boolean;\n    audioUuid?: string;\n    config?: TranscribeRequestConfig.AsProtobufJSON | null;\n  }\n  export enum OneofConfigCase {\n    none = 0,\n    config = 1\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeFileRequest\n */\nexport class TranscribeFileRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeFileRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeFileRequest();\n    TranscribeFileRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeFileRequest) {\n    _instance.audioFile = _instance.audioFile || new Uint8Array();\n    _instance.config = _instance.config || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeFileRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.audioFile = _reader.readBytes();\n          break;\n        case 2:\n          _instance.config = new TranscribeRequestConfig();\n          _reader.readMessage(\n            _instance.config,\n            TranscribeRequestConfig.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeFileRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeFileRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.audioFile && _instance.audioFile.length) {\n      _writer.writeBytes(1, _instance.audioFile);\n    }\n    if (_instance.config) {\n      _writer.writeMessage(\n        2,\n        _instance.config as any,\n        TranscribeRequestConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _audioFile?: Uint8Array;\n  private _config?: TranscribeRequestConfig;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeFileRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeFileRequest.AsObject>) {\n    _value = _value || {};\n    this.audioFile = _value.audioFile;\n    this.config = _value.config\n      ? new TranscribeRequestConfig(_value.config)\n      : undefined;\n    TranscribeFileRequest.refineValues(this);\n  }\n  get audioFile(): Uint8Array | undefined {\n    return this._audioFile;\n  }\n  set audioFile(value: Uint8Array | undefined) {\n    this._audioFile = value;\n  }\n  get config(): TranscribeRequestConfig | undefined {\n    return this._config;\n  }\n  set config(value: TranscribeRequestConfig | undefined) {\n    this._config = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeFileRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeFileRequest.AsObject {\n    return {\n      audioFile: this.audioFile ? this.audioFile.subarray(0) : new Uint8Array(),\n      config: this.config ? this.config.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeFileRequest.AsProtobufJSON {\n    return {\n      audioFile: this.audioFile ? uint8ArrayToBase64(this.audioFile) : '',\n      config: this.config ? this.config.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module TranscribeFileRequest {\n  /**\n   * Standard JavaScript object representation for TranscribeFileRequest\n   */\n  export interface AsObject {\n    audioFile?: Uint8Array;\n    config?: TranscribeRequestConfig.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeFileRequest\n   */\n  export interface AsProtobufJSON {\n    audioFile?: string;\n    config?: TranscribeRequestConfig.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeFileResponse\n */\nexport class TranscribeFileResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeFileResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeFileResponse();\n    TranscribeFileResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeFileResponse) {\n    _instance.transcriptions = _instance.transcriptions || [];\n    _instance.time = _instance.time || 0;\n    _instance.wordTiming = _instance.wordTiming || [];\n    _instance.audioUuid = _instance.audioUuid || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeFileResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Transcription();\n          _reader.readMessage(\n            messageInitializer1,\n            Transcription.deserializeBinaryFromReader\n          );\n          (_instance.transcriptions = _instance.transcriptions || []).push(\n            messageInitializer1\n          );\n          break;\n        case 2:\n          _instance.time = _reader.readFloat();\n          break;\n        case 3:\n          const messageInitializer3 = new WordTiming();\n          _reader.readMessage(\n            messageInitializer3,\n            WordTiming.deserializeBinaryFromReader\n          );\n          (_instance.wordTiming = _instance.wordTiming || []).push(\n            messageInitializer3\n          );\n          break;\n        case 4:\n          _instance.audioUuid = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeFileResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeFileResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcriptions && _instance.transcriptions.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.transcriptions as any,\n        Transcription.serializeBinaryToWriter\n      );\n    }\n    if (_instance.time) {\n      _writer.writeFloat(2, _instance.time);\n    }\n    if (_instance.wordTiming && _instance.wordTiming.length) {\n      _writer.writeRepeatedMessage(\n        3,\n        _instance.wordTiming as any,\n        WordTiming.serializeBinaryToWriter\n      );\n    }\n    if (_instance.audioUuid) {\n      _writer.writeString(4, _instance.audioUuid);\n    }\n  }\n\n  private _transcriptions?: Transcription[];\n  private _time?: number;\n  private _wordTiming?: WordTiming[];\n  private _audioUuid?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeFileResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeFileResponse.AsObject>) {\n    _value = _value || {};\n    this.transcriptions = (_value.transcriptions || []).map(\n      m => new Transcription(m)\n    );\n    this.time = _value.time;\n    this.wordTiming = (_value.wordTiming || []).map(m => new WordTiming(m));\n    this.audioUuid = _value.audioUuid;\n    TranscribeFileResponse.refineValues(this);\n  }\n  get transcriptions(): Transcription[] | undefined {\n    return this._transcriptions;\n  }\n  set transcriptions(value: Transcription[] | undefined) {\n    this._transcriptions = value;\n  }\n  get time(): number | undefined {\n    return this._time;\n  }\n  set time(value: number | undefined) {\n    this._time = value;\n  }\n  get wordTiming(): WordTiming[] | undefined {\n    return this._wordTiming;\n  }\n  set wordTiming(value: WordTiming[] | undefined) {\n    this._wordTiming = value;\n  }\n  get audioUuid(): string | undefined {\n    return this._audioUuid;\n  }\n  set audioUuid(value: string | undefined) {\n    this._audioUuid = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeFileResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeFileResponse.AsObject {\n    return {\n      transcriptions: (this.transcriptions || []).map(m => m.toObject()),\n      time: this.time,\n      wordTiming: (this.wordTiming || []).map(m => m.toObject()),\n      audioUuid: this.audioUuid\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeFileResponse.AsProtobufJSON {\n    return {\n      transcriptions: (this.transcriptions || []).map(m =>\n        m.toProtobufJSON(options)\n      ),\n      time: this.time,\n      wordTiming: (this.wordTiming || []).map(m => m.toProtobufJSON(options)),\n      audioUuid: this.audioUuid\n    };\n  }\n}\nexport module TranscribeFileResponse {\n  /**\n   * Standard JavaScript object representation for TranscribeFileResponse\n   */\n  export interface AsObject {\n    transcriptions?: Transcription.AsObject[];\n    time?: number;\n    wordTiming?: WordTiming.AsObject[];\n    audioUuid?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeFileResponse\n   */\n  export interface AsProtobufJSON {\n    transcriptions?: Transcription.AsProtobufJSON[] | null;\n    time?: number;\n    wordTiming?: WordTiming.AsProtobufJSON[] | null;\n    audioUuid?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.WordTiming\n */\nexport class WordTiming implements GrpcMessage {\n  static id = 'ondewo.s2t.WordTiming';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new WordTiming();\n    WordTiming.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: WordTiming) {\n    _instance.word = _instance.word || '';\n    _instance.begin = _instance.begin || 0;\n    _instance.end = _instance.end || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: WordTiming,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.word = _reader.readString();\n          break;\n        case 2:\n          _instance.begin = _reader.readInt32();\n          break;\n        case 3:\n          _instance.end = _reader.readInt32();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    WordTiming.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: WordTiming, _writer: BinaryWriter) {\n    if (_instance.word) {\n      _writer.writeString(1, _instance.word);\n    }\n    if (_instance.begin) {\n      _writer.writeInt32(2, _instance.begin);\n    }\n    if (_instance.end) {\n      _writer.writeInt32(3, _instance.end);\n    }\n  }\n\n  private _word?: string;\n  private _begin?: number;\n  private _end?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of WordTiming to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<WordTiming.AsObject>) {\n    _value = _value || {};\n    this.word = _value.word;\n    this.begin = _value.begin;\n    this.end = _value.end;\n    WordTiming.refineValues(this);\n  }\n  get word(): string | undefined {\n    return this._word;\n  }\n  set word(value: string | undefined) {\n    this._word = value;\n  }\n  get begin(): number | undefined {\n    return this._begin;\n  }\n  set begin(value: number | undefined) {\n    this._begin = value;\n  }\n  get end(): number | undefined {\n    return this._end;\n  }\n  set end(value: number | undefined) {\n    this._end = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    WordTiming.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): WordTiming.AsObject {\n    return {\n      word: this.word,\n      begin: this.begin,\n      end: this.end\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): WordTiming.AsProtobufJSON {\n    return {\n      word: this.word,\n      begin: this.begin,\n      end: this.end\n    };\n  }\n}\nexport module WordTiming {\n  /**\n   * Standard JavaScript object representation for WordTiming\n   */\n  export interface AsObject {\n    word?: string;\n    begin?: number;\n    end?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for WordTiming\n   */\n  export interface AsProtobufJSON {\n    word?: string;\n    begin?: number;\n    end?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.S2tPipelineId\n */\nexport class S2tPipelineId implements GrpcMessage {\n  static id = 'ondewo.s2t.S2tPipelineId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new S2tPipelineId();\n    S2tPipelineId.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: S2tPipelineId) {\n    _instance.id = _instance.id || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: S2tPipelineId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    S2tPipelineId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: S2tPipelineId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of S2tPipelineId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<S2tPipelineId.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    S2tPipelineId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    S2tPipelineId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): S2tPipelineId.AsObject {\n    return {\n      id: this.id\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): S2tPipelineId.AsProtobufJSON {\n    return {\n      id: this.id\n    };\n  }\n}\nexport module S2tPipelineId {\n  /**\n   * Standard JavaScript object representation for S2tPipelineId\n   */\n  export interface AsObject {\n    id?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for S2tPipelineId\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tPipelinesRequest\n */\nexport class ListS2tPipelinesRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tPipelinesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tPipelinesRequest();\n    ListS2tPipelinesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tPipelinesRequest) {\n    _instance.languages = _instance.languages || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.domains = _instance.domains || [];\n    _instance.registeredOnly = _instance.registeredOnly || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tPipelinesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        case 4:\n          _instance.registeredOnly = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tPipelinesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tPipelinesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(3, _instance.domains);\n    }\n    if (_instance.registeredOnly) {\n      _writer.writeBool(4, _instance.registeredOnly);\n    }\n  }\n\n  private _languages?: string[];\n  private _pipelineOwners?: string[];\n  private _domains?: string[];\n  private _registeredOnly?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tPipelinesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tPipelinesRequest.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.domains = (_value.domains || []).slice();\n    this.registeredOnly = _value.registeredOnly;\n    ListS2tPipelinesRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  get registeredOnly(): boolean | undefined {\n    return this._registeredOnly;\n  }\n  set registeredOnly(value: boolean | undefined) {\n    this._registeredOnly = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tPipelinesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tPipelinesRequest.AsObject {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      domains: (this.domains || []).slice(),\n      registeredOnly: this.registeredOnly\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tPipelinesRequest.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      domains: (this.domains || []).slice(),\n      registeredOnly: this.registeredOnly\n    };\n  }\n}\nexport module ListS2tPipelinesRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tPipelinesRequest\n   */\n  export interface AsObject {\n    languages?: string[];\n    pipelineOwners?: string[];\n    domains?: string[];\n    registeredOnly?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tPipelinesRequest\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n    pipelineOwners?: string[];\n    domains?: string[];\n    registeredOnly?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tPipelinesResponse\n */\nexport class ListS2tPipelinesResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tPipelinesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tPipelinesResponse();\n    ListS2tPipelinesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tPipelinesResponse) {\n    _instance.pipelineConfigs = _instance.pipelineConfigs || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tPipelinesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Speech2TextConfig();\n          _reader.readMessage(\n            messageInitializer1,\n            Speech2TextConfig.deserializeBinaryFromReader\n          );\n          (_instance.pipelineConfigs = _instance.pipelineConfigs || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tPipelinesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tPipelinesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelineConfigs && _instance.pipelineConfigs.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.pipelineConfigs as any,\n        Speech2TextConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _pipelineConfigs?: Speech2TextConfig[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tPipelinesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tPipelinesResponse.AsObject>) {\n    _value = _value || {};\n    this.pipelineConfigs = (_value.pipelineConfigs || []).map(\n      m => new Speech2TextConfig(m)\n    );\n    ListS2tPipelinesResponse.refineValues(this);\n  }\n  get pipelineConfigs(): Speech2TextConfig[] | undefined {\n    return this._pipelineConfigs;\n  }\n  set pipelineConfigs(value: Speech2TextConfig[] | undefined) {\n    this._pipelineConfigs = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tPipelinesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tPipelinesResponse.AsObject {\n    return {\n      pipelineConfigs: (this.pipelineConfigs || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tPipelinesResponse.AsProtobufJSON {\n    return {\n      pipelineConfigs: (this.pipelineConfigs || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module ListS2tPipelinesResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tPipelinesResponse\n   */\n  export interface AsObject {\n    pipelineConfigs?: Speech2TextConfig.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tPipelinesResponse\n   */\n  export interface AsProtobufJSON {\n    pipelineConfigs?: Speech2TextConfig.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguagesRequest\n */\nexport class ListS2tLanguagesRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguagesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguagesRequest();\n    ListS2tLanguagesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguagesRequest) {\n    _instance.domains = _instance.domains || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguagesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguagesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguagesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(1, _instance.domains);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n  }\n\n  private _domains?: string[];\n  private _pipelineOwners?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguagesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tLanguagesRequest.AsObject>) {\n    _value = _value || {};\n    this.domains = (_value.domains || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    ListS2tLanguagesRequest.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguagesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguagesRequest.AsObject {\n    return {\n      domains: (this.domains || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguagesRequest.AsProtobufJSON {\n    return {\n      domains: (this.domains || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n}\nexport module ListS2tLanguagesRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguagesRequest\n   */\n  export interface AsObject {\n    domains?: string[];\n    pipelineOwners?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguagesRequest\n   */\n  export interface AsProtobufJSON {\n    domains?: string[];\n    pipelineOwners?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguagesResponse\n */\nexport class ListS2tLanguagesResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguagesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguagesResponse();\n    ListS2tLanguagesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguagesResponse) {\n    _instance.languages = _instance.languages || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguagesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguagesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguagesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n  }\n\n  private _languages?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguagesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tLanguagesResponse.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    ListS2tLanguagesResponse.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguagesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguagesResponse.AsObject {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguagesResponse.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n}\nexport module ListS2tLanguagesResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguagesResponse\n   */\n  export interface AsObject {\n    languages?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguagesResponse\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tDomainsRequest\n */\nexport class ListS2tDomainsRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tDomainsRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tDomainsRequest();\n    ListS2tDomainsRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tDomainsRequest) {\n    _instance.languages = _instance.languages || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tDomainsRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tDomainsRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tDomainsRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n  }\n\n  private _languages?: string[];\n  private _pipelineOwners?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tDomainsRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tDomainsRequest.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    ListS2tDomainsRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tDomainsRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tDomainsRequest.AsObject {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tDomainsRequest.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n}\nexport module ListS2tDomainsRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tDomainsRequest\n   */\n  export interface AsObject {\n    languages?: string[];\n    pipelineOwners?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tDomainsRequest\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n    pipelineOwners?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tDomainsResponse\n */\nexport class ListS2tDomainsResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tDomainsResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tDomainsResponse();\n    ListS2tDomainsResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tDomainsResponse) {\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tDomainsResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tDomainsResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tDomainsResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(1, _instance.domains);\n    }\n  }\n\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tDomainsResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tDomainsResponse.AsObject>) {\n    _value = _value || {};\n    this.domains = (_value.domains || []).slice();\n    ListS2tDomainsResponse.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tDomainsResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tDomainsResponse.AsObject {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tDomainsResponse.AsProtobufJSON {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListS2tDomainsResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tDomainsResponse\n   */\n  export interface AsObject {\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tDomainsResponse\n   */\n  export interface AsProtobufJSON {\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.S2TGetServiceInfoResponse\n */\nexport class S2TGetServiceInfoResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.S2TGetServiceInfoResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new S2TGetServiceInfoResponse();\n    S2TGetServiceInfoResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: S2TGetServiceInfoResponse) {\n    _instance.version = _instance.version || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: S2TGetServiceInfoResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.version = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    S2TGetServiceInfoResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: S2TGetServiceInfoResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.version) {\n      _writer.writeString(1, _instance.version);\n    }\n  }\n\n  private _version?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of S2TGetServiceInfoResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<S2TGetServiceInfoResponse.AsObject>) {\n    _value = _value || {};\n    this.version = _value.version;\n    S2TGetServiceInfoResponse.refineValues(this);\n  }\n  get version(): string | undefined {\n    return this._version;\n  }\n  set version(value: string | undefined) {\n    this._version = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    S2TGetServiceInfoResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): S2TGetServiceInfoResponse.AsObject {\n    return {\n      version: this.version\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): S2TGetServiceInfoResponse.AsProtobufJSON {\n    return {\n      version: this.version\n    };\n  }\n}\nexport module S2TGetServiceInfoResponse {\n  /**\n   * Standard JavaScript object representation for S2TGetServiceInfoResponse\n   */\n  export interface AsObject {\n    version?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for S2TGetServiceInfoResponse\n   */\n  export interface AsProtobufJSON {\n    version?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Speech2TextConfig\n */\nexport class Speech2TextConfig implements GrpcMessage {\n  static id = 'ondewo.s2t.Speech2TextConfig';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Speech2TextConfig();\n    Speech2TextConfig.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Speech2TextConfig) {\n    _instance.id = _instance.id || '';\n    _instance.description = _instance.description || undefined;\n    _instance.active = _instance.active || false;\n    _instance.inference = _instance.inference || undefined;\n    _instance.streamingServer = _instance.streamingServer || undefined;\n    _instance.voiceActivityDetection =\n      _instance.voiceActivityDetection || undefined;\n    _instance.postProcessing = _instance.postProcessing || undefined;\n    _instance.logging = _instance.logging || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Speech2TextConfig,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          _instance.description = new S2TDescription();\n          _reader.readMessage(\n            _instance.description,\n            S2TDescription.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.active = _reader.readBool();\n          break;\n        case 4:\n          _instance.inference = new S2TInference();\n          _reader.readMessage(\n            _instance.inference,\n            S2TInference.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.streamingServer = new StreamingServer();\n          _reader.readMessage(\n            _instance.streamingServer,\n            StreamingServer.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.voiceActivityDetection = new VoiceActivityDetection();\n          _reader.readMessage(\n            _instance.voiceActivityDetection,\n            VoiceActivityDetection.deserializeBinaryFromReader\n          );\n          break;\n        case 7:\n          _instance.postProcessing = new PostProcessing();\n          _reader.readMessage(\n            _instance.postProcessing,\n            PostProcessing.deserializeBinaryFromReader\n          );\n          break;\n        case 8:\n          _instance.logging = new Logging();\n          _reader.readMessage(\n            _instance.logging,\n            Logging.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Speech2TextConfig.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Speech2TextConfig,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.description) {\n      _writer.writeMessage(\n        2,\n        _instance.description as any,\n        S2TDescription.serializeBinaryToWriter\n      );\n    }\n    if (_instance.active) {\n      _writer.writeBool(3, _instance.active);\n    }\n    if (_instance.inference) {\n      _writer.writeMessage(\n        4,\n        _instance.inference as any,\n        S2TInference.serializeBinaryToWriter\n      );\n    }\n    if (_instance.streamingServer) {\n      _writer.writeMessage(\n        5,\n        _instance.streamingServer as any,\n        StreamingServer.serializeBinaryToWriter\n      );\n    }\n    if (_instance.voiceActivityDetection) {\n      _writer.writeMessage(\n        6,\n        _instance.voiceActivityDetection as any,\n        VoiceActivityDetection.serializeBinaryToWriter\n      );\n    }\n    if (_instance.postProcessing) {\n      _writer.writeMessage(\n        7,\n        _instance.postProcessing as any,\n        PostProcessing.serializeBinaryToWriter\n      );\n    }\n    if (_instance.logging) {\n      _writer.writeMessage(\n        8,\n        _instance.logging as any,\n        Logging.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _description?: S2TDescription;\n  private _active?: boolean;\n  private _inference?: S2TInference;\n  private _streamingServer?: StreamingServer;\n  private _voiceActivityDetection?: VoiceActivityDetection;\n  private _postProcessing?: PostProcessing;\n  private _logging?: Logging;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Speech2TextConfig to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Speech2TextConfig.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.description = _value.description\n      ? new S2TDescription(_value.description)\n      : undefined;\n    this.active = _value.active;\n    this.inference = _value.inference\n      ? new S2TInference(_value.inference)\n      : undefined;\n    this.streamingServer = _value.streamingServer\n      ? new StreamingServer(_value.streamingServer)\n      : undefined;\n    this.voiceActivityDetection = _value.voiceActivityDetection\n      ? new VoiceActivityDetection(_value.voiceActivityDetection)\n      : undefined;\n    this.postProcessing = _value.postProcessing\n      ? new PostProcessing(_value.postProcessing)\n      : undefined;\n    this.logging = _value.logging ? new Logging(_value.logging) : undefined;\n    Speech2TextConfig.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get description(): S2TDescription | undefined {\n    return this._description;\n  }\n  set description(value: S2TDescription | undefined) {\n    this._description = value;\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get inference(): S2TInference | undefined {\n    return this._inference;\n  }\n  set inference(value: S2TInference | undefined) {\n    this._inference = value;\n  }\n  get streamingServer(): StreamingServer | undefined {\n    return this._streamingServer;\n  }\n  set streamingServer(value: StreamingServer | undefined) {\n    this._streamingServer = value;\n  }\n  get voiceActivityDetection(): VoiceActivityDetection | undefined {\n    return this._voiceActivityDetection;\n  }\n  set voiceActivityDetection(value: VoiceActivityDetection | undefined) {\n    this._voiceActivityDetection = value;\n  }\n  get postProcessing(): PostProcessing | undefined {\n    return this._postProcessing;\n  }\n  set postProcessing(value: PostProcessing | undefined) {\n    this._postProcessing = value;\n  }\n  get logging(): Logging | undefined {\n    return this._logging;\n  }\n  set logging(value: Logging | undefined) {\n    this._logging = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Speech2TextConfig.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Speech2TextConfig.AsObject {\n    return {\n      id: this.id,\n      description: this.description ? this.description.toObject() : undefined,\n      active: this.active,\n      inference: this.inference ? this.inference.toObject() : undefined,\n      streamingServer: this.streamingServer\n        ? this.streamingServer.toObject()\n        : undefined,\n      voiceActivityDetection: this.voiceActivityDetection\n        ? this.voiceActivityDetection.toObject()\n        : undefined,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toObject()\n        : undefined,\n      logging: this.logging ? this.logging.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Speech2TextConfig.AsProtobufJSON {\n    return {\n      id: this.id,\n      description: this.description\n        ? this.description.toProtobufJSON(options)\n        : null,\n      active: this.active,\n      inference: this.inference ? this.inference.toProtobufJSON(options) : null,\n      streamingServer: this.streamingServer\n        ? this.streamingServer.toProtobufJSON(options)\n        : null,\n      voiceActivityDetection: this.voiceActivityDetection\n        ? this.voiceActivityDetection.toProtobufJSON(options)\n        : null,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toProtobufJSON(options)\n        : null,\n      logging: this.logging ? this.logging.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module Speech2TextConfig {\n  /**\n   * Standard JavaScript object representation for Speech2TextConfig\n   */\n  export interface AsObject {\n    id?: string;\n    description?: S2TDescription.AsObject;\n    active?: boolean;\n    inference?: S2TInference.AsObject;\n    streamingServer?: StreamingServer.AsObject;\n    voiceActivityDetection?: VoiceActivityDetection.AsObject;\n    postProcessing?: PostProcessing.AsObject;\n    logging?: Logging.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Speech2TextConfig\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    description?: S2TDescription.AsProtobufJSON | null;\n    active?: boolean;\n    inference?: S2TInference.AsProtobufJSON | null;\n    streamingServer?: StreamingServer.AsProtobufJSON | null;\n    voiceActivityDetection?: VoiceActivityDetection.AsProtobufJSON | null;\n    postProcessing?: PostProcessing.AsProtobufJSON | null;\n    logging?: Logging.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.S2TDescription\n */\nexport class S2TDescription implements GrpcMessage {\n  static id = 'ondewo.s2t.S2TDescription';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new S2TDescription();\n    S2TDescription.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: S2TDescription) {\n    _instance.language = _instance.language || '';\n    _instance.pipelineOwner = _instance.pipelineOwner || '';\n    _instance.domain = _instance.domain || '';\n    _instance.comments = _instance.comments || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: S2TDescription,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        case 2:\n          _instance.pipelineOwner = _reader.readString();\n          break;\n        case 3:\n          _instance.domain = _reader.readString();\n          break;\n        case 4:\n          _instance.comments = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    S2TDescription.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: S2TDescription,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n    if (_instance.pipelineOwner) {\n      _writer.writeString(2, _instance.pipelineOwner);\n    }\n    if (_instance.domain) {\n      _writer.writeString(3, _instance.domain);\n    }\n    if (_instance.comments) {\n      _writer.writeString(4, _instance.comments);\n    }\n  }\n\n  private _language?: string;\n  private _pipelineOwner?: string;\n  private _domain?: string;\n  private _comments?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of S2TDescription to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<S2TDescription.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    this.pipelineOwner = _value.pipelineOwner;\n    this.domain = _value.domain;\n    this.comments = _value.comments;\n    S2TDescription.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get pipelineOwner(): string | undefined {\n    return this._pipelineOwner;\n  }\n  set pipelineOwner(value: string | undefined) {\n    this._pipelineOwner = value;\n  }\n  get domain(): string | undefined {\n    return this._domain;\n  }\n  set domain(value: string | undefined) {\n    this._domain = value;\n  }\n  get comments(): string | undefined {\n    return this._comments;\n  }\n  set comments(value: string | undefined) {\n    this._comments = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    S2TDescription.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): S2TDescription.AsObject {\n    return {\n      language: this.language,\n      pipelineOwner: this.pipelineOwner,\n      domain: this.domain,\n      comments: this.comments\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): S2TDescription.AsProtobufJSON {\n    return {\n      language: this.language,\n      pipelineOwner: this.pipelineOwner,\n      domain: this.domain,\n      comments: this.comments\n    };\n  }\n}\nexport module S2TDescription {\n  /**\n   * Standard JavaScript object representation for S2TDescription\n   */\n  export interface AsObject {\n    language?: string;\n    pipelineOwner?: string;\n    domain?: string;\n    comments?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for S2TDescription\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n    pipelineOwner?: string;\n    domain?: string;\n    comments?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.S2TInference\n */\nexport class S2TInference implements GrpcMessage {\n  static id = 'ondewo.s2t.S2TInference';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new S2TInference();\n    S2TInference.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: S2TInference) {\n    _instance.ctcAcousticModels = _instance.ctcAcousticModels || undefined;\n    _instance.languageModels = _instance.languageModels || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: S2TInference,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.ctcAcousticModels = new CtcAcousticModels();\n          _reader.readMessage(\n            _instance.ctcAcousticModels,\n            CtcAcousticModels.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.languageModels = new LanguageModels();\n          _reader.readMessage(\n            _instance.languageModels,\n            LanguageModels.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    S2TInference.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: S2TInference,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.ctcAcousticModels) {\n      _writer.writeMessage(\n        1,\n        _instance.ctcAcousticModels as any,\n        CtcAcousticModels.serializeBinaryToWriter\n      );\n    }\n    if (_instance.languageModels) {\n      _writer.writeMessage(\n        2,\n        _instance.languageModels as any,\n        LanguageModels.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _ctcAcousticModels?: CtcAcousticModels;\n  private _languageModels?: LanguageModels;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of S2TInference to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<S2TInference.AsObject>) {\n    _value = _value || {};\n    this.ctcAcousticModels = _value.ctcAcousticModels\n      ? new CtcAcousticModels(_value.ctcAcousticModels)\n      : undefined;\n    this.languageModels = _value.languageModels\n      ? new LanguageModels(_value.languageModels)\n      : undefined;\n    S2TInference.refineValues(this);\n  }\n  get ctcAcousticModels(): CtcAcousticModels | undefined {\n    return this._ctcAcousticModels;\n  }\n  set ctcAcousticModels(value: CtcAcousticModels | undefined) {\n    this._ctcAcousticModels = value;\n  }\n  get languageModels(): LanguageModels | undefined {\n    return this._languageModels;\n  }\n  set languageModels(value: LanguageModels | undefined) {\n    this._languageModels = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    S2TInference.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): S2TInference.AsObject {\n    return {\n      ctcAcousticModels: this.ctcAcousticModels\n        ? this.ctcAcousticModels.toObject()\n        : undefined,\n      languageModels: this.languageModels\n        ? this.languageModels.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): S2TInference.AsProtobufJSON {\n    return {\n      ctcAcousticModels: this.ctcAcousticModels\n        ? this.ctcAcousticModels.toProtobufJSON(options)\n        : null,\n      languageModels: this.languageModels\n        ? this.languageModels.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module S2TInference {\n  /**\n   * Standard JavaScript object representation for S2TInference\n   */\n  export interface AsObject {\n    ctcAcousticModels?: CtcAcousticModels.AsObject;\n    languageModels?: LanguageModels.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for S2TInference\n   */\n  export interface AsProtobufJSON {\n    ctcAcousticModels?: CtcAcousticModels.AsProtobufJSON | null;\n    languageModels?: LanguageModels.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.CtcAcousticModels\n */\nexport class CtcAcousticModels implements GrpcMessage {\n  static id = 'ondewo.s2t.CtcAcousticModels';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CtcAcousticModels();\n    CtcAcousticModels.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CtcAcousticModels) {\n    _instance.type = _instance.type || '';\n    _instance.quartznet = _instance.quartznet || undefined;\n    _instance.quartznetTriton = _instance.quartznetTriton || undefined;\n    _instance.wav2vec = _instance.wav2vec || undefined;\n    _instance.wav2vecTriton = _instance.wav2vecTriton || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CtcAcousticModels,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.quartznet = new Quartznet();\n          _reader.readMessage(\n            _instance.quartznet,\n            Quartznet.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.quartznetTriton = new QuartznetTriton();\n          _reader.readMessage(\n            _instance.quartznetTriton,\n            QuartznetTriton.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.wav2vec = new Wav2Vec();\n          _reader.readMessage(\n            _instance.wav2vec,\n            Wav2Vec.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.wav2vecTriton = new Wav2VecTriton();\n          _reader.readMessage(\n            _instance.wav2vecTriton,\n            Wav2VecTriton.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CtcAcousticModels.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CtcAcousticModels,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.quartznet) {\n      _writer.writeMessage(\n        2,\n        _instance.quartznet as any,\n        Quartznet.serializeBinaryToWriter\n      );\n    }\n    if (_instance.quartznetTriton) {\n      _writer.writeMessage(\n        3,\n        _instance.quartznetTriton as any,\n        QuartznetTriton.serializeBinaryToWriter\n      );\n    }\n    if (_instance.wav2vec) {\n      _writer.writeMessage(\n        4,\n        _instance.wav2vec as any,\n        Wav2Vec.serializeBinaryToWriter\n      );\n    }\n    if (_instance.wav2vecTriton) {\n      _writer.writeMessage(\n        5,\n        _instance.wav2vecTriton as any,\n        Wav2VecTriton.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _quartznet?: Quartznet;\n  private _quartznetTriton?: QuartznetTriton;\n  private _wav2vec?: Wav2Vec;\n  private _wav2vecTriton?: Wav2VecTriton;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CtcAcousticModels to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CtcAcousticModels.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.quartznet = _value.quartznet\n      ? new Quartznet(_value.quartznet)\n      : undefined;\n    this.quartznetTriton = _value.quartznetTriton\n      ? new QuartznetTriton(_value.quartznetTriton)\n      : undefined;\n    this.wav2vec = _value.wav2vec ? new Wav2Vec(_value.wav2vec) : undefined;\n    this.wav2vecTriton = _value.wav2vecTriton\n      ? new Wav2VecTriton(_value.wav2vecTriton)\n      : undefined;\n    CtcAcousticModels.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get quartznet(): Quartznet | undefined {\n    return this._quartznet;\n  }\n  set quartznet(value: Quartznet | undefined) {\n    this._quartznet = value;\n  }\n  get quartznetTriton(): QuartznetTriton | undefined {\n    return this._quartznetTriton;\n  }\n  set quartznetTriton(value: QuartznetTriton | undefined) {\n    this._quartznetTriton = value;\n  }\n  get wav2vec(): Wav2Vec | undefined {\n    return this._wav2vec;\n  }\n  set wav2vec(value: Wav2Vec | undefined) {\n    this._wav2vec = value;\n  }\n  get wav2vecTriton(): Wav2VecTriton | undefined {\n    return this._wav2vecTriton;\n  }\n  set wav2vecTriton(value: Wav2VecTriton | undefined) {\n    this._wav2vecTriton = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CtcAcousticModels.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CtcAcousticModels.AsObject {\n    return {\n      type: this.type,\n      quartznet: this.quartznet ? this.quartznet.toObject() : undefined,\n      quartznetTriton: this.quartznetTriton\n        ? this.quartznetTriton.toObject()\n        : undefined,\n      wav2vec: this.wav2vec ? this.wav2vec.toObject() : undefined,\n      wav2vecTriton: this.wav2vecTriton\n        ? this.wav2vecTriton.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CtcAcousticModels.AsProtobufJSON {\n    return {\n      type: this.type,\n      quartznet: this.quartznet ? this.quartznet.toProtobufJSON(options) : null,\n      quartznetTriton: this.quartznetTriton\n        ? this.quartznetTriton.toProtobufJSON(options)\n        : null,\n      wav2vec: this.wav2vec ? this.wav2vec.toProtobufJSON(options) : null,\n      wav2vecTriton: this.wav2vecTriton\n        ? this.wav2vecTriton.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module CtcAcousticModels {\n  /**\n   * Standard JavaScript object representation for CtcAcousticModels\n   */\n  export interface AsObject {\n    type?: string;\n    quartznet?: Quartznet.AsObject;\n    quartznetTriton?: QuartznetTriton.AsObject;\n    wav2vec?: Wav2Vec.AsObject;\n    wav2vecTriton?: Wav2VecTriton.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for CtcAcousticModels\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    quartznet?: Quartznet.AsProtobufJSON | null;\n    quartznetTriton?: QuartznetTriton.AsProtobufJSON | null;\n    wav2vec?: Wav2Vec.AsProtobufJSON | null;\n    wav2vecTriton?: Wav2VecTriton.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Wav2Vec\n */\nexport class Wav2Vec implements GrpcMessage {\n  static id = 'ondewo.s2t.Wav2Vec';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Wav2Vec();\n    Wav2Vec.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Wav2Vec) {\n    _instance.modelPath = _instance.modelPath || '';\n    _instance.useGpu = _instance.useGpu || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Wav2Vec,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.modelPath = _reader.readString();\n          break;\n        case 2:\n          _instance.useGpu = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Wav2Vec.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Wav2Vec, _writer: BinaryWriter) {\n    if (_instance.modelPath) {\n      _writer.writeString(1, _instance.modelPath);\n    }\n    if (_instance.useGpu) {\n      _writer.writeBool(2, _instance.useGpu);\n    }\n  }\n\n  private _modelPath?: string;\n  private _useGpu?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Wav2Vec to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Wav2Vec.AsObject>) {\n    _value = _value || {};\n    this.modelPath = _value.modelPath;\n    this.useGpu = _value.useGpu;\n    Wav2Vec.refineValues(this);\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Wav2Vec.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Wav2Vec.AsObject {\n    return {\n      modelPath: this.modelPath,\n      useGpu: this.useGpu\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Wav2Vec.AsProtobufJSON {\n    return {\n      modelPath: this.modelPath,\n      useGpu: this.useGpu\n    };\n  }\n}\nexport module Wav2Vec {\n  /**\n   * Standard JavaScript object representation for Wav2Vec\n   */\n  export interface AsObject {\n    modelPath?: string;\n    useGpu?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for Wav2Vec\n   */\n  export interface AsProtobufJSON {\n    modelPath?: string;\n    useGpu?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Wav2VecTriton\n */\nexport class Wav2VecTriton implements GrpcMessage {\n  static id = 'ondewo.s2t.Wav2VecTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Wav2VecTriton();\n    Wav2VecTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Wav2VecTriton) {\n    _instance.processorPath = _instance.processorPath || '';\n    _instance.tritonModelName = _instance.tritonModelName || '';\n    _instance.tritonModelVersion = _instance.tritonModelVersion || '';\n    _instance.checkStatusTimeout = _instance.checkStatusTimeout || '0';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Wav2VecTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.processorPath = _reader.readString();\n          break;\n        case 2:\n          _instance.tritonModelName = _reader.readString();\n          break;\n        case 3:\n          _instance.tritonModelVersion = _reader.readString();\n          break;\n        case 4:\n          _instance.checkStatusTimeout = _reader.readInt64String();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Wav2VecTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Wav2VecTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.processorPath) {\n      _writer.writeString(1, _instance.processorPath);\n    }\n    if (_instance.tritonModelName) {\n      _writer.writeString(2, _instance.tritonModelName);\n    }\n    if (_instance.tritonModelVersion) {\n      _writer.writeString(3, _instance.tritonModelVersion);\n    }\n    if (_instance.checkStatusTimeout) {\n      _writer.writeInt64String(4, _instance.checkStatusTimeout);\n    }\n  }\n\n  private _processorPath?: string;\n  private _tritonModelName?: string;\n  private _tritonModelVersion?: string;\n  private _checkStatusTimeout?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Wav2VecTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Wav2VecTriton.AsObject>) {\n    _value = _value || {};\n    this.processorPath = _value.processorPath;\n    this.tritonModelName = _value.tritonModelName;\n    this.tritonModelVersion = _value.tritonModelVersion;\n    this.checkStatusTimeout = _value.checkStatusTimeout;\n    Wav2VecTriton.refineValues(this);\n  }\n  get processorPath(): string | undefined {\n    return this._processorPath;\n  }\n  set processorPath(value: string | undefined) {\n    this._processorPath = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n  get tritonModelVersion(): string | undefined {\n    return this._tritonModelVersion;\n  }\n  set tritonModelVersion(value: string | undefined) {\n    this._tritonModelVersion = value;\n  }\n  get checkStatusTimeout(): string | undefined {\n    return this._checkStatusTimeout;\n  }\n  set checkStatusTimeout(value: string | undefined) {\n    this._checkStatusTimeout = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Wav2VecTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Wav2VecTriton.AsObject {\n    return {\n      processorPath: this.processorPath,\n      tritonModelName: this.tritonModelName,\n      tritonModelVersion: this.tritonModelVersion,\n      checkStatusTimeout: this.checkStatusTimeout\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Wav2VecTriton.AsProtobufJSON {\n    return {\n      processorPath: this.processorPath,\n      tritonModelName: this.tritonModelName,\n      tritonModelVersion: this.tritonModelVersion,\n      checkStatusTimeout: this.checkStatusTimeout\n    };\n  }\n}\nexport module Wav2VecTriton {\n  /**\n   * Standard JavaScript object representation for Wav2VecTriton\n   */\n  export interface AsObject {\n    processorPath?: string;\n    tritonModelName?: string;\n    tritonModelVersion?: string;\n    checkStatusTimeout?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Wav2VecTriton\n   */\n  export interface AsProtobufJSON {\n    processorPath?: string;\n    tritonModelName?: string;\n    tritonModelVersion?: string;\n    checkStatusTimeout?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Quartznet\n */\nexport class Quartznet implements GrpcMessage {\n  static id = 'ondewo.s2t.Quartznet';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Quartznet();\n    Quartznet.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Quartznet) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.loadType = _instance.loadType || '';\n    _instance.ptFiles = _instance.ptFiles || undefined;\n    _instance.ckptFile = _instance.ckptFile || undefined;\n    _instance.useGpu = _instance.useGpu || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Quartznet,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.loadType = _reader.readString();\n          break;\n        case 3:\n          _instance.ptFiles = new PtFiles();\n          _reader.readMessage(\n            _instance.ptFiles,\n            PtFiles.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.ckptFile = new CkptFile();\n          _reader.readMessage(\n            _instance.ckptFile,\n            CkptFile.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.useGpu = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Quartznet.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Quartznet, _writer: BinaryWriter) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.loadType) {\n      _writer.writeString(2, _instance.loadType);\n    }\n    if (_instance.ptFiles) {\n      _writer.writeMessage(\n        3,\n        _instance.ptFiles as any,\n        PtFiles.serializeBinaryToWriter\n      );\n    }\n    if (_instance.ckptFile) {\n      _writer.writeMessage(\n        4,\n        _instance.ckptFile as any,\n        CkptFile.serializeBinaryToWriter\n      );\n    }\n    if (_instance.useGpu) {\n      _writer.writeBool(5, _instance.useGpu);\n    }\n  }\n\n  private _configPath?: string;\n  private _loadType?: string;\n  private _ptFiles?: PtFiles;\n  private _ckptFile?: CkptFile;\n  private _useGpu?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Quartznet to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Quartznet.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.loadType = _value.loadType;\n    this.ptFiles = _value.ptFiles ? new PtFiles(_value.ptFiles) : undefined;\n    this.ckptFile = _value.ckptFile ? new CkptFile(_value.ckptFile) : undefined;\n    this.useGpu = _value.useGpu;\n    Quartznet.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get loadType(): string | undefined {\n    return this._loadType;\n  }\n  set loadType(value: string | undefined) {\n    this._loadType = value;\n  }\n  get ptFiles(): PtFiles | undefined {\n    return this._ptFiles;\n  }\n  set ptFiles(value: PtFiles | undefined) {\n    this._ptFiles = value;\n  }\n  get ckptFile(): CkptFile | undefined {\n    return this._ckptFile;\n  }\n  set ckptFile(value: CkptFile | undefined) {\n    this._ckptFile = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Quartznet.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Quartznet.AsObject {\n    return {\n      configPath: this.configPath,\n      loadType: this.loadType,\n      ptFiles: this.ptFiles ? this.ptFiles.toObject() : undefined,\n      ckptFile: this.ckptFile ? this.ckptFile.toObject() : undefined,\n      useGpu: this.useGpu\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Quartznet.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      loadType: this.loadType,\n      ptFiles: this.ptFiles ? this.ptFiles.toProtobufJSON(options) : null,\n      ckptFile: this.ckptFile ? this.ckptFile.toProtobufJSON(options) : null,\n      useGpu: this.useGpu\n    };\n  }\n}\nexport module Quartznet {\n  /**\n   * Standard JavaScript object representation for Quartznet\n   */\n  export interface AsObject {\n    configPath?: string;\n    loadType?: string;\n    ptFiles?: PtFiles.AsObject;\n    ckptFile?: CkptFile.AsObject;\n    useGpu?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for Quartznet\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    loadType?: string;\n    ptFiles?: PtFiles.AsProtobufJSON | null;\n    ckptFile?: CkptFile.AsProtobufJSON | null;\n    useGpu?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PtFiles\n */\nexport class PtFiles implements GrpcMessage {\n  static id = 'ondewo.s2t.PtFiles';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PtFiles();\n    PtFiles.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PtFiles) {\n    _instance.path = _instance.path || '';\n    _instance.step = _instance.step || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PtFiles,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.path = _reader.readString();\n          break;\n        case 2:\n          _instance.step = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PtFiles.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: PtFiles, _writer: BinaryWriter) {\n    if (_instance.path) {\n      _writer.writeString(1, _instance.path);\n    }\n    if (_instance.step) {\n      _writer.writeString(2, _instance.step);\n    }\n  }\n\n  private _path?: string;\n  private _step?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PtFiles to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PtFiles.AsObject>) {\n    _value = _value || {};\n    this.path = _value.path;\n    this.step = _value.step;\n    PtFiles.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get step(): string | undefined {\n    return this._step;\n  }\n  set step(value: string | undefined) {\n    this._step = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PtFiles.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PtFiles.AsObject {\n    return {\n      path: this.path,\n      step: this.step\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PtFiles.AsProtobufJSON {\n    return {\n      path: this.path,\n      step: this.step\n    };\n  }\n}\nexport module PtFiles {\n  /**\n   * Standard JavaScript object representation for PtFiles\n   */\n  export interface AsObject {\n    path?: string;\n    step?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for PtFiles\n   */\n  export interface AsProtobufJSON {\n    path?: string;\n    step?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.CkptFile\n */\nexport class CkptFile implements GrpcMessage {\n  static id = 'ondewo.s2t.CkptFile';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CkptFile();\n    CkptFile.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CkptFile) {\n    _instance.path = _instance.path || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CkptFile,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.path = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CkptFile.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: CkptFile, _writer: BinaryWriter) {\n    if (_instance.path) {\n      _writer.writeString(1, _instance.path);\n    }\n  }\n\n  private _path?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CkptFile to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CkptFile.AsObject>) {\n    _value = _value || {};\n    this.path = _value.path;\n    CkptFile.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CkptFile.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CkptFile.AsObject {\n    return {\n      path: this.path\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CkptFile.AsProtobufJSON {\n    return {\n      path: this.path\n    };\n  }\n}\nexport module CkptFile {\n  /**\n   * Standard JavaScript object representation for CkptFile\n   */\n  export interface AsObject {\n    path?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for CkptFile\n   */\n  export interface AsProtobufJSON {\n    path?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.QuartznetTriton\n */\nexport class QuartznetTriton implements GrpcMessage {\n  static id = 'ondewo.s2t.QuartznetTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new QuartznetTriton();\n    QuartznetTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: QuartznetTriton) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.tritonUrl = _instance.tritonUrl || '';\n    _instance.tritonModel = _instance.tritonModel || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: QuartznetTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.tritonUrl = _reader.readString();\n          break;\n        case 3:\n          _instance.tritonModel = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    QuartznetTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: QuartznetTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.tritonUrl) {\n      _writer.writeString(2, _instance.tritonUrl);\n    }\n    if (_instance.tritonModel) {\n      _writer.writeString(3, _instance.tritonModel);\n    }\n  }\n\n  private _configPath?: string;\n  private _tritonUrl?: string;\n  private _tritonModel?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of QuartznetTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<QuartznetTriton.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.tritonUrl = _value.tritonUrl;\n    this.tritonModel = _value.tritonModel;\n    QuartznetTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  get tritonModel(): string | undefined {\n    return this._tritonModel;\n  }\n  set tritonModel(value: string | undefined) {\n    this._tritonModel = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    QuartznetTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): QuartznetTriton.AsObject {\n    return {\n      configPath: this.configPath,\n      tritonUrl: this.tritonUrl,\n      tritonModel: this.tritonModel\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): QuartznetTriton.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      tritonUrl: this.tritonUrl,\n      tritonModel: this.tritonModel\n    };\n  }\n}\nexport module QuartznetTriton {\n  /**\n   * Standard JavaScript object representation for QuartznetTriton\n   */\n  export interface AsObject {\n    configPath?: string;\n    tritonUrl?: string;\n    tritonModel?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for QuartznetTriton\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    tritonUrl?: string;\n    tritonModel?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.LanguageModels\n */\nexport class LanguageModels implements GrpcMessage {\n  static id = 'ondewo.s2t.LanguageModels';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new LanguageModels();\n    LanguageModels.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: LanguageModels) {\n    _instance.path = _instance.path || '';\n    _instance.beamSize = _instance.beamSize || '0';\n    _instance.defaultLm = _instance.defaultLm || '';\n    _instance.beamSearchScorerAlpha = _instance.beamSearchScorerAlpha || 0;\n    _instance.beamSearchScorerBeta = _instance.beamSearchScorerBeta || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: LanguageModels,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.path = _reader.readString();\n          break;\n        case 2:\n          _instance.beamSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.defaultLm = _reader.readString();\n          break;\n        case 4:\n          _instance.beamSearchScorerAlpha = _reader.readFloat();\n          break;\n        case 5:\n          _instance.beamSearchScorerBeta = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    LanguageModels.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: LanguageModels,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.path) {\n      _writer.writeString(1, _instance.path);\n    }\n    if (_instance.beamSize) {\n      _writer.writeInt64String(2, _instance.beamSize);\n    }\n    if (_instance.defaultLm) {\n      _writer.writeString(3, _instance.defaultLm);\n    }\n    if (_instance.beamSearchScorerAlpha) {\n      _writer.writeFloat(4, _instance.beamSearchScorerAlpha);\n    }\n    if (_instance.beamSearchScorerBeta) {\n      _writer.writeFloat(5, _instance.beamSearchScorerBeta);\n    }\n  }\n\n  private _path?: string;\n  private _beamSize?: string;\n  private _defaultLm?: string;\n  private _beamSearchScorerAlpha?: number;\n  private _beamSearchScorerBeta?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of LanguageModels to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<LanguageModels.AsObject>) {\n    _value = _value || {};\n    this.path = _value.path;\n    this.beamSize = _value.beamSize;\n    this.defaultLm = _value.defaultLm;\n    this.beamSearchScorerAlpha = _value.beamSearchScorerAlpha;\n    this.beamSearchScorerBeta = _value.beamSearchScorerBeta;\n    LanguageModels.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get beamSize(): string | undefined {\n    return this._beamSize;\n  }\n  set beamSize(value: string | undefined) {\n    this._beamSize = value;\n  }\n  get defaultLm(): string | undefined {\n    return this._defaultLm;\n  }\n  set defaultLm(value: string | undefined) {\n    this._defaultLm = value;\n  }\n  get beamSearchScorerAlpha(): number | undefined {\n    return this._beamSearchScorerAlpha;\n  }\n  set beamSearchScorerAlpha(value: number | undefined) {\n    this._beamSearchScorerAlpha = value;\n  }\n  get beamSearchScorerBeta(): number | undefined {\n    return this._beamSearchScorerBeta;\n  }\n  set beamSearchScorerBeta(value: number | undefined) {\n    this._beamSearchScorerBeta = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    LanguageModels.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): LanguageModels.AsObject {\n    return {\n      path: this.path,\n      beamSize: this.beamSize,\n      defaultLm: this.defaultLm,\n      beamSearchScorerAlpha: this.beamSearchScorerAlpha,\n      beamSearchScorerBeta: this.beamSearchScorerBeta\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): LanguageModels.AsProtobufJSON {\n    return {\n      path: this.path,\n      beamSize: this.beamSize,\n      defaultLm: this.defaultLm,\n      beamSearchScorerAlpha: this.beamSearchScorerAlpha,\n      beamSearchScorerBeta: this.beamSearchScorerBeta\n    };\n  }\n}\nexport module LanguageModels {\n  /**\n   * Standard JavaScript object representation for LanguageModels\n   */\n  export interface AsObject {\n    path?: string;\n    beamSize?: string;\n    defaultLm?: string;\n    beamSearchScorerAlpha?: number;\n    beamSearchScorerBeta?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for LanguageModels\n   */\n  export interface AsProtobufJSON {\n    path?: string;\n    beamSize?: string;\n    defaultLm?: string;\n    beamSearchScorerAlpha?: number;\n    beamSearchScorerBeta?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.StreamingServer\n */\nexport class StreamingServer implements GrpcMessage {\n  static id = 'ondewo.s2t.StreamingServer';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new StreamingServer();\n    StreamingServer.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: StreamingServer) {\n    _instance.host = _instance.host || '';\n    _instance.port = _instance.port || '0';\n    _instance.outputStyle = _instance.outputStyle || '';\n    _instance.streamingSpeechRecognition =\n      _instance.streamingSpeechRecognition || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: StreamingServer,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.host = _reader.readString();\n          break;\n        case 2:\n          _instance.port = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.outputStyle = _reader.readString();\n          break;\n        case 4:\n          _instance.streamingSpeechRecognition = new StreamingSpeechRecognition();\n          _reader.readMessage(\n            _instance.streamingSpeechRecognition,\n            StreamingSpeechRecognition.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    StreamingServer.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: StreamingServer,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.host) {\n      _writer.writeString(1, _instance.host);\n    }\n    if (_instance.port) {\n      _writer.writeInt64String(2, _instance.port);\n    }\n    if (_instance.outputStyle) {\n      _writer.writeString(3, _instance.outputStyle);\n    }\n    if (_instance.streamingSpeechRecognition) {\n      _writer.writeMessage(\n        4,\n        _instance.streamingSpeechRecognition as any,\n        StreamingSpeechRecognition.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _host?: string;\n  private _port?: string;\n  private _outputStyle?: string;\n  private _streamingSpeechRecognition?: StreamingSpeechRecognition;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of StreamingServer to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<StreamingServer.AsObject>) {\n    _value = _value || {};\n    this.host = _value.host;\n    this.port = _value.port;\n    this.outputStyle = _value.outputStyle;\n    this.streamingSpeechRecognition = _value.streamingSpeechRecognition\n      ? new StreamingSpeechRecognition(_value.streamingSpeechRecognition)\n      : undefined;\n    StreamingServer.refineValues(this);\n  }\n  get host(): string | undefined {\n    return this._host;\n  }\n  set host(value: string | undefined) {\n    this._host = value;\n  }\n  get port(): string | undefined {\n    return this._port;\n  }\n  set port(value: string | undefined) {\n    this._port = value;\n  }\n  get outputStyle(): string | undefined {\n    return this._outputStyle;\n  }\n  set outputStyle(value: string | undefined) {\n    this._outputStyle = value;\n  }\n  get streamingSpeechRecognition(): StreamingSpeechRecognition | undefined {\n    return this._streamingSpeechRecognition;\n  }\n  set streamingSpeechRecognition(\n    value: StreamingSpeechRecognition | undefined\n  ) {\n    this._streamingSpeechRecognition = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    StreamingServer.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): StreamingServer.AsObject {\n    return {\n      host: this.host,\n      port: this.port,\n      outputStyle: this.outputStyle,\n      streamingSpeechRecognition: this.streamingSpeechRecognition\n        ? this.streamingSpeechRecognition.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): StreamingServer.AsProtobufJSON {\n    return {\n      host: this.host,\n      port: this.port,\n      outputStyle: this.outputStyle,\n      streamingSpeechRecognition: this.streamingSpeechRecognition\n        ? this.streamingSpeechRecognition.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module StreamingServer {\n  /**\n   * Standard JavaScript object representation for StreamingServer\n   */\n  export interface AsObject {\n    host?: string;\n    port?: string;\n    outputStyle?: string;\n    streamingSpeechRecognition?: StreamingSpeechRecognition.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for StreamingServer\n   */\n  export interface AsProtobufJSON {\n    host?: string;\n    port?: string;\n    outputStyle?: string;\n    streamingSpeechRecognition?: StreamingSpeechRecognition.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.StreamingSpeechRecognition\n */\nexport class StreamingSpeechRecognition implements GrpcMessage {\n  static id = 'ondewo.s2t.StreamingSpeechRecognition';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new StreamingSpeechRecognition();\n    StreamingSpeechRecognition.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: StreamingSpeechRecognition) {\n    _instance.transcribeNotFinal = _instance.transcribeNotFinal || false;\n    _instance.ctcDecodingMethod = _instance.ctcDecodingMethod || '';\n    _instance.samplingRate = _instance.samplingRate || '0';\n    _instance.minAudioChunkSize = _instance.minAudioChunkSize || '0';\n    _instance.startOfUtteranceThreshold =\n      _instance.startOfUtteranceThreshold || 0;\n    _instance.endOfUtteranceThreshold = _instance.endOfUtteranceThreshold || 0;\n    _instance.nextChunkTimeout = _instance.nextChunkTimeout || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: StreamingSpeechRecognition,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.transcribeNotFinal = _reader.readBool();\n          break;\n        case 2:\n          _instance.ctcDecodingMethod = _reader.readString();\n          break;\n        case 3:\n          _instance.samplingRate = _reader.readInt64String();\n          break;\n        case 4:\n          _instance.minAudioChunkSize = _reader.readInt64String();\n          break;\n        case 5:\n          _instance.startOfUtteranceThreshold = _reader.readFloat();\n          break;\n        case 6:\n          _instance.endOfUtteranceThreshold = _reader.readFloat();\n          break;\n        case 7:\n          _instance.nextChunkTimeout = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    StreamingSpeechRecognition.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: StreamingSpeechRecognition,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcribeNotFinal) {\n      _writer.writeBool(1, _instance.transcribeNotFinal);\n    }\n    if (_instance.ctcDecodingMethod) {\n      _writer.writeString(2, _instance.ctcDecodingMethod);\n    }\n    if (_instance.samplingRate) {\n      _writer.writeInt64String(3, _instance.samplingRate);\n    }\n    if (_instance.minAudioChunkSize) {\n      _writer.writeInt64String(4, _instance.minAudioChunkSize);\n    }\n    if (_instance.startOfUtteranceThreshold) {\n      _writer.writeFloat(5, _instance.startOfUtteranceThreshold);\n    }\n    if (_instance.endOfUtteranceThreshold) {\n      _writer.writeFloat(6, _instance.endOfUtteranceThreshold);\n    }\n    if (_instance.nextChunkTimeout) {\n      _writer.writeFloat(7, _instance.nextChunkTimeout);\n    }\n  }\n\n  private _transcribeNotFinal?: boolean;\n  private _ctcDecodingMethod?: string;\n  private _samplingRate?: string;\n  private _minAudioChunkSize?: string;\n  private _startOfUtteranceThreshold?: number;\n  private _endOfUtteranceThreshold?: number;\n  private _nextChunkTimeout?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of StreamingSpeechRecognition to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<StreamingSpeechRecognition.AsObject>) {\n    _value = _value || {};\n    this.transcribeNotFinal = _value.transcribeNotFinal;\n    this.ctcDecodingMethod = _value.ctcDecodingMethod;\n    this.samplingRate = _value.samplingRate;\n    this.minAudioChunkSize = _value.minAudioChunkSize;\n    this.startOfUtteranceThreshold = _value.startOfUtteranceThreshold;\n    this.endOfUtteranceThreshold = _value.endOfUtteranceThreshold;\n    this.nextChunkTimeout = _value.nextChunkTimeout;\n    StreamingSpeechRecognition.refineValues(this);\n  }\n  get transcribeNotFinal(): boolean | undefined {\n    return this._transcribeNotFinal;\n  }\n  set transcribeNotFinal(value: boolean | undefined) {\n    this._transcribeNotFinal = value;\n  }\n  get ctcDecodingMethod(): string | undefined {\n    return this._ctcDecodingMethod;\n  }\n  set ctcDecodingMethod(value: string | undefined) {\n    this._ctcDecodingMethod = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get minAudioChunkSize(): string | undefined {\n    return this._minAudioChunkSize;\n  }\n  set minAudioChunkSize(value: string | undefined) {\n    this._minAudioChunkSize = value;\n  }\n  get startOfUtteranceThreshold(): number | undefined {\n    return this._startOfUtteranceThreshold;\n  }\n  set startOfUtteranceThreshold(value: number | undefined) {\n    this._startOfUtteranceThreshold = value;\n  }\n  get endOfUtteranceThreshold(): number | undefined {\n    return this._endOfUtteranceThreshold;\n  }\n  set endOfUtteranceThreshold(value: number | undefined) {\n    this._endOfUtteranceThreshold = value;\n  }\n  get nextChunkTimeout(): number | undefined {\n    return this._nextChunkTimeout;\n  }\n  set nextChunkTimeout(value: number | undefined) {\n    this._nextChunkTimeout = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    StreamingSpeechRecognition.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): StreamingSpeechRecognition.AsObject {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      ctcDecodingMethod: this.ctcDecodingMethod,\n      samplingRate: this.samplingRate,\n      minAudioChunkSize: this.minAudioChunkSize,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold,\n      nextChunkTimeout: this.nextChunkTimeout\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): StreamingSpeechRecognition.AsProtobufJSON {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      ctcDecodingMethod: this.ctcDecodingMethod,\n      samplingRate: this.samplingRate,\n      minAudioChunkSize: this.minAudioChunkSize,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold,\n      nextChunkTimeout: this.nextChunkTimeout\n    };\n  }\n}\nexport module StreamingSpeechRecognition {\n  /**\n   * Standard JavaScript object representation for StreamingSpeechRecognition\n   */\n  export interface AsObject {\n    transcribeNotFinal?: boolean;\n    ctcDecodingMethod?: string;\n    samplingRate?: string;\n    minAudioChunkSize?: string;\n    startOfUtteranceThreshold?: number;\n    endOfUtteranceThreshold?: number;\n    nextChunkTimeout?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for StreamingSpeechRecognition\n   */\n  export interface AsProtobufJSON {\n    transcribeNotFinal?: boolean;\n    ctcDecodingMethod?: string;\n    samplingRate?: string;\n    minAudioChunkSize?: string;\n    startOfUtteranceThreshold?: number;\n    endOfUtteranceThreshold?: number;\n    nextChunkTimeout?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.VoiceActivityDetection\n */\nexport class VoiceActivityDetection implements GrpcMessage {\n  static id = 'ondewo.s2t.VoiceActivityDetection';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new VoiceActivityDetection();\n    VoiceActivityDetection.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: VoiceActivityDetection) {\n    _instance.active = _instance.active || '';\n    _instance.samplingRate = _instance.samplingRate || '0';\n    _instance.pyannote = _instance.pyannote || undefined;\n    _instance.matchbox = _instance.matchbox || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: VoiceActivityDetection,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.active = _reader.readString();\n          break;\n        case 2:\n          _instance.samplingRate = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.pyannote = new Pyannote();\n          _reader.readMessage(\n            _instance.pyannote,\n            Pyannote.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.matchbox = new Matchbox();\n          _reader.readMessage(\n            _instance.matchbox,\n            Matchbox.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    VoiceActivityDetection.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: VoiceActivityDetection,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.active) {\n      _writer.writeString(1, _instance.active);\n    }\n    if (_instance.samplingRate) {\n      _writer.writeInt64String(2, _instance.samplingRate);\n    }\n    if (_instance.pyannote) {\n      _writer.writeMessage(\n        3,\n        _instance.pyannote as any,\n        Pyannote.serializeBinaryToWriter\n      );\n    }\n    if (_instance.matchbox) {\n      _writer.writeMessage(\n        4,\n        _instance.matchbox as any,\n        Matchbox.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _active?: string;\n  private _samplingRate?: string;\n  private _pyannote?: Pyannote;\n  private _matchbox?: Matchbox;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of VoiceActivityDetection to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<VoiceActivityDetection.AsObject>) {\n    _value = _value || {};\n    this.active = _value.active;\n    this.samplingRate = _value.samplingRate;\n    this.pyannote = _value.pyannote ? new Pyannote(_value.pyannote) : undefined;\n    this.matchbox = _value.matchbox ? new Matchbox(_value.matchbox) : undefined;\n    VoiceActivityDetection.refineValues(this);\n  }\n  get active(): string | undefined {\n    return this._active;\n  }\n  set active(value: string | undefined) {\n    this._active = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get pyannote(): Pyannote | undefined {\n    return this._pyannote;\n  }\n  set pyannote(value: Pyannote | undefined) {\n    this._pyannote = value;\n  }\n  get matchbox(): Matchbox | undefined {\n    return this._matchbox;\n  }\n  set matchbox(value: Matchbox | undefined) {\n    this._matchbox = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    VoiceActivityDetection.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): VoiceActivityDetection.AsObject {\n    return {\n      active: this.active,\n      samplingRate: this.samplingRate,\n      pyannote: this.pyannote ? this.pyannote.toObject() : undefined,\n      matchbox: this.matchbox ? this.matchbox.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): VoiceActivityDetection.AsProtobufJSON {\n    return {\n      active: this.active,\n      samplingRate: this.samplingRate,\n      pyannote: this.pyannote ? this.pyannote.toProtobufJSON(options) : null,\n      matchbox: this.matchbox ? this.matchbox.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module VoiceActivityDetection {\n  /**\n   * Standard JavaScript object representation for VoiceActivityDetection\n   */\n  export interface AsObject {\n    active?: string;\n    samplingRate?: string;\n    pyannote?: Pyannote.AsObject;\n    matchbox?: Matchbox.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for VoiceActivityDetection\n   */\n  export interface AsProtobufJSON {\n    active?: string;\n    samplingRate?: string;\n    pyannote?: Pyannote.AsProtobufJSON | null;\n    matchbox?: Matchbox.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Pyannote\n */\nexport class Pyannote implements GrpcMessage {\n  static id = 'ondewo.s2t.Pyannote';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Pyannote();\n    Pyannote.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Pyannote) {\n    _instance.modelPath = _instance.modelPath || '';\n    _instance.minAudioSize = _instance.minAudioSize || '0';\n    _instance.offset = _instance.offset || 0;\n    _instance.onset = _instance.onset || 0;\n\n    _instance.minDurationOff = _instance.minDurationOff || 0;\n    _instance.minDurationOn = _instance.minDurationOn || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Pyannote,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.modelPath = _reader.readString();\n          break;\n        case 2:\n          _instance.minAudioSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.offset = _reader.readFloat();\n          break;\n        case 4:\n          _instance.onset = _reader.readFloat();\n          break;\n        case 5:\n          _instance.logScale = _reader.readBool();\n          break;\n        case 6:\n          _instance.minDurationOff = _reader.readFloat();\n          break;\n        case 7:\n          _instance.minDurationOn = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Pyannote.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Pyannote, _writer: BinaryWriter) {\n    if (_instance.modelPath) {\n      _writer.writeString(1, _instance.modelPath);\n    }\n    if (_instance.minAudioSize) {\n      _writer.writeInt64String(2, _instance.minAudioSize);\n    }\n    if (_instance.offset) {\n      _writer.writeFloat(3, _instance.offset);\n    }\n    if (_instance.onset) {\n      _writer.writeFloat(4, _instance.onset);\n    }\n    if (_instance.logScale || _instance.logScale === false) {\n      _writer.writeBool(5, _instance.logScale);\n    }\n    if (_instance.minDurationOff) {\n      _writer.writeFloat(6, _instance.minDurationOff);\n    }\n    if (_instance.minDurationOn) {\n      _writer.writeFloat(7, _instance.minDurationOn);\n    }\n  }\n\n  private _modelPath?: string;\n  private _minAudioSize?: string;\n  private _offset?: number;\n  private _onset?: number;\n  private _logScale?: boolean;\n  private _minDurationOff?: number;\n  private _minDurationOn?: number;\n\n  private _oneofLogScale: Pyannote.OneofLogScaleCase =\n    Pyannote.OneofLogScaleCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Pyannote to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Pyannote.AsObject>) {\n    _value = _value || {};\n    this.modelPath = _value.modelPath;\n    this.minAudioSize = _value.minAudioSize;\n    this.offset = _value.offset;\n    this.onset = _value.onset;\n    this.logScale = _value.logScale;\n    this.minDurationOff = _value.minDurationOff;\n    this.minDurationOn = _value.minDurationOn;\n    Pyannote.refineValues(this);\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  get minAudioSize(): string | undefined {\n    return this._minAudioSize;\n  }\n  set minAudioSize(value: string | undefined) {\n    this._minAudioSize = value;\n  }\n  get offset(): number | undefined {\n    return this._offset;\n  }\n  set offset(value: number | undefined) {\n    this._offset = value;\n  }\n  get onset(): number | undefined {\n    return this._onset;\n  }\n  set onset(value: number | undefined) {\n    this._onset = value;\n  }\n  get logScale(): boolean | undefined {\n    return this._logScale;\n  }\n  set logScale(value: boolean | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofLogScale = Pyannote.OneofLogScaleCase.logScale;\n    }\n    this._logScale = value;\n  }\n  get minDurationOff(): number | undefined {\n    return this._minDurationOff;\n  }\n  set minDurationOff(value: number | undefined) {\n    this._minDurationOff = value;\n  }\n  get minDurationOn(): number | undefined {\n    return this._minDurationOn;\n  }\n  set minDurationOn(value: number | undefined) {\n    this._minDurationOn = value;\n  }\n  get oneofLogScale() {\n    return this._oneofLogScale;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Pyannote.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Pyannote.AsObject {\n    return {\n      modelPath: this.modelPath,\n      minAudioSize: this.minAudioSize,\n      offset: this.offset,\n      onset: this.onset,\n      logScale: this.logScale,\n      minDurationOff: this.minDurationOff,\n      minDurationOn: this.minDurationOn\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Pyannote.AsProtobufJSON {\n    return {\n      modelPath: this.modelPath,\n      minAudioSize: this.minAudioSize,\n      offset: this.offset,\n      onset: this.onset,\n      logScale: this.logScale,\n      minDurationOff: this.minDurationOff,\n      minDurationOn: this.minDurationOn\n    };\n  }\n}\nexport module Pyannote {\n  /**\n   * Standard JavaScript object representation for Pyannote\n   */\n  export interface AsObject {\n    modelPath?: string;\n    minAudioSize?: string;\n    offset?: number;\n    onset?: number;\n    logScale?: boolean;\n    minDurationOff?: number;\n    minDurationOn?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Pyannote\n   */\n  export interface AsProtobufJSON {\n    modelPath?: string;\n    minAudioSize?: string;\n    offset?: number;\n    onset?: number;\n    logScale?: boolean;\n    minDurationOff?: number;\n    minDurationOn?: number;\n  }\n  export enum OneofLogScaleCase {\n    none = 0,\n    logScale = 1\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Matchbox\n */\nexport class Matchbox implements GrpcMessage {\n  static id = 'ondewo.s2t.Matchbox';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Matchbox();\n    Matchbox.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Matchbox) {\n    _instance.modelConfig = _instance.modelConfig || '';\n    _instance.encoderPath = _instance.encoderPath || '';\n    _instance.decoderPath = _instance.decoderPath || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Matchbox,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.modelConfig = _reader.readString();\n          break;\n        case 2:\n          _instance.encoderPath = _reader.readString();\n          break;\n        case 3:\n          _instance.decoderPath = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Matchbox.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Matchbox, _writer: BinaryWriter) {\n    if (_instance.modelConfig) {\n      _writer.writeString(1, _instance.modelConfig);\n    }\n    if (_instance.encoderPath) {\n      _writer.writeString(2, _instance.encoderPath);\n    }\n    if (_instance.decoderPath) {\n      _writer.writeString(3, _instance.decoderPath);\n    }\n  }\n\n  private _modelConfig?: string;\n  private _encoderPath?: string;\n  private _decoderPath?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Matchbox to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Matchbox.AsObject>) {\n    _value = _value || {};\n    this.modelConfig = _value.modelConfig;\n    this.encoderPath = _value.encoderPath;\n    this.decoderPath = _value.decoderPath;\n    Matchbox.refineValues(this);\n  }\n  get modelConfig(): string | undefined {\n    return this._modelConfig;\n  }\n  set modelConfig(value: string | undefined) {\n    this._modelConfig = value;\n  }\n  get encoderPath(): string | undefined {\n    return this._encoderPath;\n  }\n  set encoderPath(value: string | undefined) {\n    this._encoderPath = value;\n  }\n  get decoderPath(): string | undefined {\n    return this._decoderPath;\n  }\n  set decoderPath(value: string | undefined) {\n    this._decoderPath = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Matchbox.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Matchbox.AsObject {\n    return {\n      modelConfig: this.modelConfig,\n      encoderPath: this.encoderPath,\n      decoderPath: this.decoderPath\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Matchbox.AsProtobufJSON {\n    return {\n      modelConfig: this.modelConfig,\n      encoderPath: this.encoderPath,\n      decoderPath: this.decoderPath\n    };\n  }\n}\nexport module Matchbox {\n  /**\n   * Standard JavaScript object representation for Matchbox\n   */\n  export interface AsObject {\n    modelConfig?: string;\n    encoderPath?: string;\n    decoderPath?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Matchbox\n   */\n  export interface AsProtobufJSON {\n    modelConfig?: string;\n    encoderPath?: string;\n    decoderPath?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PostProcessing\n */\nexport class PostProcessing implements GrpcMessage {\n  static id = 'ondewo.s2t.PostProcessing';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PostProcessing();\n    PostProcessing.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PostProcessing) {\n    _instance.pipeline = _instance.pipeline || [];\n    _instance.postProcessors = _instance.postProcessors || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PostProcessing,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.pipeline = _instance.pipeline || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          _instance.postProcessors = new PostProcessors();\n          _reader.readMessage(\n            _instance.postProcessors,\n            PostProcessors.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PostProcessing.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PostProcessing,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipeline && _instance.pipeline.length) {\n      _writer.writeRepeatedString(1, _instance.pipeline);\n    }\n    if (_instance.postProcessors) {\n      _writer.writeMessage(\n        2,\n        _instance.postProcessors as any,\n        PostProcessors.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _pipeline?: string[];\n  private _postProcessors?: PostProcessors;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PostProcessing to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PostProcessing.AsObject>) {\n    _value = _value || {};\n    this.pipeline = (_value.pipeline || []).slice();\n    this.postProcessors = _value.postProcessors\n      ? new PostProcessors(_value.postProcessors)\n      : undefined;\n    PostProcessing.refineValues(this);\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get postProcessors(): PostProcessors | undefined {\n    return this._postProcessors;\n  }\n  set postProcessors(value: PostProcessors | undefined) {\n    this._postProcessors = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PostProcessing.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PostProcessing.AsObject {\n    return {\n      pipeline: (this.pipeline || []).slice(),\n      postProcessors: this.postProcessors\n        ? this.postProcessors.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PostProcessing.AsProtobufJSON {\n    return {\n      pipeline: (this.pipeline || []).slice(),\n      postProcessors: this.postProcessors\n        ? this.postProcessors.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module PostProcessing {\n  /**\n   * Standard JavaScript object representation for PostProcessing\n   */\n  export interface AsObject {\n    pipeline?: string[];\n    postProcessors?: PostProcessors.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for PostProcessing\n   */\n  export interface AsProtobufJSON {\n    pipeline?: string[];\n    postProcessors?: PostProcessors.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PostProcessors\n */\nexport class PostProcessors implements GrpcMessage {\n  static id = 'ondewo.s2t.PostProcessors';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PostProcessors();\n    PostProcessors.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PostProcessors) {\n    _instance.symSpell = _instance.symSpell || undefined;\n    _instance.normalization = _instance.normalization || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PostProcessors,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.symSpell = new SymSpell();\n          _reader.readMessage(\n            _instance.symSpell,\n            SymSpell.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.normalization = new S2TNormalization();\n          _reader.readMessage(\n            _instance.normalization,\n            S2TNormalization.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PostProcessors.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PostProcessors,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.symSpell) {\n      _writer.writeMessage(\n        1,\n        _instance.symSpell as any,\n        SymSpell.serializeBinaryToWriter\n      );\n    }\n    if (_instance.normalization) {\n      _writer.writeMessage(\n        2,\n        _instance.normalization as any,\n        S2TNormalization.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _symSpell?: SymSpell;\n  private _normalization?: S2TNormalization;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PostProcessors to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PostProcessors.AsObject>) {\n    _value = _value || {};\n    this.symSpell = _value.symSpell ? new SymSpell(_value.symSpell) : undefined;\n    this.normalization = _value.normalization\n      ? new S2TNormalization(_value.normalization)\n      : undefined;\n    PostProcessors.refineValues(this);\n  }\n  get symSpell(): SymSpell | undefined {\n    return this._symSpell;\n  }\n  set symSpell(value: SymSpell | undefined) {\n    this._symSpell = value;\n  }\n  get normalization(): S2TNormalization | undefined {\n    return this._normalization;\n  }\n  set normalization(value: S2TNormalization | undefined) {\n    this._normalization = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PostProcessors.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PostProcessors.AsObject {\n    return {\n      symSpell: this.symSpell ? this.symSpell.toObject() : undefined,\n      normalization: this.normalization\n        ? this.normalization.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PostProcessors.AsProtobufJSON {\n    return {\n      symSpell: this.symSpell ? this.symSpell.toProtobufJSON(options) : null,\n      normalization: this.normalization\n        ? this.normalization.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module PostProcessors {\n  /**\n   * Standard JavaScript object representation for PostProcessors\n   */\n  export interface AsObject {\n    symSpell?: SymSpell.AsObject;\n    normalization?: S2TNormalization.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for PostProcessors\n   */\n  export interface AsProtobufJSON {\n    symSpell?: SymSpell.AsProtobufJSON | null;\n    normalization?: S2TNormalization.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.SymSpell\n */\nexport class SymSpell implements GrpcMessage {\n  static id = 'ondewo.s2t.SymSpell';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SymSpell();\n    SymSpell.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SymSpell) {\n    _instance.dictPath = _instance.dictPath || '';\n    _instance.maxDictionaryEditDistance =\n      _instance.maxDictionaryEditDistance || '0';\n    _instance.prefixLength = _instance.prefixLength || '0';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SymSpell,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.dictPath = _reader.readString();\n          break;\n        case 2:\n          _instance.maxDictionaryEditDistance = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.prefixLength = _reader.readInt64String();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SymSpell.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: SymSpell, _writer: BinaryWriter) {\n    if (_instance.dictPath) {\n      _writer.writeString(1, _instance.dictPath);\n    }\n    if (_instance.maxDictionaryEditDistance) {\n      _writer.writeInt64String(2, _instance.maxDictionaryEditDistance);\n    }\n    if (_instance.prefixLength) {\n      _writer.writeInt64String(3, _instance.prefixLength);\n    }\n  }\n\n  private _dictPath?: string;\n  private _maxDictionaryEditDistance?: string;\n  private _prefixLength?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SymSpell to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SymSpell.AsObject>) {\n    _value = _value || {};\n    this.dictPath = _value.dictPath;\n    this.maxDictionaryEditDistance = _value.maxDictionaryEditDistance;\n    this.prefixLength = _value.prefixLength;\n    SymSpell.refineValues(this);\n  }\n  get dictPath(): string | undefined {\n    return this._dictPath;\n  }\n  set dictPath(value: string | undefined) {\n    this._dictPath = value;\n  }\n  get maxDictionaryEditDistance(): string | undefined {\n    return this._maxDictionaryEditDistance;\n  }\n  set maxDictionaryEditDistance(value: string | undefined) {\n    this._maxDictionaryEditDistance = value;\n  }\n  get prefixLength(): string | undefined {\n    return this._prefixLength;\n  }\n  set prefixLength(value: string | undefined) {\n    this._prefixLength = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SymSpell.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SymSpell.AsObject {\n    return {\n      dictPath: this.dictPath,\n      maxDictionaryEditDistance: this.maxDictionaryEditDistance,\n      prefixLength: this.prefixLength\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SymSpell.AsProtobufJSON {\n    return {\n      dictPath: this.dictPath,\n      maxDictionaryEditDistance: this.maxDictionaryEditDistance,\n      prefixLength: this.prefixLength\n    };\n  }\n}\nexport module SymSpell {\n  /**\n   * Standard JavaScript object representation for SymSpell\n   */\n  export interface AsObject {\n    dictPath?: string;\n    maxDictionaryEditDistance?: string;\n    prefixLength?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for SymSpell\n   */\n  export interface AsProtobufJSON {\n    dictPath?: string;\n    maxDictionaryEditDistance?: string;\n    prefixLength?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.S2TNormalization\n */\nexport class S2TNormalization implements GrpcMessage {\n  static id = 'ondewo.s2t.S2TNormalization';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new S2TNormalization();\n    S2TNormalization.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: S2TNormalization) {\n    _instance.language = _instance.language || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: S2TNormalization,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    S2TNormalization.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: S2TNormalization,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n  }\n\n  private _language?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of S2TNormalization to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<S2TNormalization.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    S2TNormalization.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    S2TNormalization.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): S2TNormalization.AsObject {\n    return {\n      language: this.language\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): S2TNormalization.AsProtobufJSON {\n    return {\n      language: this.language\n    };\n  }\n}\nexport module S2TNormalization {\n  /**\n   * Standard JavaScript object representation for S2TNormalization\n   */\n  export interface AsObject {\n    language?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for S2TNormalization\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Logging\n */\nexport class Logging implements GrpcMessage {\n  static id = 'ondewo.s2t.Logging';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Logging();\n    Logging.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Logging) {\n    _instance.type = _instance.type || '';\n    _instance.path = _instance.path || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Logging,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.path = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Logging.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Logging, _writer: BinaryWriter) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.path) {\n      _writer.writeString(2, _instance.path);\n    }\n  }\n\n  private _type?: string;\n  private _path?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Logging to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Logging.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.path = _value.path;\n    Logging.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Logging.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Logging.AsObject {\n    return {\n      type: this.type,\n      path: this.path\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Logging.AsProtobufJSON {\n    return {\n      type: this.type,\n      path: this.path\n    };\n  }\n}\nexport module Logging {\n  /**\n   * Standard JavaScript object representation for Logging\n   */\n  export interface AsObject {\n    type?: string;\n    path?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Logging\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    path?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguageModelsRequest\n */\nexport class ListS2tLanguageModelsRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguageModelsRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguageModelsRequest();\n    ListS2tLanguageModelsRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguageModelsRequest) {\n    _instance.ids = _instance.ids || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguageModelsRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.ids = _instance.ids || []).push(_reader.readString());\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguageModelsRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguageModelsRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.ids && _instance.ids.length) {\n      _writer.writeRepeatedString(1, _instance.ids);\n    }\n  }\n\n  private _ids?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguageModelsRequest to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<ListS2tLanguageModelsRequest.AsObject>\n  ) {\n    _value = _value || {};\n    this.ids = (_value.ids || []).slice();\n    ListS2tLanguageModelsRequest.refineValues(this);\n  }\n  get ids(): string[] | undefined {\n    return this._ids;\n  }\n  set ids(value: string[] | undefined) {\n    this._ids = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguageModelsRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguageModelsRequest.AsObject {\n    return {\n      ids: (this.ids || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguageModelsRequest.AsProtobufJSON {\n    return {\n      ids: (this.ids || []).slice()\n    };\n  }\n}\nexport module ListS2tLanguageModelsRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguageModelsRequest\n   */\n  export interface AsObject {\n    ids?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguageModelsRequest\n   */\n  export interface AsProtobufJSON {\n    ids?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.LanguageModelPipelineId\n */\nexport class LanguageModelPipelineId implements GrpcMessage {\n  static id = 'ondewo.s2t.LanguageModelPipelineId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new LanguageModelPipelineId();\n    LanguageModelPipelineId.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: LanguageModelPipelineId) {\n    _instance.pipelineId = _instance.pipelineId || '';\n    _instance.modelNames = _instance.modelNames || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: LanguageModelPipelineId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.pipelineId = _reader.readString();\n          break;\n        case 2:\n          (_instance.modelNames = _instance.modelNames || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    LanguageModelPipelineId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: LanguageModelPipelineId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelineId) {\n      _writer.writeString(1, _instance.pipelineId);\n    }\n    if (_instance.modelNames && _instance.modelNames.length) {\n      _writer.writeRepeatedString(2, _instance.modelNames);\n    }\n  }\n\n  private _pipelineId?: string;\n  private _modelNames?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of LanguageModelPipelineId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<LanguageModelPipelineId.AsObject>) {\n    _value = _value || {};\n    this.pipelineId = _value.pipelineId;\n    this.modelNames = (_value.modelNames || []).slice();\n    LanguageModelPipelineId.refineValues(this);\n  }\n  get pipelineId(): string | undefined {\n    return this._pipelineId;\n  }\n  set pipelineId(value: string | undefined) {\n    this._pipelineId = value;\n  }\n  get modelNames(): string[] | undefined {\n    return this._modelNames;\n  }\n  set modelNames(value: string[] | undefined) {\n    this._modelNames = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    LanguageModelPipelineId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): LanguageModelPipelineId.AsObject {\n    return {\n      pipelineId: this.pipelineId,\n      modelNames: (this.modelNames || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): LanguageModelPipelineId.AsProtobufJSON {\n    return {\n      pipelineId: this.pipelineId,\n      modelNames: (this.modelNames || []).slice()\n    };\n  }\n}\nexport module LanguageModelPipelineId {\n  /**\n   * Standard JavaScript object representation for LanguageModelPipelineId\n   */\n  export interface AsObject {\n    pipelineId?: string;\n    modelNames?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for LanguageModelPipelineId\n   */\n  export interface AsProtobufJSON {\n    pipelineId?: string;\n    modelNames?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguageModelsResponse\n */\nexport class ListS2tLanguageModelsResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguageModelsResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguageModelsResponse();\n    ListS2tLanguageModelsResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguageModelsResponse) {\n    _instance.lmPipelineIds = _instance.lmPipelineIds || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguageModelsResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new LanguageModelPipelineId();\n          _reader.readMessage(\n            messageInitializer1,\n            LanguageModelPipelineId.deserializeBinaryFromReader\n          );\n          (_instance.lmPipelineIds = _instance.lmPipelineIds || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguageModelsResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguageModelsResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.lmPipelineIds && _instance.lmPipelineIds.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.lmPipelineIds as any,\n        LanguageModelPipelineId.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _lmPipelineIds?: LanguageModelPipelineId[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguageModelsResponse to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<ListS2tLanguageModelsResponse.AsObject>\n  ) {\n    _value = _value || {};\n    this.lmPipelineIds = (_value.lmPipelineIds || []).map(\n      m => new LanguageModelPipelineId(m)\n    );\n    ListS2tLanguageModelsResponse.refineValues(this);\n  }\n  get lmPipelineIds(): LanguageModelPipelineId[] | undefined {\n    return this._lmPipelineIds;\n  }\n  set lmPipelineIds(value: LanguageModelPipelineId[] | undefined) {\n    this._lmPipelineIds = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguageModelsResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguageModelsResponse.AsObject {\n    return {\n      lmPipelineIds: (this.lmPipelineIds || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguageModelsResponse.AsProtobufJSON {\n    return {\n      lmPipelineIds: (this.lmPipelineIds || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module ListS2tLanguageModelsResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguageModelsResponse\n   */\n  export interface AsObject {\n    lmPipelineIds?: LanguageModelPipelineId.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguageModelsResponse\n   */\n  export interface AsProtobufJSON {\n    lmPipelineIds?: LanguageModelPipelineId.AsProtobufJSON[] | null;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\n\n/**\n * Specific GrpcClientSettings for Speech2Text.\n * Use it only if your default settings are not set or the service requires other settings.\n */\nexport const GRPC_SPEECH2_TEXT_CLIENT_SETTINGS = new InjectionToken<any>(\n  'GRPC_SPEECH2_TEXT_CLIENT_SETTINGS'\n);\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcEvent,\n  GrpcMetadata\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './speech-to-text.pb';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nimport { GRPC_SPEECH2_TEXT_CLIENT_SETTINGS } from './speech-to-text.pbconf';\n/**\n * Service client implementation for ondewo.s2t.Speech2Text\n */\n@Injectable({ providedIn: 'any' })\nexport class Speech2TextClient {\n  private client: GrpcClient<any>;\n\n  /**\n   * Raw RPC implementation for each service client method.\n   * The raw methods provide more control on the incoming data and events. E.g. they can be useful to read status `OK` metadata.\n   * Attention: these methods do not throw errors when non-zero status codes are received.\n   */\n  $raw = {\n    /**\n     * Unary call: /ondewo.s2t.Speech2Text/TranscribeFile\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.TranscribeFileResponse>>\n     */\n    transcribeFile: (\n      requestData: thisProto.TranscribeFileRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.TranscribeFileResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/TranscribeFile',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.TranscribeFileRequest,\n        responseClass: thisProto.TranscribeFileResponse\n      });\n    },\n    /**\n     * Bidirectional streaming: /ondewo.s2t.Speech2Text/TranscribeStream\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.TranscribeStreamResponse>>\n     */\n    transcribeStream: (\n      requestData: Observable<thisProto.TranscribeStreamRequest>,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.TranscribeStreamResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.bidiStream,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/TranscribeStream',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.TranscribeStreamRequest,\n        responseClass: thisProto.TranscribeStreamResponse\n      });\n    },\n    /**\n     * Unary call: /ondewo.s2t.Speech2Text/GetS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Speech2TextConfig>>\n     */\n    getS2tPipeline: (\n      requestData: thisProto.S2tPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Speech2TextConfig>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/GetS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.S2tPipelineId,\n        responseClass: thisProto.Speech2TextConfig\n      });\n    },\n    /**\n     * Unary call: /ondewo.s2t.Speech2Text/CreateS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.S2tPipelineId>>\n     */\n    createS2tPipeline: (\n      requestData: thisProto.Speech2TextConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.S2tPipelineId>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/CreateS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Speech2TextConfig,\n        responseClass: thisProto.S2tPipelineId\n      });\n    },\n    /**\n     * Unary call: /ondewo.s2t.Speech2Text/DeleteS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    deleteS2tPipeline: (\n      requestData: thisProto.S2tPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/DeleteS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.S2tPipelineId,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary call: /ondewo.s2t.Speech2Text/UpdateS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    updateS2tPipeline: (\n      requestData: thisProto.Speech2TextConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/UpdateS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Speech2TextConfig,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary call: /ondewo.s2t.Speech2Text/ListS2tPipelines\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tPipelinesResponse>>\n     */\n    listS2tPipelines: (\n      requestData: thisProto.ListS2tPipelinesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tPipelinesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tPipelines',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tPipelinesRequest,\n        responseClass: thisProto.ListS2tPipelinesResponse\n      });\n    },\n    /**\n     * Unary call: /ondewo.s2t.Speech2Text/ListS2tLanguages\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tLanguagesResponse>>\n     */\n    listS2tLanguages: (\n      requestData: thisProto.ListS2tLanguagesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tLanguagesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tLanguages',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tLanguagesRequest,\n        responseClass: thisProto.ListS2tLanguagesResponse\n      });\n    },\n    /**\n     * Unary call: /ondewo.s2t.Speech2Text/ListS2tDomains\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tDomainsResponse>>\n     */\n    listS2tDomains: (\n      requestData: thisProto.ListS2tDomainsRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tDomainsResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tDomains',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tDomainsRequest,\n        responseClass: thisProto.ListS2tDomainsResponse\n      });\n    },\n    /**\n     * Unary call: /ondewo.s2t.Speech2Text/GetServiceInfo\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.S2TGetServiceInfoResponse>>\n     */\n    getServiceInfo: (\n      requestData: googleProtobuf000.Empty,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.S2TGetServiceInfoResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/GetServiceInfo',\n        requestData,\n        requestMetadata,\n        requestClass: googleProtobuf000.Empty,\n        responseClass: thisProto.S2TGetServiceInfoResponse\n      });\n    },\n    /**\n     * Unary call: /ondewo.s2t.Speech2Text/ListS2tLanguageModels\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tLanguageModelsResponse>>\n     */\n    listS2tLanguageModels: (\n      requestData: thisProto.ListS2tLanguageModelsRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tLanguageModelsResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tLanguageModels',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tLanguageModelsRequest,\n        responseClass: thisProto.ListS2tLanguageModelsResponse\n      });\n    }\n  };\n\n  constructor(\n    @Optional() @Inject(GRPC_SPEECH2_TEXT_CLIENT_SETTINGS) settings: any,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory<any>,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.s2t.Speech2Text',\n      settings\n    );\n  }\n\n  /**\n   * Unary call @/ondewo.s2t.Speech2Text/TranscribeFile\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.TranscribeFileResponse>\n   */\n  transcribeFile(\n    requestData: thisProto.TranscribeFileRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.TranscribeFileResponse> {\n    return this.$raw\n      .transcribeFile(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Bidirectional streaming @/ondewo.s2t.Speech2Text/TranscribeStream\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.TranscribeStreamResponse>\n   */\n  transcribeStream(\n    requestData: Observable<thisProto.TranscribeStreamRequest>,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.TranscribeStreamResponse> {\n    return this.$raw\n      .transcribeStream(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.s2t.Speech2Text/GetS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Speech2TextConfig>\n   */\n  getS2tPipeline(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Speech2TextConfig> {\n    return this.$raw\n      .getS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.s2t.Speech2Text/CreateS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.S2tPipelineId>\n   */\n  createS2tPipeline(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.S2tPipelineId> {\n    return this.$raw\n      .createS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.s2t.Speech2Text/DeleteS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  deleteS2tPipeline(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .deleteS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.s2t.Speech2Text/UpdateS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  updateS2tPipeline(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .updateS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.s2t.Speech2Text/ListS2tPipelines\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tPipelinesResponse>\n   */\n  listS2tPipelines(\n    requestData: thisProto.ListS2tPipelinesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tPipelinesResponse> {\n    return this.$raw\n      .listS2tPipelines(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.s2t.Speech2Text/ListS2tLanguages\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tLanguagesResponse>\n   */\n  listS2tLanguages(\n    requestData: thisProto.ListS2tLanguagesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tLanguagesResponse> {\n    return this.$raw\n      .listS2tLanguages(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.s2t.Speech2Text/ListS2tDomains\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tDomainsResponse>\n   */\n  listS2tDomains(\n    requestData: thisProto.ListS2tDomainsRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tDomainsResponse> {\n    return this.$raw\n      .listS2tDomains(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.s2t.Speech2Text/GetServiceInfo\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.S2TGetServiceInfoResponse>\n   */\n  getServiceInfo(\n    requestData: googleProtobuf000.Empty,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.S2TGetServiceInfoResponse> {\n    return this.$raw\n      .getServiceInfo(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.s2t.Speech2Text/ListS2tLanguageModels\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tLanguageModelsResponse>\n   */\n  listS2tLanguageModels(\n    requestData: thisProto.ListS2tLanguageModelsRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tLanguageModelsResponse> {\n    return this.$raw\n      .listS2tLanguageModels(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["thisProto.TranscribeFileRequest","thisProto.TranscribeFileResponse","thisProto.TranscribeStreamRequest","thisProto.TranscribeStreamResponse","thisProto.S2tPipelineId","thisProto.Speech2TextConfig","thisProto.ListS2tPipelinesRequest","thisProto.ListS2tPipelinesResponse","thisProto.ListS2tLanguagesRequest","thisProto.ListS2tLanguagesResponse","thisProto.ListS2tDomainsRequest","thisProto.ListS2tDomainsResponse","thisProto.S2TGetServiceInfoResponse","thisProto.ListS2tLanguageModelsRequest","thisProto.ListS2tLanguageModelsResponse"],"mappings":"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"}