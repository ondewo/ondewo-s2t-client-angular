{"version":3,"sources":["../../api/ondewo/s2t/speech-to-text.pb.ts","../../api/ondewo/s2t/speech-to-text.pbconf.ts","../../api/ondewo/s2t/speech-to-text.pbsc.ts"],"names":["CTCDecoding","GRPC_SPEECH2_TEXT_CLIENT_SETTINGS","InjectionToken","TranscribeStreamRequest","_value","this","s2tPipelineId","audioChunk","ctcDecoding","languageModelName","spellingCorrection","disableNormalization","endOfStream","returnStartOfSpeech","returnAudio","refineValues","deserializeBinary","bytes","instance","deserializeBinaryFromReader","BinaryReader","_instance","Uint8Array","_reader","nextField","isEndGroup","getFieldNumber","readString","readBytes","readEnum","readBool","skipField","serializeBinaryToWriter","_writer","writeString","length","writeBytes","writeEnum","writeBool","Object","defineProperty","prototype","_s2tPipelineId","value","_audioChunk","_ctcDecoding","_languageModelName","_spellingCorrection","_disableNormalization","_endOfStream","_returnStartOfSpeech","_returnAudio","serializeBinary","writer","BinaryWriter","getResultBuffer","toObject","subarray","toJSON","toProtobufJSON","options","uint8ArrayToBase64","_a","id","TranscribeStreamResponse","transcription","time","final","audio","utteranceStart","readFloat","writeFloat","_transcription","_time","_final","_audio","_utteranceStart","TranscribeFileRequest","audioFile","includeTiming","_audioFile","_includeTiming","TranscribeFileResponse","wordTiming","map","m","WordTiming","messageInitializer3","readMessage","push","writeRepeatedMessage","_wordTiming","word","begin","end","readInt32","writeInt32","_word","_begin","_end","S2tPipelineId","_id","ListS2tPipelinesRequest","languages","slice","pipelineOwners","domains","writeRepeatedString","_languages","_pipelineOwners","_domains","ListS2tPipelinesResponse","pipelineConfigs","Speech2TextConfig","messageInitializer1","_pipelineConfigs","ListS2tLanguagesRequest","ListS2tLanguagesResponse","ListS2tDomainsRequest","ListS2tDomainsResponse","GetServiceInfoResponse","version","_version","description","Description","undefined","active","inference","Inference","streamingServer","StreamingServer","voiceActivityDetection","VoiceActivityDetection","postProcessing","PostProcessing","logging","Logging","writeMessage","_description","_active","_inference","_streamingServer","_voiceActivityDetection","_postProcessing","_logging","language","pipelineOwner","domain","comments","_language","_pipelineOwner","_domain","_comments","ctcAcousticModels","CtcAcousticModels","languageModels","LanguageModels","_ctcAcousticModels","_languageModels","type","quartznet","Quartznet","quartznetTriton","QuartznetTriton","wav2vec","Wav2Vec","_type","_quartznet","_quartznetTriton","_wav2vec","modelPath","useGpu","_modelPath","_useGpu","configPath","loadType","ptFiles","PtFiles","ckptFile","CkptFile","_configPath","_loadType","_ptFiles","_ckptFile","path","step","_path","_step","tritonUrl","tritonModel","_tritonUrl","_tritonModel","beamSize","defaultLm","beamSearchScorerAlpha","beamSearchScorerBeta","readInt64String","writeInt64String","_beamSize","_defaultLm","_beamSearchScorerAlpha","_beamSearchScorerBeta","host","port","outputStyle","streamingSpeechRecognition","StreamingSpeechRecognition","_host","_port","_outputStyle","_streamingSpeechRecognition","transcribeNotFinal","ctcDecodingMethod","samplingRate","minAudioChunkSize","startOfUtteranceThreshold","endOfUtteranceThreshold","nextChunkTimeout","_transcribeNotFinal","_ctcDecodingMethod","_samplingRate","_minAudioChunkSize","_startOfUtteranceThreshold","_endOfUtteranceThreshold","_nextChunkTimeout","pyannote","Pyannote","matchbox","Matchbox","_pyannote","_matchbox","minAudioSize","offset","onset","logScale","minDurationOff","minDurationOn","_minAudioSize","_offset","_onset","_logScale","_minDurationOff","_minDurationOn","modelConfig","encoderPath","decoderPath","_modelConfig","_encoderPath","_decoderPath","pipeline","postProcessors","PostProcessors","_pipeline","_postProcessors","symSpell","SymSpell","normalization","Normalization","_symSpell","_normalization","dictPath","maxDictionaryEditDistance","prefixLength","_dictPath","_maxDictionaryEditDistance","_prefixLength","ListS2tLanguageModelsRequest","ids","_ids","LanguageModelPipelineId","pipelineId","modelNames","_pipelineId","_modelNames","ListS2tLanguageModelsResponse","lmPipelineIds","_lmPipelineIds","Speech2TextClient","settings","clientFactory","handler","_this","$raw","transcribeFile","requestData","requestMetadata","GrpcMetadata","handle","GrpcCallType","unary","client","requestClass","thisProto.TranscribeFileRequest","responseClass","thisProto.TranscribeFileResponse","transcribeStream","serverStream","thisProto.TranscribeStreamRequest","thisProto.TranscribeStreamResponse","getS2tPipeline","thisProto.S2tPipelineId","thisProto.Speech2TextConfig","createS2tPipeline","deleteS2tPipeline","googleProtobuf000.Empty","updateS2tPipeline","listS2tPipelines","thisProto.ListS2tPipelinesRequest","thisProto.ListS2tPipelinesResponse","listS2tLanguages","thisProto.ListS2tLanguagesRequest","thisProto.ListS2tLanguagesResponse","listS2tDomains","thisProto.ListS2tDomainsRequest","thisProto.ListS2tDomainsResponse","getServiceInfo","thisProto.GetServiceInfoResponse","listS2tLanguageModels","thisProto.ListS2tLanguageModelsRequest","thisProto.ListS2tLanguageModelsResponse","createClient","pipe","throwStatusErrors","takeMessages","Injectable","args","providedIn","Optional","Inject","GRPC_CLIENT_FACTORY","GrpcHandler"],"mappings":"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","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n  uint8ArrayToBase64\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nexport enum CTCDecoding {\n  DEFAULT = 0,\n  GREEDY = 1,\n  BEAM_SEARCH_WITH_LM = 2\n}\n/**\n * Message implementation for ondewo.s2t.TranscribeStreamRequest\n */\nexport class TranscribeStreamRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeStreamRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeStreamRequest();\n    TranscribeStreamRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeStreamRequest) {\n    _instance.s2tPipelineId = _instance.s2tPipelineId || '';\n    _instance.audioChunk = _instance.audioChunk || new Uint8Array();\n    _instance.ctcDecoding = _instance.ctcDecoding || 0;\n    _instance.languageModelName = _instance.languageModelName || '';\n    _instance.spellingCorrection = _instance.spellingCorrection || false;\n    _instance.disableNormalization = _instance.disableNormalization || false;\n    _instance.endOfStream = _instance.endOfStream || false;\n    _instance.returnStartOfSpeech = _instance.returnStartOfSpeech || false;\n    _instance.returnAudio = _instance.returnAudio || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeStreamRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.s2tPipelineId = _reader.readString();\n          break;\n        case 2:\n          _instance.audioChunk = _reader.readBytes();\n          break;\n        case 3:\n          _instance.ctcDecoding = _reader.readEnum();\n          break;\n        case 4:\n          _instance.languageModelName = _reader.readString();\n          break;\n        case 5:\n          _instance.spellingCorrection = _reader.readBool();\n          break;\n        case 6:\n          _instance.disableNormalization = _reader.readBool();\n          break;\n        case 7:\n          _instance.endOfStream = _reader.readBool();\n          break;\n        case 8:\n          _instance.returnStartOfSpeech = _reader.readBool();\n          break;\n        case 9:\n          _instance.returnAudio = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeStreamRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeStreamRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.s2tPipelineId) {\n      _writer.writeString(1, _instance.s2tPipelineId);\n    }\n    if (_instance.audioChunk && _instance.audioChunk.length) {\n      _writer.writeBytes(2, _instance.audioChunk);\n    }\n    if (_instance.ctcDecoding) {\n      _writer.writeEnum(3, _instance.ctcDecoding);\n    }\n    if (_instance.languageModelName) {\n      _writer.writeString(4, _instance.languageModelName);\n    }\n    if (_instance.spellingCorrection) {\n      _writer.writeBool(5, _instance.spellingCorrection);\n    }\n    if (_instance.disableNormalization) {\n      _writer.writeBool(6, _instance.disableNormalization);\n    }\n    if (_instance.endOfStream) {\n      _writer.writeBool(7, _instance.endOfStream);\n    }\n    if (_instance.returnStartOfSpeech) {\n      _writer.writeBool(8, _instance.returnStartOfSpeech);\n    }\n    if (_instance.returnAudio) {\n      _writer.writeBool(9, _instance.returnAudio);\n    }\n  }\n\n  private _s2tPipelineId?: string;\n  private _audioChunk?: Uint8Array;\n  private _ctcDecoding?: CTCDecoding;\n  private _languageModelName?: string;\n  private _spellingCorrection?: boolean;\n  private _disableNormalization?: boolean;\n  private _endOfStream?: boolean;\n  private _returnStartOfSpeech?: boolean;\n  private _returnAudio?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeStreamRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeStreamRequest.AsObject>) {\n    _value = _value || {};\n    this.s2tPipelineId = _value.s2tPipelineId;\n    this.audioChunk = _value.audioChunk;\n    this.ctcDecoding = _value.ctcDecoding;\n    this.languageModelName = _value.languageModelName;\n    this.spellingCorrection = _value.spellingCorrection;\n    this.disableNormalization = _value.disableNormalization;\n    this.endOfStream = _value.endOfStream;\n    this.returnStartOfSpeech = _value.returnStartOfSpeech;\n    this.returnAudio = _value.returnAudio;\n    TranscribeStreamRequest.refineValues(this);\n  }\n  get s2tPipelineId(): string | undefined {\n    return this._s2tPipelineId;\n  }\n  set s2tPipelineId(value: string | undefined) {\n    this._s2tPipelineId = value;\n  }\n  get audioChunk(): Uint8Array | undefined {\n    return this._audioChunk;\n  }\n  set audioChunk(value: Uint8Array | undefined) {\n    this._audioChunk = value;\n  }\n  get ctcDecoding(): CTCDecoding | undefined {\n    return this._ctcDecoding;\n  }\n  set ctcDecoding(value: CTCDecoding | undefined) {\n    this._ctcDecoding = value;\n  }\n  get languageModelName(): string | undefined {\n    return this._languageModelName;\n  }\n  set languageModelName(value: string | undefined) {\n    this._languageModelName = value;\n  }\n  get spellingCorrection(): boolean | undefined {\n    return this._spellingCorrection;\n  }\n  set spellingCorrection(value: boolean | undefined) {\n    this._spellingCorrection = value;\n  }\n  get disableNormalization(): boolean | undefined {\n    return this._disableNormalization;\n  }\n  set disableNormalization(value: boolean | undefined) {\n    this._disableNormalization = value;\n  }\n  get endOfStream(): boolean | undefined {\n    return this._endOfStream;\n  }\n  set endOfStream(value: boolean | undefined) {\n    this._endOfStream = value;\n  }\n  get returnStartOfSpeech(): boolean | undefined {\n    return this._returnStartOfSpeech;\n  }\n  set returnStartOfSpeech(value: boolean | undefined) {\n    this._returnStartOfSpeech = value;\n  }\n  get returnAudio(): boolean | undefined {\n    return this._returnAudio;\n  }\n  set returnAudio(value: boolean | undefined) {\n    this._returnAudio = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeStreamRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeStreamRequest.AsObject {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      audioChunk: this.audioChunk\n        ? this.audioChunk.subarray(0)\n        : new Uint8Array(),\n      ctcDecoding: this.ctcDecoding,\n      languageModelName: this.languageModelName,\n      spellingCorrection: this.spellingCorrection,\n      disableNormalization: this.disableNormalization,\n      endOfStream: this.endOfStream,\n      returnStartOfSpeech: this.returnStartOfSpeech,\n      returnAudio: this.returnAudio\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeStreamRequest.AsProtobufJSON {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      audioChunk: this.audioChunk ? uint8ArrayToBase64(this.audioChunk) : '',\n      ctcDecoding: CTCDecoding[this.ctcDecoding ?? 0],\n      languageModelName: this.languageModelName,\n      spellingCorrection: this.spellingCorrection,\n      disableNormalization: this.disableNormalization,\n      endOfStream: this.endOfStream,\n      returnStartOfSpeech: this.returnStartOfSpeech,\n      returnAudio: this.returnAudio\n    };\n  }\n}\nexport module TranscribeStreamRequest {\n  /**\n   * Standard JavaScript object representation for TranscribeStreamRequest\n   */\n  export interface AsObject {\n    s2tPipelineId?: string;\n    audioChunk?: Uint8Array;\n    ctcDecoding?: CTCDecoding;\n    languageModelName?: string;\n    spellingCorrection?: boolean;\n    disableNormalization?: boolean;\n    endOfStream?: boolean;\n    returnStartOfSpeech?: boolean;\n    returnAudio?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeStreamRequest\n   */\n  export interface AsProtobufJSON {\n    s2tPipelineId?: string;\n    audioChunk?: string;\n    ctcDecoding?: string;\n    languageModelName?: string;\n    spellingCorrection?: boolean;\n    disableNormalization?: boolean;\n    endOfStream?: boolean;\n    returnStartOfSpeech?: boolean;\n    returnAudio?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeStreamResponse\n */\nexport class TranscribeStreamResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeStreamResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeStreamResponse();\n    TranscribeStreamResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeStreamResponse) {\n    _instance.transcription = _instance.transcription || '';\n    _instance.time = _instance.time || 0;\n    _instance.final = _instance.final || false;\n    _instance.returnAudio = _instance.returnAudio || false;\n    _instance.audio = _instance.audio || new Uint8Array();\n    _instance.utteranceStart = _instance.utteranceStart || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeStreamResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.transcription = _reader.readString();\n          break;\n        case 2:\n          _instance.time = _reader.readFloat();\n          break;\n        case 3:\n          _instance.final = _reader.readBool();\n          break;\n        case 4:\n          _instance.returnAudio = _reader.readBool();\n          break;\n        case 5:\n          _instance.audio = _reader.readBytes();\n          break;\n        case 6:\n          _instance.utteranceStart = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeStreamResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeStreamResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcription) {\n      _writer.writeString(1, _instance.transcription);\n    }\n    if (_instance.time) {\n      _writer.writeFloat(2, _instance.time);\n    }\n    if (_instance.final) {\n      _writer.writeBool(3, _instance.final);\n    }\n    if (_instance.returnAudio) {\n      _writer.writeBool(4, _instance.returnAudio);\n    }\n    if (_instance.audio && _instance.audio.length) {\n      _writer.writeBytes(5, _instance.audio);\n    }\n    if (_instance.utteranceStart) {\n      _writer.writeBool(6, _instance.utteranceStart);\n    }\n  }\n\n  private _transcription?: string;\n  private _time?: number;\n  private _final?: boolean;\n  private _returnAudio?: boolean;\n  private _audio?: Uint8Array;\n  private _utteranceStart?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeStreamResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeStreamResponse.AsObject>) {\n    _value = _value || {};\n    this.transcription = _value.transcription;\n    this.time = _value.time;\n    this.final = _value.final;\n    this.returnAudio = _value.returnAudio;\n    this.audio = _value.audio;\n    this.utteranceStart = _value.utteranceStart;\n    TranscribeStreamResponse.refineValues(this);\n  }\n  get transcription(): string | undefined {\n    return this._transcription;\n  }\n  set transcription(value: string | undefined) {\n    this._transcription = value;\n  }\n  get time(): number | undefined {\n    return this._time;\n  }\n  set time(value: number | undefined) {\n    this._time = value;\n  }\n  get final(): boolean | undefined {\n    return this._final;\n  }\n  set final(value: boolean | undefined) {\n    this._final = value;\n  }\n  get returnAudio(): boolean | undefined {\n    return this._returnAudio;\n  }\n  set returnAudio(value: boolean | undefined) {\n    this._returnAudio = value;\n  }\n  get audio(): Uint8Array | undefined {\n    return this._audio;\n  }\n  set audio(value: Uint8Array | undefined) {\n    this._audio = value;\n  }\n  get utteranceStart(): boolean | undefined {\n    return this._utteranceStart;\n  }\n  set utteranceStart(value: boolean | undefined) {\n    this._utteranceStart = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeStreamResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeStreamResponse.AsObject {\n    return {\n      transcription: this.transcription,\n      time: this.time,\n      final: this.final,\n      returnAudio: this.returnAudio,\n      audio: this.audio ? this.audio.subarray(0) : new Uint8Array(),\n      utteranceStart: this.utteranceStart\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeStreamResponse.AsProtobufJSON {\n    return {\n      transcription: this.transcription,\n      time: this.time,\n      final: this.final,\n      returnAudio: this.returnAudio,\n      audio: this.audio ? uint8ArrayToBase64(this.audio) : '',\n      utteranceStart: this.utteranceStart\n    };\n  }\n}\nexport module TranscribeStreamResponse {\n  /**\n   * Standard JavaScript object representation for TranscribeStreamResponse\n   */\n  export interface AsObject {\n    transcription?: string;\n    time?: number;\n    final?: boolean;\n    returnAudio?: boolean;\n    audio?: Uint8Array;\n    utteranceStart?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeStreamResponse\n   */\n  export interface AsProtobufJSON {\n    transcription?: string;\n    time?: number;\n    final?: boolean;\n    returnAudio?: boolean;\n    audio?: string;\n    utteranceStart?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeFileRequest\n */\nexport class TranscribeFileRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeFileRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeFileRequest();\n    TranscribeFileRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeFileRequest) {\n    _instance.s2tPipelineId = _instance.s2tPipelineId || '';\n    _instance.audioFile = _instance.audioFile || new Uint8Array();\n    _instance.ctcDecoding = _instance.ctcDecoding || 0;\n    _instance.languageModelName = _instance.languageModelName || '';\n    _instance.spellingCorrection = _instance.spellingCorrection || false;\n    _instance.disableNormalization = _instance.disableNormalization || false;\n    _instance.includeTiming = _instance.includeTiming || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeFileRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.s2tPipelineId = _reader.readString();\n          break;\n        case 2:\n          _instance.audioFile = _reader.readBytes();\n          break;\n        case 3:\n          _instance.ctcDecoding = _reader.readEnum();\n          break;\n        case 4:\n          _instance.languageModelName = _reader.readString();\n          break;\n        case 5:\n          _instance.spellingCorrection = _reader.readBool();\n          break;\n        case 6:\n          _instance.disableNormalization = _reader.readBool();\n          break;\n        case 7:\n          _instance.includeTiming = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeFileRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeFileRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.s2tPipelineId) {\n      _writer.writeString(1, _instance.s2tPipelineId);\n    }\n    if (_instance.audioFile && _instance.audioFile.length) {\n      _writer.writeBytes(2, _instance.audioFile);\n    }\n    if (_instance.ctcDecoding) {\n      _writer.writeEnum(3, _instance.ctcDecoding);\n    }\n    if (_instance.languageModelName) {\n      _writer.writeString(4, _instance.languageModelName);\n    }\n    if (_instance.spellingCorrection) {\n      _writer.writeBool(5, _instance.spellingCorrection);\n    }\n    if (_instance.disableNormalization) {\n      _writer.writeBool(6, _instance.disableNormalization);\n    }\n    if (_instance.includeTiming) {\n      _writer.writeBool(7, _instance.includeTiming);\n    }\n  }\n\n  private _s2tPipelineId?: string;\n  private _audioFile?: Uint8Array;\n  private _ctcDecoding?: CTCDecoding;\n  private _languageModelName?: string;\n  private _spellingCorrection?: boolean;\n  private _disableNormalization?: boolean;\n  private _includeTiming?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeFileRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeFileRequest.AsObject>) {\n    _value = _value || {};\n    this.s2tPipelineId = _value.s2tPipelineId;\n    this.audioFile = _value.audioFile;\n    this.ctcDecoding = _value.ctcDecoding;\n    this.languageModelName = _value.languageModelName;\n    this.spellingCorrection = _value.spellingCorrection;\n    this.disableNormalization = _value.disableNormalization;\n    this.includeTiming = _value.includeTiming;\n    TranscribeFileRequest.refineValues(this);\n  }\n  get s2tPipelineId(): string | undefined {\n    return this._s2tPipelineId;\n  }\n  set s2tPipelineId(value: string | undefined) {\n    this._s2tPipelineId = value;\n  }\n  get audioFile(): Uint8Array | undefined {\n    return this._audioFile;\n  }\n  set audioFile(value: Uint8Array | undefined) {\n    this._audioFile = value;\n  }\n  get ctcDecoding(): CTCDecoding | undefined {\n    return this._ctcDecoding;\n  }\n  set ctcDecoding(value: CTCDecoding | undefined) {\n    this._ctcDecoding = value;\n  }\n  get languageModelName(): string | undefined {\n    return this._languageModelName;\n  }\n  set languageModelName(value: string | undefined) {\n    this._languageModelName = value;\n  }\n  get spellingCorrection(): boolean | undefined {\n    return this._spellingCorrection;\n  }\n  set spellingCorrection(value: boolean | undefined) {\n    this._spellingCorrection = value;\n  }\n  get disableNormalization(): boolean | undefined {\n    return this._disableNormalization;\n  }\n  set disableNormalization(value: boolean | undefined) {\n    this._disableNormalization = value;\n  }\n  get includeTiming(): boolean | undefined {\n    return this._includeTiming;\n  }\n  set includeTiming(value: boolean | undefined) {\n    this._includeTiming = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeFileRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeFileRequest.AsObject {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      audioFile: this.audioFile ? this.audioFile.subarray(0) : new Uint8Array(),\n      ctcDecoding: this.ctcDecoding,\n      languageModelName: this.languageModelName,\n      spellingCorrection: this.spellingCorrection,\n      disableNormalization: this.disableNormalization,\n      includeTiming: this.includeTiming\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeFileRequest.AsProtobufJSON {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      audioFile: this.audioFile ? uint8ArrayToBase64(this.audioFile) : '',\n      ctcDecoding: CTCDecoding[this.ctcDecoding ?? 0],\n      languageModelName: this.languageModelName,\n      spellingCorrection: this.spellingCorrection,\n      disableNormalization: this.disableNormalization,\n      includeTiming: this.includeTiming\n    };\n  }\n}\nexport module TranscribeFileRequest {\n  /**\n   * Standard JavaScript object representation for TranscribeFileRequest\n   */\n  export interface AsObject {\n    s2tPipelineId?: string;\n    audioFile?: Uint8Array;\n    ctcDecoding?: CTCDecoding;\n    languageModelName?: string;\n    spellingCorrection?: boolean;\n    disableNormalization?: boolean;\n    includeTiming?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeFileRequest\n   */\n  export interface AsProtobufJSON {\n    s2tPipelineId?: string;\n    audioFile?: string;\n    ctcDecoding?: string;\n    languageModelName?: string;\n    spellingCorrection?: boolean;\n    disableNormalization?: boolean;\n    includeTiming?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeFileResponse\n */\nexport class TranscribeFileResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeFileResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeFileResponse();\n    TranscribeFileResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeFileResponse) {\n    _instance.transcription = _instance.transcription || '';\n    _instance.time = _instance.time || 0;\n    _instance.wordTiming = _instance.wordTiming || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeFileResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.transcription = _reader.readString();\n          break;\n        case 2:\n          _instance.time = _reader.readFloat();\n          break;\n        case 3:\n          const messageInitializer3 = new WordTiming();\n          _reader.readMessage(\n            messageInitializer3,\n            WordTiming.deserializeBinaryFromReader\n          );\n          (_instance.wordTiming = _instance.wordTiming || []).push(\n            messageInitializer3\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeFileResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeFileResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcription) {\n      _writer.writeString(1, _instance.transcription);\n    }\n    if (_instance.time) {\n      _writer.writeFloat(2, _instance.time);\n    }\n    if (_instance.wordTiming && _instance.wordTiming.length) {\n      _writer.writeRepeatedMessage(\n        3,\n        _instance.wordTiming as any,\n        WordTiming.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _transcription?: string;\n  private _time?: number;\n  private _wordTiming?: WordTiming[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeFileResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeFileResponse.AsObject>) {\n    _value = _value || {};\n    this.transcription = _value.transcription;\n    this.time = _value.time;\n    this.wordTiming = (_value.wordTiming || []).map(m => new WordTiming(m));\n    TranscribeFileResponse.refineValues(this);\n  }\n  get transcription(): string | undefined {\n    return this._transcription;\n  }\n  set transcription(value: string | undefined) {\n    this._transcription = value;\n  }\n  get time(): number | undefined {\n    return this._time;\n  }\n  set time(value: number | undefined) {\n    this._time = value;\n  }\n  get wordTiming(): WordTiming[] | undefined {\n    return this._wordTiming;\n  }\n  set wordTiming(value: WordTiming[] | undefined) {\n    this._wordTiming = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeFileResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeFileResponse.AsObject {\n    return {\n      transcription: this.transcription,\n      time: this.time,\n      wordTiming: (this.wordTiming || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeFileResponse.AsProtobufJSON {\n    return {\n      transcription: this.transcription,\n      time: this.time,\n      wordTiming: (this.wordTiming || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module TranscribeFileResponse {\n  /**\n   * Standard JavaScript object representation for TranscribeFileResponse\n   */\n  export interface AsObject {\n    transcription?: string;\n    time?: number;\n    wordTiming?: WordTiming.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeFileResponse\n   */\n  export interface AsProtobufJSON {\n    transcription?: string;\n    time?: number;\n    wordTiming?: WordTiming.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.WordTiming\n */\nexport class WordTiming implements GrpcMessage {\n  static id = 'ondewo.s2t.WordTiming';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new WordTiming();\n    WordTiming.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: WordTiming) {\n    _instance.word = _instance.word || '';\n    _instance.begin = _instance.begin || 0;\n    _instance.end = _instance.end || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: WordTiming,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.word = _reader.readString();\n          break;\n        case 2:\n          _instance.begin = _reader.readInt32();\n          break;\n        case 3:\n          _instance.end = _reader.readInt32();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    WordTiming.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: WordTiming, _writer: BinaryWriter) {\n    if (_instance.word) {\n      _writer.writeString(1, _instance.word);\n    }\n    if (_instance.begin) {\n      _writer.writeInt32(2, _instance.begin);\n    }\n    if (_instance.end) {\n      _writer.writeInt32(3, _instance.end);\n    }\n  }\n\n  private _word?: string;\n  private _begin?: number;\n  private _end?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of WordTiming to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<WordTiming.AsObject>) {\n    _value = _value || {};\n    this.word = _value.word;\n    this.begin = _value.begin;\n    this.end = _value.end;\n    WordTiming.refineValues(this);\n  }\n  get word(): string | undefined {\n    return this._word;\n  }\n  set word(value: string | undefined) {\n    this._word = value;\n  }\n  get begin(): number | undefined {\n    return this._begin;\n  }\n  set begin(value: number | undefined) {\n    this._begin = value;\n  }\n  get end(): number | undefined {\n    return this._end;\n  }\n  set end(value: number | undefined) {\n    this._end = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    WordTiming.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): WordTiming.AsObject {\n    return {\n      word: this.word,\n      begin: this.begin,\n      end: this.end\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): WordTiming.AsProtobufJSON {\n    return {\n      word: this.word,\n      begin: this.begin,\n      end: this.end\n    };\n  }\n}\nexport module WordTiming {\n  /**\n   * Standard JavaScript object representation for WordTiming\n   */\n  export interface AsObject {\n    word?: string;\n    begin?: number;\n    end?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for WordTiming\n   */\n  export interface AsProtobufJSON {\n    word?: string;\n    begin?: number;\n    end?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.S2tPipelineId\n */\nexport class S2tPipelineId implements GrpcMessage {\n  static id = 'ondewo.s2t.S2tPipelineId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new S2tPipelineId();\n    S2tPipelineId.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: S2tPipelineId) {\n    _instance.id = _instance.id || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: S2tPipelineId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    S2tPipelineId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: S2tPipelineId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of S2tPipelineId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<S2tPipelineId.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    S2tPipelineId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    S2tPipelineId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): S2tPipelineId.AsObject {\n    return {\n      id: this.id\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): S2tPipelineId.AsProtobufJSON {\n    return {\n      id: this.id\n    };\n  }\n}\nexport module S2tPipelineId {\n  /**\n   * Standard JavaScript object representation for S2tPipelineId\n   */\n  export interface AsObject {\n    id?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for S2tPipelineId\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tPipelinesRequest\n */\nexport class ListS2tPipelinesRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tPipelinesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tPipelinesRequest();\n    ListS2tPipelinesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tPipelinesRequest) {\n    _instance.languages = _instance.languages || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tPipelinesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tPipelinesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tPipelinesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(3, _instance.domains);\n    }\n  }\n\n  private _languages?: string[];\n  private _pipelineOwners?: string[];\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tPipelinesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tPipelinesRequest.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.domains = (_value.domains || []).slice();\n    ListS2tPipelinesRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tPipelinesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tPipelinesRequest.AsObject {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tPipelinesRequest.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListS2tPipelinesRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tPipelinesRequest\n   */\n  export interface AsObject {\n    languages?: string[];\n    pipelineOwners?: string[];\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tPipelinesRequest\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n    pipelineOwners?: string[];\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tPipelinesResponse\n */\nexport class ListS2tPipelinesResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tPipelinesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tPipelinesResponse();\n    ListS2tPipelinesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tPipelinesResponse) {\n    _instance.pipelineConfigs = _instance.pipelineConfigs || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tPipelinesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Speech2TextConfig();\n          _reader.readMessage(\n            messageInitializer1,\n            Speech2TextConfig.deserializeBinaryFromReader\n          );\n          (_instance.pipelineConfigs = _instance.pipelineConfigs || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tPipelinesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tPipelinesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelineConfigs && _instance.pipelineConfigs.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.pipelineConfigs as any,\n        Speech2TextConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _pipelineConfigs?: Speech2TextConfig[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tPipelinesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tPipelinesResponse.AsObject>) {\n    _value = _value || {};\n    this.pipelineConfigs = (_value.pipelineConfigs || []).map(\n      m => new Speech2TextConfig(m)\n    );\n    ListS2tPipelinesResponse.refineValues(this);\n  }\n  get pipelineConfigs(): Speech2TextConfig[] | undefined {\n    return this._pipelineConfigs;\n  }\n  set pipelineConfigs(value: Speech2TextConfig[] | undefined) {\n    this._pipelineConfigs = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tPipelinesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tPipelinesResponse.AsObject {\n    return {\n      pipelineConfigs: (this.pipelineConfigs || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tPipelinesResponse.AsProtobufJSON {\n    return {\n      pipelineConfigs: (this.pipelineConfigs || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module ListS2tPipelinesResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tPipelinesResponse\n   */\n  export interface AsObject {\n    pipelineConfigs?: Speech2TextConfig.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tPipelinesResponse\n   */\n  export interface AsProtobufJSON {\n    pipelineConfigs?: Speech2TextConfig.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguagesRequest\n */\nexport class ListS2tLanguagesRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguagesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguagesRequest();\n    ListS2tLanguagesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguagesRequest) {\n    _instance.domains = _instance.domains || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguagesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguagesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguagesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(1, _instance.domains);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n  }\n\n  private _domains?: string[];\n  private _pipelineOwners?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguagesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tLanguagesRequest.AsObject>) {\n    _value = _value || {};\n    this.domains = (_value.domains || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    ListS2tLanguagesRequest.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguagesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguagesRequest.AsObject {\n    return {\n      domains: (this.domains || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguagesRequest.AsProtobufJSON {\n    return {\n      domains: (this.domains || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n}\nexport module ListS2tLanguagesRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguagesRequest\n   */\n  export interface AsObject {\n    domains?: string[];\n    pipelineOwners?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguagesRequest\n   */\n  export interface AsProtobufJSON {\n    domains?: string[];\n    pipelineOwners?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguagesResponse\n */\nexport class ListS2tLanguagesResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguagesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguagesResponse();\n    ListS2tLanguagesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguagesResponse) {\n    _instance.languages = _instance.languages || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguagesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguagesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguagesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n  }\n\n  private _languages?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguagesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tLanguagesResponse.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    ListS2tLanguagesResponse.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguagesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguagesResponse.AsObject {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguagesResponse.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n}\nexport module ListS2tLanguagesResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguagesResponse\n   */\n  export interface AsObject {\n    languages?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguagesResponse\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tDomainsRequest\n */\nexport class ListS2tDomainsRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tDomainsRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tDomainsRequest();\n    ListS2tDomainsRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tDomainsRequest) {\n    _instance.languages = _instance.languages || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tDomainsRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tDomainsRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tDomainsRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n  }\n\n  private _languages?: string[];\n  private _pipelineOwners?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tDomainsRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tDomainsRequest.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    ListS2tDomainsRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tDomainsRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tDomainsRequest.AsObject {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tDomainsRequest.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n}\nexport module ListS2tDomainsRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tDomainsRequest\n   */\n  export interface AsObject {\n    languages?: string[];\n    pipelineOwners?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tDomainsRequest\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n    pipelineOwners?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tDomainsResponse\n */\nexport class ListS2tDomainsResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tDomainsResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tDomainsResponse();\n    ListS2tDomainsResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tDomainsResponse) {\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tDomainsResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tDomainsResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tDomainsResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(1, _instance.domains);\n    }\n  }\n\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tDomainsResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tDomainsResponse.AsObject>) {\n    _value = _value || {};\n    this.domains = (_value.domains || []).slice();\n    ListS2tDomainsResponse.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tDomainsResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tDomainsResponse.AsObject {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tDomainsResponse.AsProtobufJSON {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListS2tDomainsResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tDomainsResponse\n   */\n  export interface AsObject {\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tDomainsResponse\n   */\n  export interface AsProtobufJSON {\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.GetServiceInfoResponse\n */\nexport class GetServiceInfoResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.GetServiceInfoResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GetServiceInfoResponse();\n    GetServiceInfoResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GetServiceInfoResponse) {\n    _instance.version = _instance.version || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GetServiceInfoResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.version = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GetServiceInfoResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: GetServiceInfoResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.version) {\n      _writer.writeString(1, _instance.version);\n    }\n  }\n\n  private _version?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GetServiceInfoResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GetServiceInfoResponse.AsObject>) {\n    _value = _value || {};\n    this.version = _value.version;\n    GetServiceInfoResponse.refineValues(this);\n  }\n  get version(): string | undefined {\n    return this._version;\n  }\n  set version(value: string | undefined) {\n    this._version = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GetServiceInfoResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GetServiceInfoResponse.AsObject {\n    return {\n      version: this.version\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GetServiceInfoResponse.AsProtobufJSON {\n    return {\n      version: this.version\n    };\n  }\n}\nexport module GetServiceInfoResponse {\n  /**\n   * Standard JavaScript object representation for GetServiceInfoResponse\n   */\n  export interface AsObject {\n    version?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GetServiceInfoResponse\n   */\n  export interface AsProtobufJSON {\n    version?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Speech2TextConfig\n */\nexport class Speech2TextConfig implements GrpcMessage {\n  static id = 'ondewo.s2t.Speech2TextConfig';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Speech2TextConfig();\n    Speech2TextConfig.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Speech2TextConfig) {\n    _instance.id = _instance.id || '';\n    _instance.description = _instance.description || undefined;\n    _instance.active = _instance.active || false;\n    _instance.inference = _instance.inference || undefined;\n    _instance.streamingServer = _instance.streamingServer || undefined;\n    _instance.voiceActivityDetection =\n      _instance.voiceActivityDetection || undefined;\n    _instance.postProcessing = _instance.postProcessing || undefined;\n    _instance.logging = _instance.logging || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Speech2TextConfig,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          _instance.description = new Description();\n          _reader.readMessage(\n            _instance.description,\n            Description.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.active = _reader.readBool();\n          break;\n        case 4:\n          _instance.inference = new Inference();\n          _reader.readMessage(\n            _instance.inference,\n            Inference.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.streamingServer = new StreamingServer();\n          _reader.readMessage(\n            _instance.streamingServer,\n            StreamingServer.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.voiceActivityDetection = new VoiceActivityDetection();\n          _reader.readMessage(\n            _instance.voiceActivityDetection,\n            VoiceActivityDetection.deserializeBinaryFromReader\n          );\n          break;\n        case 7:\n          _instance.postProcessing = new PostProcessing();\n          _reader.readMessage(\n            _instance.postProcessing,\n            PostProcessing.deserializeBinaryFromReader\n          );\n          break;\n        case 8:\n          _instance.logging = new Logging();\n          _reader.readMessage(\n            _instance.logging,\n            Logging.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Speech2TextConfig.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Speech2TextConfig,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.description) {\n      _writer.writeMessage(\n        2,\n        _instance.description as any,\n        Description.serializeBinaryToWriter\n      );\n    }\n    if (_instance.active) {\n      _writer.writeBool(3, _instance.active);\n    }\n    if (_instance.inference) {\n      _writer.writeMessage(\n        4,\n        _instance.inference as any,\n        Inference.serializeBinaryToWriter\n      );\n    }\n    if (_instance.streamingServer) {\n      _writer.writeMessage(\n        5,\n        _instance.streamingServer as any,\n        StreamingServer.serializeBinaryToWriter\n      );\n    }\n    if (_instance.voiceActivityDetection) {\n      _writer.writeMessage(\n        6,\n        _instance.voiceActivityDetection as any,\n        VoiceActivityDetection.serializeBinaryToWriter\n      );\n    }\n    if (_instance.postProcessing) {\n      _writer.writeMessage(\n        7,\n        _instance.postProcessing as any,\n        PostProcessing.serializeBinaryToWriter\n      );\n    }\n    if (_instance.logging) {\n      _writer.writeMessage(\n        8,\n        _instance.logging as any,\n        Logging.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _description?: Description;\n  private _active?: boolean;\n  private _inference?: Inference;\n  private _streamingServer?: StreamingServer;\n  private _voiceActivityDetection?: VoiceActivityDetection;\n  private _postProcessing?: PostProcessing;\n  private _logging?: Logging;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Speech2TextConfig to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Speech2TextConfig.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.description = _value.description\n      ? new Description(_value.description)\n      : undefined;\n    this.active = _value.active;\n    this.inference = _value.inference\n      ? new Inference(_value.inference)\n      : undefined;\n    this.streamingServer = _value.streamingServer\n      ? new StreamingServer(_value.streamingServer)\n      : undefined;\n    this.voiceActivityDetection = _value.voiceActivityDetection\n      ? new VoiceActivityDetection(_value.voiceActivityDetection)\n      : undefined;\n    this.postProcessing = _value.postProcessing\n      ? new PostProcessing(_value.postProcessing)\n      : undefined;\n    this.logging = _value.logging ? new Logging(_value.logging) : undefined;\n    Speech2TextConfig.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get description(): Description | undefined {\n    return this._description;\n  }\n  set description(value: Description | undefined) {\n    this._description = value;\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get inference(): Inference | undefined {\n    return this._inference;\n  }\n  set inference(value: Inference | undefined) {\n    this._inference = value;\n  }\n  get streamingServer(): StreamingServer | undefined {\n    return this._streamingServer;\n  }\n  set streamingServer(value: StreamingServer | undefined) {\n    this._streamingServer = value;\n  }\n  get voiceActivityDetection(): VoiceActivityDetection | undefined {\n    return this._voiceActivityDetection;\n  }\n  set voiceActivityDetection(value: VoiceActivityDetection | undefined) {\n    this._voiceActivityDetection = value;\n  }\n  get postProcessing(): PostProcessing | undefined {\n    return this._postProcessing;\n  }\n  set postProcessing(value: PostProcessing | undefined) {\n    this._postProcessing = value;\n  }\n  get logging(): Logging | undefined {\n    return this._logging;\n  }\n  set logging(value: Logging | undefined) {\n    this._logging = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Speech2TextConfig.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Speech2TextConfig.AsObject {\n    return {\n      id: this.id,\n      description: this.description ? this.description.toObject() : undefined,\n      active: this.active,\n      inference: this.inference ? this.inference.toObject() : undefined,\n      streamingServer: this.streamingServer\n        ? this.streamingServer.toObject()\n        : undefined,\n      voiceActivityDetection: this.voiceActivityDetection\n        ? this.voiceActivityDetection.toObject()\n        : undefined,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toObject()\n        : undefined,\n      logging: this.logging ? this.logging.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Speech2TextConfig.AsProtobufJSON {\n    return {\n      id: this.id,\n      description: this.description\n        ? this.description.toProtobufJSON(options)\n        : null,\n      active: this.active,\n      inference: this.inference ? this.inference.toProtobufJSON(options) : null,\n      streamingServer: this.streamingServer\n        ? this.streamingServer.toProtobufJSON(options)\n        : null,\n      voiceActivityDetection: this.voiceActivityDetection\n        ? this.voiceActivityDetection.toProtobufJSON(options)\n        : null,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toProtobufJSON(options)\n        : null,\n      logging: this.logging ? this.logging.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module Speech2TextConfig {\n  /**\n   * Standard JavaScript object representation for Speech2TextConfig\n   */\n  export interface AsObject {\n    id?: string;\n    description?: Description.AsObject;\n    active?: boolean;\n    inference?: Inference.AsObject;\n    streamingServer?: StreamingServer.AsObject;\n    voiceActivityDetection?: VoiceActivityDetection.AsObject;\n    postProcessing?: PostProcessing.AsObject;\n    logging?: Logging.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Speech2TextConfig\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    description?: Description.AsProtobufJSON | null;\n    active?: boolean;\n    inference?: Inference.AsProtobufJSON | null;\n    streamingServer?: StreamingServer.AsProtobufJSON | null;\n    voiceActivityDetection?: VoiceActivityDetection.AsProtobufJSON | null;\n    postProcessing?: PostProcessing.AsProtobufJSON | null;\n    logging?: Logging.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Description\n */\nexport class Description implements GrpcMessage {\n  static id = 'ondewo.s2t.Description';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Description();\n    Description.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Description) {\n    _instance.language = _instance.language || '';\n    _instance.pipelineOwner = _instance.pipelineOwner || '';\n    _instance.domain = _instance.domain || '';\n    _instance.comments = _instance.comments || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Description,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        case 2:\n          _instance.pipelineOwner = _reader.readString();\n          break;\n        case 3:\n          _instance.domain = _reader.readString();\n          break;\n        case 4:\n          _instance.comments = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Description.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Description,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n    if (_instance.pipelineOwner) {\n      _writer.writeString(2, _instance.pipelineOwner);\n    }\n    if (_instance.domain) {\n      _writer.writeString(3, _instance.domain);\n    }\n    if (_instance.comments) {\n      _writer.writeString(4, _instance.comments);\n    }\n  }\n\n  private _language?: string;\n  private _pipelineOwner?: string;\n  private _domain?: string;\n  private _comments?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Description to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Description.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    this.pipelineOwner = _value.pipelineOwner;\n    this.domain = _value.domain;\n    this.comments = _value.comments;\n    Description.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get pipelineOwner(): string | undefined {\n    return this._pipelineOwner;\n  }\n  set pipelineOwner(value: string | undefined) {\n    this._pipelineOwner = value;\n  }\n  get domain(): string | undefined {\n    return this._domain;\n  }\n  set domain(value: string | undefined) {\n    this._domain = value;\n  }\n  get comments(): string | undefined {\n    return this._comments;\n  }\n  set comments(value: string | undefined) {\n    this._comments = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Description.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Description.AsObject {\n    return {\n      language: this.language,\n      pipelineOwner: this.pipelineOwner,\n      domain: this.domain,\n      comments: this.comments\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Description.AsProtobufJSON {\n    return {\n      language: this.language,\n      pipelineOwner: this.pipelineOwner,\n      domain: this.domain,\n      comments: this.comments\n    };\n  }\n}\nexport module Description {\n  /**\n   * Standard JavaScript object representation for Description\n   */\n  export interface AsObject {\n    language?: string;\n    pipelineOwner?: string;\n    domain?: string;\n    comments?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Description\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n    pipelineOwner?: string;\n    domain?: string;\n    comments?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Inference\n */\nexport class Inference implements GrpcMessage {\n  static id = 'ondewo.s2t.Inference';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Inference();\n    Inference.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Inference) {\n    _instance.ctcAcousticModels = _instance.ctcAcousticModels || undefined;\n    _instance.languageModels = _instance.languageModels || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Inference,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.ctcAcousticModels = new CtcAcousticModels();\n          _reader.readMessage(\n            _instance.ctcAcousticModels,\n            CtcAcousticModels.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.languageModels = new LanguageModels();\n          _reader.readMessage(\n            _instance.languageModels,\n            LanguageModels.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Inference.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Inference, _writer: BinaryWriter) {\n    if (_instance.ctcAcousticModels) {\n      _writer.writeMessage(\n        1,\n        _instance.ctcAcousticModels as any,\n        CtcAcousticModels.serializeBinaryToWriter\n      );\n    }\n    if (_instance.languageModels) {\n      _writer.writeMessage(\n        2,\n        _instance.languageModels as any,\n        LanguageModels.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _ctcAcousticModels?: CtcAcousticModels;\n  private _languageModels?: LanguageModels;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Inference to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Inference.AsObject>) {\n    _value = _value || {};\n    this.ctcAcousticModels = _value.ctcAcousticModels\n      ? new CtcAcousticModels(_value.ctcAcousticModels)\n      : undefined;\n    this.languageModels = _value.languageModels\n      ? new LanguageModels(_value.languageModels)\n      : undefined;\n    Inference.refineValues(this);\n  }\n  get ctcAcousticModels(): CtcAcousticModels | undefined {\n    return this._ctcAcousticModels;\n  }\n  set ctcAcousticModels(value: CtcAcousticModels | undefined) {\n    this._ctcAcousticModels = value;\n  }\n  get languageModels(): LanguageModels | undefined {\n    return this._languageModels;\n  }\n  set languageModels(value: LanguageModels | undefined) {\n    this._languageModels = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Inference.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Inference.AsObject {\n    return {\n      ctcAcousticModels: this.ctcAcousticModels\n        ? this.ctcAcousticModels.toObject()\n        : undefined,\n      languageModels: this.languageModels\n        ? this.languageModels.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Inference.AsProtobufJSON {\n    return {\n      ctcAcousticModels: this.ctcAcousticModels\n        ? this.ctcAcousticModels.toProtobufJSON(options)\n        : null,\n      languageModels: this.languageModels\n        ? this.languageModels.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Inference {\n  /**\n   * Standard JavaScript object representation for Inference\n   */\n  export interface AsObject {\n    ctcAcousticModels?: CtcAcousticModels.AsObject;\n    languageModels?: LanguageModels.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Inference\n   */\n  export interface AsProtobufJSON {\n    ctcAcousticModels?: CtcAcousticModels.AsProtobufJSON | null;\n    languageModels?: LanguageModels.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.CtcAcousticModels\n */\nexport class CtcAcousticModels implements GrpcMessage {\n  static id = 'ondewo.s2t.CtcAcousticModels';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CtcAcousticModels();\n    CtcAcousticModels.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CtcAcousticModels) {\n    _instance.type = _instance.type || '';\n    _instance.quartznet = _instance.quartznet || undefined;\n    _instance.quartznetTriton = _instance.quartznetTriton || undefined;\n    _instance.wav2vec = _instance.wav2vec || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CtcAcousticModels,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.quartznet = new Quartznet();\n          _reader.readMessage(\n            _instance.quartznet,\n            Quartznet.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.quartznetTriton = new QuartznetTriton();\n          _reader.readMessage(\n            _instance.quartznetTriton,\n            QuartznetTriton.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.wav2vec = new Wav2Vec();\n          _reader.readMessage(\n            _instance.wav2vec,\n            Wav2Vec.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CtcAcousticModels.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CtcAcousticModels,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.quartznet) {\n      _writer.writeMessage(\n        2,\n        _instance.quartznet as any,\n        Quartznet.serializeBinaryToWriter\n      );\n    }\n    if (_instance.quartznetTriton) {\n      _writer.writeMessage(\n        3,\n        _instance.quartznetTriton as any,\n        QuartznetTriton.serializeBinaryToWriter\n      );\n    }\n    if (_instance.wav2vec) {\n      _writer.writeMessage(\n        4,\n        _instance.wav2vec as any,\n        Wav2Vec.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _quartznet?: Quartznet;\n  private _quartznetTriton?: QuartznetTriton;\n  private _wav2vec?: Wav2Vec;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CtcAcousticModels to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CtcAcousticModels.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.quartznet = _value.quartznet\n      ? new Quartznet(_value.quartznet)\n      : undefined;\n    this.quartznetTriton = _value.quartznetTriton\n      ? new QuartznetTriton(_value.quartznetTriton)\n      : undefined;\n    this.wav2vec = _value.wav2vec ? new Wav2Vec(_value.wav2vec) : undefined;\n    CtcAcousticModels.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get quartznet(): Quartznet | undefined {\n    return this._quartznet;\n  }\n  set quartznet(value: Quartznet | undefined) {\n    this._quartznet = value;\n  }\n  get quartznetTriton(): QuartznetTriton | undefined {\n    return this._quartznetTriton;\n  }\n  set quartznetTriton(value: QuartznetTriton | undefined) {\n    this._quartznetTriton = value;\n  }\n  get wav2vec(): Wav2Vec | undefined {\n    return this._wav2vec;\n  }\n  set wav2vec(value: Wav2Vec | undefined) {\n    this._wav2vec = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CtcAcousticModels.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CtcAcousticModels.AsObject {\n    return {\n      type: this.type,\n      quartznet: this.quartznet ? this.quartznet.toObject() : undefined,\n      quartznetTriton: this.quartznetTriton\n        ? this.quartznetTriton.toObject()\n        : undefined,\n      wav2vec: this.wav2vec ? this.wav2vec.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CtcAcousticModels.AsProtobufJSON {\n    return {\n      type: this.type,\n      quartznet: this.quartznet ? this.quartznet.toProtobufJSON(options) : null,\n      quartznetTriton: this.quartznetTriton\n        ? this.quartznetTriton.toProtobufJSON(options)\n        : null,\n      wav2vec: this.wav2vec ? this.wav2vec.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module CtcAcousticModels {\n  /**\n   * Standard JavaScript object representation for CtcAcousticModels\n   */\n  export interface AsObject {\n    type?: string;\n    quartznet?: Quartznet.AsObject;\n    quartznetTriton?: QuartznetTriton.AsObject;\n    wav2vec?: Wav2Vec.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for CtcAcousticModels\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    quartznet?: Quartznet.AsProtobufJSON | null;\n    quartznetTriton?: QuartznetTriton.AsProtobufJSON | null;\n    wav2vec?: Wav2Vec.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Wav2Vec\n */\nexport class Wav2Vec implements GrpcMessage {\n  static id = 'ondewo.s2t.Wav2Vec';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Wav2Vec();\n    Wav2Vec.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Wav2Vec) {\n    _instance.modelPath = _instance.modelPath || '';\n    _instance.useGpu = _instance.useGpu || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Wav2Vec,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.modelPath = _reader.readString();\n          break;\n        case 2:\n          _instance.useGpu = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Wav2Vec.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Wav2Vec, _writer: BinaryWriter) {\n    if (_instance.modelPath) {\n      _writer.writeString(1, _instance.modelPath);\n    }\n    if (_instance.useGpu) {\n      _writer.writeBool(2, _instance.useGpu);\n    }\n  }\n\n  private _modelPath?: string;\n  private _useGpu?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Wav2Vec to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Wav2Vec.AsObject>) {\n    _value = _value || {};\n    this.modelPath = _value.modelPath;\n    this.useGpu = _value.useGpu;\n    Wav2Vec.refineValues(this);\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Wav2Vec.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Wav2Vec.AsObject {\n    return {\n      modelPath: this.modelPath,\n      useGpu: this.useGpu\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Wav2Vec.AsProtobufJSON {\n    return {\n      modelPath: this.modelPath,\n      useGpu: this.useGpu\n    };\n  }\n}\nexport module Wav2Vec {\n  /**\n   * Standard JavaScript object representation for Wav2Vec\n   */\n  export interface AsObject {\n    modelPath?: string;\n    useGpu?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for Wav2Vec\n   */\n  export interface AsProtobufJSON {\n    modelPath?: string;\n    useGpu?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Quartznet\n */\nexport class Quartznet implements GrpcMessage {\n  static id = 'ondewo.s2t.Quartznet';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Quartznet();\n    Quartznet.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Quartznet) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.loadType = _instance.loadType || '';\n    _instance.ptFiles = _instance.ptFiles || undefined;\n    _instance.ckptFile = _instance.ckptFile || undefined;\n    _instance.useGpu = _instance.useGpu || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Quartznet,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.loadType = _reader.readString();\n          break;\n        case 3:\n          _instance.ptFiles = new PtFiles();\n          _reader.readMessage(\n            _instance.ptFiles,\n            PtFiles.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.ckptFile = new CkptFile();\n          _reader.readMessage(\n            _instance.ckptFile,\n            CkptFile.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.useGpu = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Quartznet.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Quartznet, _writer: BinaryWriter) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.loadType) {\n      _writer.writeString(2, _instance.loadType);\n    }\n    if (_instance.ptFiles) {\n      _writer.writeMessage(\n        3,\n        _instance.ptFiles as any,\n        PtFiles.serializeBinaryToWriter\n      );\n    }\n    if (_instance.ckptFile) {\n      _writer.writeMessage(\n        4,\n        _instance.ckptFile as any,\n        CkptFile.serializeBinaryToWriter\n      );\n    }\n    if (_instance.useGpu) {\n      _writer.writeBool(5, _instance.useGpu);\n    }\n  }\n\n  private _configPath?: string;\n  private _loadType?: string;\n  private _ptFiles?: PtFiles;\n  private _ckptFile?: CkptFile;\n  private _useGpu?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Quartznet to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Quartznet.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.loadType = _value.loadType;\n    this.ptFiles = _value.ptFiles ? new PtFiles(_value.ptFiles) : undefined;\n    this.ckptFile = _value.ckptFile ? new CkptFile(_value.ckptFile) : undefined;\n    this.useGpu = _value.useGpu;\n    Quartznet.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get loadType(): string | undefined {\n    return this._loadType;\n  }\n  set loadType(value: string | undefined) {\n    this._loadType = value;\n  }\n  get ptFiles(): PtFiles | undefined {\n    return this._ptFiles;\n  }\n  set ptFiles(value: PtFiles | undefined) {\n    this._ptFiles = value;\n  }\n  get ckptFile(): CkptFile | undefined {\n    return this._ckptFile;\n  }\n  set ckptFile(value: CkptFile | undefined) {\n    this._ckptFile = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Quartznet.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Quartznet.AsObject {\n    return {\n      configPath: this.configPath,\n      loadType: this.loadType,\n      ptFiles: this.ptFiles ? this.ptFiles.toObject() : undefined,\n      ckptFile: this.ckptFile ? this.ckptFile.toObject() : undefined,\n      useGpu: this.useGpu\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Quartznet.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      loadType: this.loadType,\n      ptFiles: this.ptFiles ? this.ptFiles.toProtobufJSON(options) : null,\n      ckptFile: this.ckptFile ? this.ckptFile.toProtobufJSON(options) : null,\n      useGpu: this.useGpu\n    };\n  }\n}\nexport module Quartznet {\n  /**\n   * Standard JavaScript object representation for Quartznet\n   */\n  export interface AsObject {\n    configPath?: string;\n    loadType?: string;\n    ptFiles?: PtFiles.AsObject;\n    ckptFile?: CkptFile.AsObject;\n    useGpu?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for Quartznet\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    loadType?: string;\n    ptFiles?: PtFiles.AsProtobufJSON | null;\n    ckptFile?: CkptFile.AsProtobufJSON | null;\n    useGpu?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PtFiles\n */\nexport class PtFiles implements GrpcMessage {\n  static id = 'ondewo.s2t.PtFiles';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PtFiles();\n    PtFiles.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PtFiles) {\n    _instance.path = _instance.path || '';\n    _instance.step = _instance.step || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PtFiles,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.path = _reader.readString();\n          break;\n        case 2:\n          _instance.step = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PtFiles.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: PtFiles, _writer: BinaryWriter) {\n    if (_instance.path) {\n      _writer.writeString(1, _instance.path);\n    }\n    if (_instance.step) {\n      _writer.writeString(2, _instance.step);\n    }\n  }\n\n  private _path?: string;\n  private _step?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PtFiles to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PtFiles.AsObject>) {\n    _value = _value || {};\n    this.path = _value.path;\n    this.step = _value.step;\n    PtFiles.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get step(): string | undefined {\n    return this._step;\n  }\n  set step(value: string | undefined) {\n    this._step = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PtFiles.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PtFiles.AsObject {\n    return {\n      path: this.path,\n      step: this.step\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PtFiles.AsProtobufJSON {\n    return {\n      path: this.path,\n      step: this.step\n    };\n  }\n}\nexport module PtFiles {\n  /**\n   * Standard JavaScript object representation for PtFiles\n   */\n  export interface AsObject {\n    path?: string;\n    step?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for PtFiles\n   */\n  export interface AsProtobufJSON {\n    path?: string;\n    step?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.CkptFile\n */\nexport class CkptFile implements GrpcMessage {\n  static id = 'ondewo.s2t.CkptFile';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CkptFile();\n    CkptFile.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CkptFile) {\n    _instance.path = _instance.path || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CkptFile,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.path = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CkptFile.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: CkptFile, _writer: BinaryWriter) {\n    if (_instance.path) {\n      _writer.writeString(1, _instance.path);\n    }\n  }\n\n  private _path?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CkptFile to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CkptFile.AsObject>) {\n    _value = _value || {};\n    this.path = _value.path;\n    CkptFile.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CkptFile.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CkptFile.AsObject {\n    return {\n      path: this.path\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CkptFile.AsProtobufJSON {\n    return {\n      path: this.path\n    };\n  }\n}\nexport module CkptFile {\n  /**\n   * Standard JavaScript object representation for CkptFile\n   */\n  export interface AsObject {\n    path?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for CkptFile\n   */\n  export interface AsProtobufJSON {\n    path?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.QuartznetTriton\n */\nexport class QuartznetTriton implements GrpcMessage {\n  static id = 'ondewo.s2t.QuartznetTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new QuartznetTriton();\n    QuartznetTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: QuartznetTriton) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.tritonUrl = _instance.tritonUrl || '';\n    _instance.tritonModel = _instance.tritonModel || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: QuartznetTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.tritonUrl = _reader.readString();\n          break;\n        case 3:\n          _instance.tritonModel = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    QuartznetTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: QuartznetTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.tritonUrl) {\n      _writer.writeString(2, _instance.tritonUrl);\n    }\n    if (_instance.tritonModel) {\n      _writer.writeString(3, _instance.tritonModel);\n    }\n  }\n\n  private _configPath?: string;\n  private _tritonUrl?: string;\n  private _tritonModel?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of QuartznetTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<QuartznetTriton.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.tritonUrl = _value.tritonUrl;\n    this.tritonModel = _value.tritonModel;\n    QuartznetTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  get tritonModel(): string | undefined {\n    return this._tritonModel;\n  }\n  set tritonModel(value: string | undefined) {\n    this._tritonModel = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    QuartznetTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): QuartznetTriton.AsObject {\n    return {\n      configPath: this.configPath,\n      tritonUrl: this.tritonUrl,\n      tritonModel: this.tritonModel\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): QuartznetTriton.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      tritonUrl: this.tritonUrl,\n      tritonModel: this.tritonModel\n    };\n  }\n}\nexport module QuartznetTriton {\n  /**\n   * Standard JavaScript object representation for QuartznetTriton\n   */\n  export interface AsObject {\n    configPath?: string;\n    tritonUrl?: string;\n    tritonModel?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for QuartznetTriton\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    tritonUrl?: string;\n    tritonModel?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.LanguageModels\n */\nexport class LanguageModels implements GrpcMessage {\n  static id = 'ondewo.s2t.LanguageModels';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new LanguageModels();\n    LanguageModels.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: LanguageModels) {\n    _instance.path = _instance.path || '';\n    _instance.beamSize = _instance.beamSize || '0';\n    _instance.defaultLm = _instance.defaultLm || '';\n    _instance.beamSearchScorerAlpha = _instance.beamSearchScorerAlpha || 0;\n    _instance.beamSearchScorerBeta = _instance.beamSearchScorerBeta || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: LanguageModels,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.path = _reader.readString();\n          break;\n        case 2:\n          _instance.beamSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.defaultLm = _reader.readString();\n          break;\n        case 4:\n          _instance.beamSearchScorerAlpha = _reader.readFloat();\n          break;\n        case 5:\n          _instance.beamSearchScorerBeta = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    LanguageModels.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: LanguageModels,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.path) {\n      _writer.writeString(1, _instance.path);\n    }\n    if (_instance.beamSize) {\n      _writer.writeInt64String(2, _instance.beamSize);\n    }\n    if (_instance.defaultLm) {\n      _writer.writeString(3, _instance.defaultLm);\n    }\n    if (_instance.beamSearchScorerAlpha) {\n      _writer.writeFloat(4, _instance.beamSearchScorerAlpha);\n    }\n    if (_instance.beamSearchScorerBeta) {\n      _writer.writeFloat(5, _instance.beamSearchScorerBeta);\n    }\n  }\n\n  private _path?: string;\n  private _beamSize?: string;\n  private _defaultLm?: string;\n  private _beamSearchScorerAlpha?: number;\n  private _beamSearchScorerBeta?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of LanguageModels to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<LanguageModels.AsObject>) {\n    _value = _value || {};\n    this.path = _value.path;\n    this.beamSize = _value.beamSize;\n    this.defaultLm = _value.defaultLm;\n    this.beamSearchScorerAlpha = _value.beamSearchScorerAlpha;\n    this.beamSearchScorerBeta = _value.beamSearchScorerBeta;\n    LanguageModels.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get beamSize(): string | undefined {\n    return this._beamSize;\n  }\n  set beamSize(value: string | undefined) {\n    this._beamSize = value;\n  }\n  get defaultLm(): string | undefined {\n    return this._defaultLm;\n  }\n  set defaultLm(value: string | undefined) {\n    this._defaultLm = value;\n  }\n  get beamSearchScorerAlpha(): number | undefined {\n    return this._beamSearchScorerAlpha;\n  }\n  set beamSearchScorerAlpha(value: number | undefined) {\n    this._beamSearchScorerAlpha = value;\n  }\n  get beamSearchScorerBeta(): number | undefined {\n    return this._beamSearchScorerBeta;\n  }\n  set beamSearchScorerBeta(value: number | undefined) {\n    this._beamSearchScorerBeta = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    LanguageModels.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): LanguageModels.AsObject {\n    return {\n      path: this.path,\n      beamSize: this.beamSize,\n      defaultLm: this.defaultLm,\n      beamSearchScorerAlpha: this.beamSearchScorerAlpha,\n      beamSearchScorerBeta: this.beamSearchScorerBeta\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): LanguageModels.AsProtobufJSON {\n    return {\n      path: this.path,\n      beamSize: this.beamSize,\n      defaultLm: this.defaultLm,\n      beamSearchScorerAlpha: this.beamSearchScorerAlpha,\n      beamSearchScorerBeta: this.beamSearchScorerBeta\n    };\n  }\n}\nexport module LanguageModels {\n  /**\n   * Standard JavaScript object representation for LanguageModels\n   */\n  export interface AsObject {\n    path?: string;\n    beamSize?: string;\n    defaultLm?: string;\n    beamSearchScorerAlpha?: number;\n    beamSearchScorerBeta?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for LanguageModels\n   */\n  export interface AsProtobufJSON {\n    path?: string;\n    beamSize?: string;\n    defaultLm?: string;\n    beamSearchScorerAlpha?: number;\n    beamSearchScorerBeta?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.StreamingServer\n */\nexport class StreamingServer implements GrpcMessage {\n  static id = 'ondewo.s2t.StreamingServer';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new StreamingServer();\n    StreamingServer.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: StreamingServer) {\n    _instance.host = _instance.host || '';\n    _instance.port = _instance.port || '0';\n    _instance.outputStyle = _instance.outputStyle || '';\n    _instance.streamingSpeechRecognition =\n      _instance.streamingSpeechRecognition || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: StreamingServer,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.host = _reader.readString();\n          break;\n        case 2:\n          _instance.port = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.outputStyle = _reader.readString();\n          break;\n        case 4:\n          _instance.streamingSpeechRecognition = new StreamingSpeechRecognition();\n          _reader.readMessage(\n            _instance.streamingSpeechRecognition,\n            StreamingSpeechRecognition.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    StreamingServer.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: StreamingServer,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.host) {\n      _writer.writeString(1, _instance.host);\n    }\n    if (_instance.port) {\n      _writer.writeInt64String(2, _instance.port);\n    }\n    if (_instance.outputStyle) {\n      _writer.writeString(3, _instance.outputStyle);\n    }\n    if (_instance.streamingSpeechRecognition) {\n      _writer.writeMessage(\n        4,\n        _instance.streamingSpeechRecognition as any,\n        StreamingSpeechRecognition.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _host?: string;\n  private _port?: string;\n  private _outputStyle?: string;\n  private _streamingSpeechRecognition?: StreamingSpeechRecognition;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of StreamingServer to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<StreamingServer.AsObject>) {\n    _value = _value || {};\n    this.host = _value.host;\n    this.port = _value.port;\n    this.outputStyle = _value.outputStyle;\n    this.streamingSpeechRecognition = _value.streamingSpeechRecognition\n      ? new StreamingSpeechRecognition(_value.streamingSpeechRecognition)\n      : undefined;\n    StreamingServer.refineValues(this);\n  }\n  get host(): string | undefined {\n    return this._host;\n  }\n  set host(value: string | undefined) {\n    this._host = value;\n  }\n  get port(): string | undefined {\n    return this._port;\n  }\n  set port(value: string | undefined) {\n    this._port = value;\n  }\n  get outputStyle(): string | undefined {\n    return this._outputStyle;\n  }\n  set outputStyle(value: string | undefined) {\n    this._outputStyle = value;\n  }\n  get streamingSpeechRecognition(): StreamingSpeechRecognition | undefined {\n    return this._streamingSpeechRecognition;\n  }\n  set streamingSpeechRecognition(\n    value: StreamingSpeechRecognition | undefined\n  ) {\n    this._streamingSpeechRecognition = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    StreamingServer.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): StreamingServer.AsObject {\n    return {\n      host: this.host,\n      port: this.port,\n      outputStyle: this.outputStyle,\n      streamingSpeechRecognition: this.streamingSpeechRecognition\n        ? this.streamingSpeechRecognition.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): StreamingServer.AsProtobufJSON {\n    return {\n      host: this.host,\n      port: this.port,\n      outputStyle: this.outputStyle,\n      streamingSpeechRecognition: this.streamingSpeechRecognition\n        ? this.streamingSpeechRecognition.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module StreamingServer {\n  /**\n   * Standard JavaScript object representation for StreamingServer\n   */\n  export interface AsObject {\n    host?: string;\n    port?: string;\n    outputStyle?: string;\n    streamingSpeechRecognition?: StreamingSpeechRecognition.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for StreamingServer\n   */\n  export interface AsProtobufJSON {\n    host?: string;\n    port?: string;\n    outputStyle?: string;\n    streamingSpeechRecognition?: StreamingSpeechRecognition.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.StreamingSpeechRecognition\n */\nexport class StreamingSpeechRecognition implements GrpcMessage {\n  static id = 'ondewo.s2t.StreamingSpeechRecognition';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new StreamingSpeechRecognition();\n    StreamingSpeechRecognition.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: StreamingSpeechRecognition) {\n    _instance.transcribeNotFinal = _instance.transcribeNotFinal || false;\n    _instance.ctcDecodingMethod = _instance.ctcDecodingMethod || '';\n    _instance.samplingRate = _instance.samplingRate || '0';\n    _instance.minAudioChunkSize = _instance.minAudioChunkSize || '0';\n    _instance.startOfUtteranceThreshold =\n      _instance.startOfUtteranceThreshold || 0;\n    _instance.endOfUtteranceThreshold = _instance.endOfUtteranceThreshold || 0;\n    _instance.nextChunkTimeout = _instance.nextChunkTimeout || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: StreamingSpeechRecognition,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.transcribeNotFinal = _reader.readBool();\n          break;\n        case 2:\n          _instance.ctcDecodingMethod = _reader.readString();\n          break;\n        case 3:\n          _instance.samplingRate = _reader.readInt64String();\n          break;\n        case 4:\n          _instance.minAudioChunkSize = _reader.readInt64String();\n          break;\n        case 5:\n          _instance.startOfUtteranceThreshold = _reader.readFloat();\n          break;\n        case 6:\n          _instance.endOfUtteranceThreshold = _reader.readFloat();\n          break;\n        case 7:\n          _instance.nextChunkTimeout = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    StreamingSpeechRecognition.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: StreamingSpeechRecognition,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcribeNotFinal) {\n      _writer.writeBool(1, _instance.transcribeNotFinal);\n    }\n    if (_instance.ctcDecodingMethod) {\n      _writer.writeString(2, _instance.ctcDecodingMethod);\n    }\n    if (_instance.samplingRate) {\n      _writer.writeInt64String(3, _instance.samplingRate);\n    }\n    if (_instance.minAudioChunkSize) {\n      _writer.writeInt64String(4, _instance.minAudioChunkSize);\n    }\n    if (_instance.startOfUtteranceThreshold) {\n      _writer.writeFloat(5, _instance.startOfUtteranceThreshold);\n    }\n    if (_instance.endOfUtteranceThreshold) {\n      _writer.writeFloat(6, _instance.endOfUtteranceThreshold);\n    }\n    if (_instance.nextChunkTimeout) {\n      _writer.writeFloat(7, _instance.nextChunkTimeout);\n    }\n  }\n\n  private _transcribeNotFinal?: boolean;\n  private _ctcDecodingMethod?: string;\n  private _samplingRate?: string;\n  private _minAudioChunkSize?: string;\n  private _startOfUtteranceThreshold?: number;\n  private _endOfUtteranceThreshold?: number;\n  private _nextChunkTimeout?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of StreamingSpeechRecognition to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<StreamingSpeechRecognition.AsObject>) {\n    _value = _value || {};\n    this.transcribeNotFinal = _value.transcribeNotFinal;\n    this.ctcDecodingMethod = _value.ctcDecodingMethod;\n    this.samplingRate = _value.samplingRate;\n    this.minAudioChunkSize = _value.minAudioChunkSize;\n    this.startOfUtteranceThreshold = _value.startOfUtteranceThreshold;\n    this.endOfUtteranceThreshold = _value.endOfUtteranceThreshold;\n    this.nextChunkTimeout = _value.nextChunkTimeout;\n    StreamingSpeechRecognition.refineValues(this);\n  }\n  get transcribeNotFinal(): boolean | undefined {\n    return this._transcribeNotFinal;\n  }\n  set transcribeNotFinal(value: boolean | undefined) {\n    this._transcribeNotFinal = value;\n  }\n  get ctcDecodingMethod(): string | undefined {\n    return this._ctcDecodingMethod;\n  }\n  set ctcDecodingMethod(value: string | undefined) {\n    this._ctcDecodingMethod = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get minAudioChunkSize(): string | undefined {\n    return this._minAudioChunkSize;\n  }\n  set minAudioChunkSize(value: string | undefined) {\n    this._minAudioChunkSize = value;\n  }\n  get startOfUtteranceThreshold(): number | undefined {\n    return this._startOfUtteranceThreshold;\n  }\n  set startOfUtteranceThreshold(value: number | undefined) {\n    this._startOfUtteranceThreshold = value;\n  }\n  get endOfUtteranceThreshold(): number | undefined {\n    return this._endOfUtteranceThreshold;\n  }\n  set endOfUtteranceThreshold(value: number | undefined) {\n    this._endOfUtteranceThreshold = value;\n  }\n  get nextChunkTimeout(): number | undefined {\n    return this._nextChunkTimeout;\n  }\n  set nextChunkTimeout(value: number | undefined) {\n    this._nextChunkTimeout = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    StreamingSpeechRecognition.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): StreamingSpeechRecognition.AsObject {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      ctcDecodingMethod: this.ctcDecodingMethod,\n      samplingRate: this.samplingRate,\n      minAudioChunkSize: this.minAudioChunkSize,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold,\n      nextChunkTimeout: this.nextChunkTimeout\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): StreamingSpeechRecognition.AsProtobufJSON {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      ctcDecodingMethod: this.ctcDecodingMethod,\n      samplingRate: this.samplingRate,\n      minAudioChunkSize: this.minAudioChunkSize,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold,\n      nextChunkTimeout: this.nextChunkTimeout\n    };\n  }\n}\nexport module StreamingSpeechRecognition {\n  /**\n   * Standard JavaScript object representation for StreamingSpeechRecognition\n   */\n  export interface AsObject {\n    transcribeNotFinal?: boolean;\n    ctcDecodingMethod?: string;\n    samplingRate?: string;\n    minAudioChunkSize?: string;\n    startOfUtteranceThreshold?: number;\n    endOfUtteranceThreshold?: number;\n    nextChunkTimeout?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for StreamingSpeechRecognition\n   */\n  export interface AsProtobufJSON {\n    transcribeNotFinal?: boolean;\n    ctcDecodingMethod?: string;\n    samplingRate?: string;\n    minAudioChunkSize?: string;\n    startOfUtteranceThreshold?: number;\n    endOfUtteranceThreshold?: number;\n    nextChunkTimeout?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.VoiceActivityDetection\n */\nexport class VoiceActivityDetection implements GrpcMessage {\n  static id = 'ondewo.s2t.VoiceActivityDetection';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new VoiceActivityDetection();\n    VoiceActivityDetection.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: VoiceActivityDetection) {\n    _instance.active = _instance.active || '';\n    _instance.samplingRate = _instance.samplingRate || '0';\n    _instance.pyannote = _instance.pyannote || undefined;\n    _instance.matchbox = _instance.matchbox || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: VoiceActivityDetection,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.active = _reader.readString();\n          break;\n        case 2:\n          _instance.samplingRate = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.pyannote = new Pyannote();\n          _reader.readMessage(\n            _instance.pyannote,\n            Pyannote.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.matchbox = new Matchbox();\n          _reader.readMessage(\n            _instance.matchbox,\n            Matchbox.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    VoiceActivityDetection.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: VoiceActivityDetection,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.active) {\n      _writer.writeString(1, _instance.active);\n    }\n    if (_instance.samplingRate) {\n      _writer.writeInt64String(2, _instance.samplingRate);\n    }\n    if (_instance.pyannote) {\n      _writer.writeMessage(\n        3,\n        _instance.pyannote as any,\n        Pyannote.serializeBinaryToWriter\n      );\n    }\n    if (_instance.matchbox) {\n      _writer.writeMessage(\n        4,\n        _instance.matchbox as any,\n        Matchbox.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _active?: string;\n  private _samplingRate?: string;\n  private _pyannote?: Pyannote;\n  private _matchbox?: Matchbox;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of VoiceActivityDetection to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<VoiceActivityDetection.AsObject>) {\n    _value = _value || {};\n    this.active = _value.active;\n    this.samplingRate = _value.samplingRate;\n    this.pyannote = _value.pyannote ? new Pyannote(_value.pyannote) : undefined;\n    this.matchbox = _value.matchbox ? new Matchbox(_value.matchbox) : undefined;\n    VoiceActivityDetection.refineValues(this);\n  }\n  get active(): string | undefined {\n    return this._active;\n  }\n  set active(value: string | undefined) {\n    this._active = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get pyannote(): Pyannote | undefined {\n    return this._pyannote;\n  }\n  set pyannote(value: Pyannote | undefined) {\n    this._pyannote = value;\n  }\n  get matchbox(): Matchbox | undefined {\n    return this._matchbox;\n  }\n  set matchbox(value: Matchbox | undefined) {\n    this._matchbox = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    VoiceActivityDetection.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): VoiceActivityDetection.AsObject {\n    return {\n      active: this.active,\n      samplingRate: this.samplingRate,\n      pyannote: this.pyannote ? this.pyannote.toObject() : undefined,\n      matchbox: this.matchbox ? this.matchbox.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): VoiceActivityDetection.AsProtobufJSON {\n    return {\n      active: this.active,\n      samplingRate: this.samplingRate,\n      pyannote: this.pyannote ? this.pyannote.toProtobufJSON(options) : null,\n      matchbox: this.matchbox ? this.matchbox.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module VoiceActivityDetection {\n  /**\n   * Standard JavaScript object representation for VoiceActivityDetection\n   */\n  export interface AsObject {\n    active?: string;\n    samplingRate?: string;\n    pyannote?: Pyannote.AsObject;\n    matchbox?: Matchbox.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for VoiceActivityDetection\n   */\n  export interface AsProtobufJSON {\n    active?: string;\n    samplingRate?: string;\n    pyannote?: Pyannote.AsProtobufJSON | null;\n    matchbox?: Matchbox.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Pyannote\n */\nexport class Pyannote implements GrpcMessage {\n  static id = 'ondewo.s2t.Pyannote';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Pyannote();\n    Pyannote.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Pyannote) {\n    _instance.modelPath = _instance.modelPath || '';\n    _instance.minAudioSize = _instance.minAudioSize || '0';\n    _instance.offset = _instance.offset || 0;\n    _instance.onset = _instance.onset || 0;\n    _instance.logScale = _instance.logScale || false;\n    _instance.minDurationOff = _instance.minDurationOff || 0;\n    _instance.minDurationOn = _instance.minDurationOn || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Pyannote,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.modelPath = _reader.readString();\n          break;\n        case 2:\n          _instance.minAudioSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.offset = _reader.readFloat();\n          break;\n        case 4:\n          _instance.onset = _reader.readFloat();\n          break;\n        case 5:\n          _instance.logScale = _reader.readBool();\n          break;\n        case 6:\n          _instance.minDurationOff = _reader.readFloat();\n          break;\n        case 7:\n          _instance.minDurationOn = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Pyannote.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Pyannote, _writer: BinaryWriter) {\n    if (_instance.modelPath) {\n      _writer.writeString(1, _instance.modelPath);\n    }\n    if (_instance.minAudioSize) {\n      _writer.writeInt64String(2, _instance.minAudioSize);\n    }\n    if (_instance.offset) {\n      _writer.writeFloat(3, _instance.offset);\n    }\n    if (_instance.onset) {\n      _writer.writeFloat(4, _instance.onset);\n    }\n    if (_instance.logScale) {\n      _writer.writeBool(5, _instance.logScale);\n    }\n    if (_instance.minDurationOff) {\n      _writer.writeFloat(6, _instance.minDurationOff);\n    }\n    if (_instance.minDurationOn) {\n      _writer.writeFloat(7, _instance.minDurationOn);\n    }\n  }\n\n  private _modelPath?: string;\n  private _minAudioSize?: string;\n  private _offset?: number;\n  private _onset?: number;\n  private _logScale?: boolean;\n  private _minDurationOff?: number;\n  private _minDurationOn?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Pyannote to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Pyannote.AsObject>) {\n    _value = _value || {};\n    this.modelPath = _value.modelPath;\n    this.minAudioSize = _value.minAudioSize;\n    this.offset = _value.offset;\n    this.onset = _value.onset;\n    this.logScale = _value.logScale;\n    this.minDurationOff = _value.minDurationOff;\n    this.minDurationOn = _value.minDurationOn;\n    Pyannote.refineValues(this);\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  get minAudioSize(): string | undefined {\n    return this._minAudioSize;\n  }\n  set minAudioSize(value: string | undefined) {\n    this._minAudioSize = value;\n  }\n  get offset(): number | undefined {\n    return this._offset;\n  }\n  set offset(value: number | undefined) {\n    this._offset = value;\n  }\n  get onset(): number | undefined {\n    return this._onset;\n  }\n  set onset(value: number | undefined) {\n    this._onset = value;\n  }\n  get logScale(): boolean | undefined {\n    return this._logScale;\n  }\n  set logScale(value: boolean | undefined) {\n    this._logScale = value;\n  }\n  get minDurationOff(): number | undefined {\n    return this._minDurationOff;\n  }\n  set minDurationOff(value: number | undefined) {\n    this._minDurationOff = value;\n  }\n  get minDurationOn(): number | undefined {\n    return this._minDurationOn;\n  }\n  set minDurationOn(value: number | undefined) {\n    this._minDurationOn = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Pyannote.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Pyannote.AsObject {\n    return {\n      modelPath: this.modelPath,\n      minAudioSize: this.minAudioSize,\n      offset: this.offset,\n      onset: this.onset,\n      logScale: this.logScale,\n      minDurationOff: this.minDurationOff,\n      minDurationOn: this.minDurationOn\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Pyannote.AsProtobufJSON {\n    return {\n      modelPath: this.modelPath,\n      minAudioSize: this.minAudioSize,\n      offset: this.offset,\n      onset: this.onset,\n      logScale: this.logScale,\n      minDurationOff: this.minDurationOff,\n      minDurationOn: this.minDurationOn\n    };\n  }\n}\nexport module Pyannote {\n  /**\n   * Standard JavaScript object representation for Pyannote\n   */\n  export interface AsObject {\n    modelPath?: string;\n    minAudioSize?: string;\n    offset?: number;\n    onset?: number;\n    logScale?: boolean;\n    minDurationOff?: number;\n    minDurationOn?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Pyannote\n   */\n  export interface AsProtobufJSON {\n    modelPath?: string;\n    minAudioSize?: string;\n    offset?: number;\n    onset?: number;\n    logScale?: boolean;\n    minDurationOff?: number;\n    minDurationOn?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Matchbox\n */\nexport class Matchbox implements GrpcMessage {\n  static id = 'ondewo.s2t.Matchbox';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Matchbox();\n    Matchbox.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Matchbox) {\n    _instance.modelConfig = _instance.modelConfig || '';\n    _instance.encoderPath = _instance.encoderPath || '';\n    _instance.decoderPath = _instance.decoderPath || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Matchbox,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.modelConfig = _reader.readString();\n          break;\n        case 2:\n          _instance.encoderPath = _reader.readString();\n          break;\n        case 3:\n          _instance.decoderPath = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Matchbox.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Matchbox, _writer: BinaryWriter) {\n    if (_instance.modelConfig) {\n      _writer.writeString(1, _instance.modelConfig);\n    }\n    if (_instance.encoderPath) {\n      _writer.writeString(2, _instance.encoderPath);\n    }\n    if (_instance.decoderPath) {\n      _writer.writeString(3, _instance.decoderPath);\n    }\n  }\n\n  private _modelConfig?: string;\n  private _encoderPath?: string;\n  private _decoderPath?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Matchbox to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Matchbox.AsObject>) {\n    _value = _value || {};\n    this.modelConfig = _value.modelConfig;\n    this.encoderPath = _value.encoderPath;\n    this.decoderPath = _value.decoderPath;\n    Matchbox.refineValues(this);\n  }\n  get modelConfig(): string | undefined {\n    return this._modelConfig;\n  }\n  set modelConfig(value: string | undefined) {\n    this._modelConfig = value;\n  }\n  get encoderPath(): string | undefined {\n    return this._encoderPath;\n  }\n  set encoderPath(value: string | undefined) {\n    this._encoderPath = value;\n  }\n  get decoderPath(): string | undefined {\n    return this._decoderPath;\n  }\n  set decoderPath(value: string | undefined) {\n    this._decoderPath = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Matchbox.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Matchbox.AsObject {\n    return {\n      modelConfig: this.modelConfig,\n      encoderPath: this.encoderPath,\n      decoderPath: this.decoderPath\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Matchbox.AsProtobufJSON {\n    return {\n      modelConfig: this.modelConfig,\n      encoderPath: this.encoderPath,\n      decoderPath: this.decoderPath\n    };\n  }\n}\nexport module Matchbox {\n  /**\n   * Standard JavaScript object representation for Matchbox\n   */\n  export interface AsObject {\n    modelConfig?: string;\n    encoderPath?: string;\n    decoderPath?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Matchbox\n   */\n  export interface AsProtobufJSON {\n    modelConfig?: string;\n    encoderPath?: string;\n    decoderPath?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PostProcessing\n */\nexport class PostProcessing implements GrpcMessage {\n  static id = 'ondewo.s2t.PostProcessing';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PostProcessing();\n    PostProcessing.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PostProcessing) {\n    _instance.pipeline = _instance.pipeline || [];\n    _instance.postProcessors = _instance.postProcessors || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PostProcessing,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.pipeline = _instance.pipeline || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          _instance.postProcessors = new PostProcessors();\n          _reader.readMessage(\n            _instance.postProcessors,\n            PostProcessors.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PostProcessing.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PostProcessing,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipeline && _instance.pipeline.length) {\n      _writer.writeRepeatedString(1, _instance.pipeline);\n    }\n    if (_instance.postProcessors) {\n      _writer.writeMessage(\n        2,\n        _instance.postProcessors as any,\n        PostProcessors.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _pipeline?: string[];\n  private _postProcessors?: PostProcessors;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PostProcessing to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PostProcessing.AsObject>) {\n    _value = _value || {};\n    this.pipeline = (_value.pipeline || []).slice();\n    this.postProcessors = _value.postProcessors\n      ? new PostProcessors(_value.postProcessors)\n      : undefined;\n    PostProcessing.refineValues(this);\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get postProcessors(): PostProcessors | undefined {\n    return this._postProcessors;\n  }\n  set postProcessors(value: PostProcessors | undefined) {\n    this._postProcessors = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PostProcessing.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PostProcessing.AsObject {\n    return {\n      pipeline: (this.pipeline || []).slice(),\n      postProcessors: this.postProcessors\n        ? this.postProcessors.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PostProcessing.AsProtobufJSON {\n    return {\n      pipeline: (this.pipeline || []).slice(),\n      postProcessors: this.postProcessors\n        ? this.postProcessors.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module PostProcessing {\n  /**\n   * Standard JavaScript object representation for PostProcessing\n   */\n  export interface AsObject {\n    pipeline?: string[];\n    postProcessors?: PostProcessors.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for PostProcessing\n   */\n  export interface AsProtobufJSON {\n    pipeline?: string[];\n    postProcessors?: PostProcessors.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PostProcessors\n */\nexport class PostProcessors implements GrpcMessage {\n  static id = 'ondewo.s2t.PostProcessors';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PostProcessors();\n    PostProcessors.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PostProcessors) {\n    _instance.symSpell = _instance.symSpell || undefined;\n    _instance.normalization = _instance.normalization || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PostProcessors,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.symSpell = new SymSpell();\n          _reader.readMessage(\n            _instance.symSpell,\n            SymSpell.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.normalization = new Normalization();\n          _reader.readMessage(\n            _instance.normalization,\n            Normalization.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PostProcessors.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PostProcessors,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.symSpell) {\n      _writer.writeMessage(\n        1,\n        _instance.symSpell as any,\n        SymSpell.serializeBinaryToWriter\n      );\n    }\n    if (_instance.normalization) {\n      _writer.writeMessage(\n        2,\n        _instance.normalization as any,\n        Normalization.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _symSpell?: SymSpell;\n  private _normalization?: Normalization;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PostProcessors to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PostProcessors.AsObject>) {\n    _value = _value || {};\n    this.symSpell = _value.symSpell ? new SymSpell(_value.symSpell) : undefined;\n    this.normalization = _value.normalization\n      ? new Normalization(_value.normalization)\n      : undefined;\n    PostProcessors.refineValues(this);\n  }\n  get symSpell(): SymSpell | undefined {\n    return this._symSpell;\n  }\n  set symSpell(value: SymSpell | undefined) {\n    this._symSpell = value;\n  }\n  get normalization(): Normalization | undefined {\n    return this._normalization;\n  }\n  set normalization(value: Normalization | undefined) {\n    this._normalization = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PostProcessors.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PostProcessors.AsObject {\n    return {\n      symSpell: this.symSpell ? this.symSpell.toObject() : undefined,\n      normalization: this.normalization\n        ? this.normalization.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PostProcessors.AsProtobufJSON {\n    return {\n      symSpell: this.symSpell ? this.symSpell.toProtobufJSON(options) : null,\n      normalization: this.normalization\n        ? this.normalization.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module PostProcessors {\n  /**\n   * Standard JavaScript object representation for PostProcessors\n   */\n  export interface AsObject {\n    symSpell?: SymSpell.AsObject;\n    normalization?: Normalization.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for PostProcessors\n   */\n  export interface AsProtobufJSON {\n    symSpell?: SymSpell.AsProtobufJSON | null;\n    normalization?: Normalization.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.SymSpell\n */\nexport class SymSpell implements GrpcMessage {\n  static id = 'ondewo.s2t.SymSpell';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SymSpell();\n    SymSpell.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SymSpell) {\n    _instance.dictPath = _instance.dictPath || '';\n    _instance.maxDictionaryEditDistance =\n      _instance.maxDictionaryEditDistance || '0';\n    _instance.prefixLength = _instance.prefixLength || '0';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SymSpell,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.dictPath = _reader.readString();\n          break;\n        case 2:\n          _instance.maxDictionaryEditDistance = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.prefixLength = _reader.readInt64String();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SymSpell.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: SymSpell, _writer: BinaryWriter) {\n    if (_instance.dictPath) {\n      _writer.writeString(1, _instance.dictPath);\n    }\n    if (_instance.maxDictionaryEditDistance) {\n      _writer.writeInt64String(2, _instance.maxDictionaryEditDistance);\n    }\n    if (_instance.prefixLength) {\n      _writer.writeInt64String(3, _instance.prefixLength);\n    }\n  }\n\n  private _dictPath?: string;\n  private _maxDictionaryEditDistance?: string;\n  private _prefixLength?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SymSpell to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SymSpell.AsObject>) {\n    _value = _value || {};\n    this.dictPath = _value.dictPath;\n    this.maxDictionaryEditDistance = _value.maxDictionaryEditDistance;\n    this.prefixLength = _value.prefixLength;\n    SymSpell.refineValues(this);\n  }\n  get dictPath(): string | undefined {\n    return this._dictPath;\n  }\n  set dictPath(value: string | undefined) {\n    this._dictPath = value;\n  }\n  get maxDictionaryEditDistance(): string | undefined {\n    return this._maxDictionaryEditDistance;\n  }\n  set maxDictionaryEditDistance(value: string | undefined) {\n    this._maxDictionaryEditDistance = value;\n  }\n  get prefixLength(): string | undefined {\n    return this._prefixLength;\n  }\n  set prefixLength(value: string | undefined) {\n    this._prefixLength = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SymSpell.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SymSpell.AsObject {\n    return {\n      dictPath: this.dictPath,\n      maxDictionaryEditDistance: this.maxDictionaryEditDistance,\n      prefixLength: this.prefixLength\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SymSpell.AsProtobufJSON {\n    return {\n      dictPath: this.dictPath,\n      maxDictionaryEditDistance: this.maxDictionaryEditDistance,\n      prefixLength: this.prefixLength\n    };\n  }\n}\nexport module SymSpell {\n  /**\n   * Standard JavaScript object representation for SymSpell\n   */\n  export interface AsObject {\n    dictPath?: string;\n    maxDictionaryEditDistance?: string;\n    prefixLength?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for SymSpell\n   */\n  export interface AsProtobufJSON {\n    dictPath?: string;\n    maxDictionaryEditDistance?: string;\n    prefixLength?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Normalization\n */\nexport class Normalization implements GrpcMessage {\n  static id = 'ondewo.s2t.Normalization';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Normalization();\n    Normalization.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Normalization) {\n    _instance.language = _instance.language || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Normalization,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Normalization.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Normalization,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n  }\n\n  private _language?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Normalization to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Normalization.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    Normalization.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Normalization.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Normalization.AsObject {\n    return {\n      language: this.language\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Normalization.AsProtobufJSON {\n    return {\n      language: this.language\n    };\n  }\n}\nexport module Normalization {\n  /**\n   * Standard JavaScript object representation for Normalization\n   */\n  export interface AsObject {\n    language?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Normalization\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Logging\n */\nexport class Logging implements GrpcMessage {\n  static id = 'ondewo.s2t.Logging';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Logging();\n    Logging.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Logging) {\n    _instance.type = _instance.type || '';\n    _instance.path = _instance.path || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Logging,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.path = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Logging.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Logging, _writer: BinaryWriter) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.path) {\n      _writer.writeString(2, _instance.path);\n    }\n  }\n\n  private _type?: string;\n  private _path?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Logging to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Logging.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.path = _value.path;\n    Logging.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Logging.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Logging.AsObject {\n    return {\n      type: this.type,\n      path: this.path\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Logging.AsProtobufJSON {\n    return {\n      type: this.type,\n      path: this.path\n    };\n  }\n}\nexport module Logging {\n  /**\n   * Standard JavaScript object representation for Logging\n   */\n  export interface AsObject {\n    type?: string;\n    path?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Logging\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    path?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguageModelsRequest\n */\nexport class ListS2tLanguageModelsRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguageModelsRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguageModelsRequest();\n    ListS2tLanguageModelsRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguageModelsRequest) {\n    _instance.ids = _instance.ids || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguageModelsRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.ids = _instance.ids || []).push(_reader.readString());\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguageModelsRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguageModelsRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.ids && _instance.ids.length) {\n      _writer.writeRepeatedString(1, _instance.ids);\n    }\n  }\n\n  private _ids?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguageModelsRequest to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<ListS2tLanguageModelsRequest.AsObject>\n  ) {\n    _value = _value || {};\n    this.ids = (_value.ids || []).slice();\n    ListS2tLanguageModelsRequest.refineValues(this);\n  }\n  get ids(): string[] | undefined {\n    return this._ids;\n  }\n  set ids(value: string[] | undefined) {\n    this._ids = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguageModelsRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguageModelsRequest.AsObject {\n    return {\n      ids: (this.ids || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguageModelsRequest.AsProtobufJSON {\n    return {\n      ids: (this.ids || []).slice()\n    };\n  }\n}\nexport module ListS2tLanguageModelsRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguageModelsRequest\n   */\n  export interface AsObject {\n    ids?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguageModelsRequest\n   */\n  export interface AsProtobufJSON {\n    ids?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.LanguageModelPipelineId\n */\nexport class LanguageModelPipelineId implements GrpcMessage {\n  static id = 'ondewo.s2t.LanguageModelPipelineId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new LanguageModelPipelineId();\n    LanguageModelPipelineId.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: LanguageModelPipelineId) {\n    _instance.pipelineId = _instance.pipelineId || '';\n    _instance.modelNames = _instance.modelNames || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: LanguageModelPipelineId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.pipelineId = _reader.readString();\n          break;\n        case 2:\n          (_instance.modelNames = _instance.modelNames || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    LanguageModelPipelineId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: LanguageModelPipelineId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelineId) {\n      _writer.writeString(1, _instance.pipelineId);\n    }\n    if (_instance.modelNames && _instance.modelNames.length) {\n      _writer.writeRepeatedString(2, _instance.modelNames);\n    }\n  }\n\n  private _pipelineId?: string;\n  private _modelNames?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of LanguageModelPipelineId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<LanguageModelPipelineId.AsObject>) {\n    _value = _value || {};\n    this.pipelineId = _value.pipelineId;\n    this.modelNames = (_value.modelNames || []).slice();\n    LanguageModelPipelineId.refineValues(this);\n  }\n  get pipelineId(): string | undefined {\n    return this._pipelineId;\n  }\n  set pipelineId(value: string | undefined) {\n    this._pipelineId = value;\n  }\n  get modelNames(): string[] | undefined {\n    return this._modelNames;\n  }\n  set modelNames(value: string[] | undefined) {\n    this._modelNames = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    LanguageModelPipelineId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): LanguageModelPipelineId.AsObject {\n    return {\n      pipelineId: this.pipelineId,\n      modelNames: (this.modelNames || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): LanguageModelPipelineId.AsProtobufJSON {\n    return {\n      pipelineId: this.pipelineId,\n      modelNames: (this.modelNames || []).slice()\n    };\n  }\n}\nexport module LanguageModelPipelineId {\n  /**\n   * Standard JavaScript object representation for LanguageModelPipelineId\n   */\n  export interface AsObject {\n    pipelineId?: string;\n    modelNames?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for LanguageModelPipelineId\n   */\n  export interface AsProtobufJSON {\n    pipelineId?: string;\n    modelNames?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguageModelsResponse\n */\nexport class ListS2tLanguageModelsResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguageModelsResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguageModelsResponse();\n    ListS2tLanguageModelsResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguageModelsResponse) {\n    _instance.lmPipelineIds = _instance.lmPipelineIds || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguageModelsResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new LanguageModelPipelineId();\n          _reader.readMessage(\n            messageInitializer1,\n            LanguageModelPipelineId.deserializeBinaryFromReader\n          );\n          (_instance.lmPipelineIds = _instance.lmPipelineIds || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguageModelsResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguageModelsResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.lmPipelineIds && _instance.lmPipelineIds.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.lmPipelineIds as any,\n        LanguageModelPipelineId.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _lmPipelineIds?: LanguageModelPipelineId[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguageModelsResponse to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<ListS2tLanguageModelsResponse.AsObject>\n  ) {\n    _value = _value || {};\n    this.lmPipelineIds = (_value.lmPipelineIds || []).map(\n      m => new LanguageModelPipelineId(m)\n    );\n    ListS2tLanguageModelsResponse.refineValues(this);\n  }\n  get lmPipelineIds(): LanguageModelPipelineId[] | undefined {\n    return this._lmPipelineIds;\n  }\n  set lmPipelineIds(value: LanguageModelPipelineId[] | undefined) {\n    this._lmPipelineIds = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguageModelsResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguageModelsResponse.AsObject {\n    return {\n      lmPipelineIds: (this.lmPipelineIds || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguageModelsResponse.AsProtobufJSON {\n    return {\n      lmPipelineIds: (this.lmPipelineIds || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module ListS2tLanguageModelsResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguageModelsResponse\n   */\n  export interface AsObject {\n    lmPipelineIds?: LanguageModelPipelineId.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguageModelsResponse\n   */\n  export interface AsProtobufJSON {\n    lmPipelineIds?: LanguageModelPipelineId.AsProtobufJSON[] | null;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\n\n/**\n * Specific GrpcClientSettings for Speech2Text.\n * Use it only if your default settings are not set or the service requires other settings.\n */\nexport const GRPC_SPEECH2_TEXT_CLIENT_SETTINGS = new InjectionToken<any>(\n  'GRPC_SPEECH2_TEXT_CLIENT_SETTINGS'\n);\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcEvent,\n  GrpcMetadata\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './speech-to-text.pb';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nimport { GRPC_SPEECH2_TEXT_CLIENT_SETTINGS } from './speech-to-text.pbconf';\n/**\n * Service client implementation for ondewo.s2t.Speech2Text\n */\n@Injectable({ providedIn: 'any' })\nexport class Speech2TextClient {\n  private client: GrpcClient<any>;\n\n  /**\n   * Raw RPC implementation for each service client method.\n   * The raw methods provide more control on the incoming data and events. E.g. they can be useful to read status `OK` metadata.\n   * Attention: these methods do not throw errors when non-zero status codes are received.\n   */\n  $raw = {\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/TranscribeFile\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.TranscribeFileResponse>>\n     */\n    transcribeFile: (\n      requestData: thisProto.TranscribeFileRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.TranscribeFileResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/TranscribeFile',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.TranscribeFileRequest,\n        responseClass: thisProto.TranscribeFileResponse\n      });\n    },\n    /**\n     * Server streaming RPC for /ondewo.s2t.Speech2Text/TranscribeStream\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.TranscribeStreamResponse>>\n     */\n    transcribeStream: (\n      requestData: thisProto.TranscribeStreamRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.TranscribeStreamResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.serverStream,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/TranscribeStream',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.TranscribeStreamRequest,\n        responseClass: thisProto.TranscribeStreamResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/GetS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Speech2TextConfig>>\n     */\n    getS2tPipeline: (\n      requestData: thisProto.S2tPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Speech2TextConfig>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/GetS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.S2tPipelineId,\n        responseClass: thisProto.Speech2TextConfig\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/CreateS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.S2tPipelineId>>\n     */\n    createS2tPipeline: (\n      requestData: thisProto.Speech2TextConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.S2tPipelineId>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/CreateS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Speech2TextConfig,\n        responseClass: thisProto.S2tPipelineId\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/DeleteS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    deleteS2tPipeline: (\n      requestData: thisProto.S2tPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/DeleteS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.S2tPipelineId,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/UpdateS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    updateS2tPipeline: (\n      requestData: thisProto.Speech2TextConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/UpdateS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Speech2TextConfig,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tPipelines\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tPipelinesResponse>>\n     */\n    listS2tPipelines: (\n      requestData: thisProto.ListS2tPipelinesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tPipelinesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tPipelines',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tPipelinesRequest,\n        responseClass: thisProto.ListS2tPipelinesResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tLanguages\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tLanguagesResponse>>\n     */\n    listS2tLanguages: (\n      requestData: thisProto.ListS2tLanguagesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tLanguagesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tLanguages',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tLanguagesRequest,\n        responseClass: thisProto.ListS2tLanguagesResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tDomains\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tDomainsResponse>>\n     */\n    listS2tDomains: (\n      requestData: thisProto.ListS2tDomainsRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tDomainsResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tDomains',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tDomainsRequest,\n        responseClass: thisProto.ListS2tDomainsResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/GetServiceInfo\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.GetServiceInfoResponse>>\n     */\n    getServiceInfo: (\n      requestData: googleProtobuf000.Empty,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.GetServiceInfoResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/GetServiceInfo',\n        requestData,\n        requestMetadata,\n        requestClass: googleProtobuf000.Empty,\n        responseClass: thisProto.GetServiceInfoResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tLanguageModels\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tLanguageModelsResponse>>\n     */\n    listS2tLanguageModels: (\n      requestData: thisProto.ListS2tLanguageModelsRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tLanguageModelsResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tLanguageModels',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tLanguageModelsRequest,\n        responseClass: thisProto.ListS2tLanguageModelsResponse\n      });\n    }\n  };\n\n  constructor(\n    @Optional() @Inject(GRPC_SPEECH2_TEXT_CLIENT_SETTINGS) settings: any,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory<any>,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.s2t.Speech2Text',\n      settings\n    );\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/TranscribeFile\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.TranscribeFileResponse>\n   */\n  transcribeFile(\n    requestData: thisProto.TranscribeFileRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.TranscribeFileResponse> {\n    return this.$raw\n      .transcribeFile(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Server streaming RPC for /ondewo.s2t.Speech2Text/TranscribeStream\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.TranscribeStreamResponse>\n   */\n  transcribeStream(\n    requestData: thisProto.TranscribeStreamRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.TranscribeStreamResponse> {\n    return this.$raw\n      .transcribeStream(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/GetS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Speech2TextConfig>\n   */\n  getS2tPipeline(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Speech2TextConfig> {\n    return this.$raw\n      .getS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/CreateS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.S2tPipelineId>\n   */\n  createS2tPipeline(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.S2tPipelineId> {\n    return this.$raw\n      .createS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/DeleteS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  deleteS2tPipeline(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .deleteS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/UpdateS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  updateS2tPipeline(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .updateS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tPipelines\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tPipelinesResponse>\n   */\n  listS2tPipelines(\n    requestData: thisProto.ListS2tPipelinesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tPipelinesResponse> {\n    return this.$raw\n      .listS2tPipelines(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tLanguages\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tLanguagesResponse>\n   */\n  listS2tLanguages(\n    requestData: thisProto.ListS2tLanguagesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tLanguagesResponse> {\n    return this.$raw\n      .listS2tLanguages(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tDomains\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tDomainsResponse>\n   */\n  listS2tDomains(\n    requestData: thisProto.ListS2tDomainsRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tDomainsResponse> {\n    return this.$raw\n      .listS2tDomains(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/GetServiceInfo\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.GetServiceInfoResponse>\n   */\n  getServiceInfo(\n    requestData: googleProtobuf000.Empty,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.GetServiceInfoResponse> {\n    return this.$raw\n      .getServiceInfo(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tLanguageModels\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tLanguageModelsResponse>\n   */\n  listS2tLanguageModels(\n    requestData: thisProto.ListS2tLanguageModelsRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tLanguageModelsResponse> {\n    return this.$raw\n      .listS2tLanguageModels(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n}\n"]}