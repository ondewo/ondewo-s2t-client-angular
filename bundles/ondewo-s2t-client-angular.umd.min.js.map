{"version":3,"sources":["../../api/ondewo/s2t/speech-to-text.pb.ts","../../api/ondewo/s2t/speech-to-text.pbconf.ts","../../api/ondewo/s2t/speech-to-text.pbsc.ts"],"names":["CTCDecoding","GRPC_SPEECH2_TEXT_CLIENT_SETTINGS","InjectionToken","TranscribeStreamRequest","_value","this","s2tPipelineId","audioChunk","ctcDecoding","spellingCorrection","disableNormalization","endOfStream","refineValues","deserializeBinary","bytes","instance","deserializeBinaryFromReader","BinaryReader","_instance","Uint8Array","_reader","nextField","isEndGroup","getFieldNumber","readString","readBytes","readEnum","readBool","skipField","serializeBinaryToWriter","_writer","writeString","length","writeBytes","writeEnum","writeBool","Object","defineProperty","prototype","_s2tPipelineId","value","_audioChunk","_ctcDecoding","_spellingCorrection","_disableNormalization","_endOfStream","serializeBinary","writer","BinaryWriter","getResultBuffer","toObject","subarray","toJSON","toProtobufJSON","options","uint8ArrayToBase64","_a","id","TranscribeStreamResponse","transcription","time","final","readFloat","writeFloat","_transcription","_time","_final","TranscribeFileRequest","audioFile","includeTiming","_audioFile","_includeTiming","TranscribeFileResponse","wordTiming","map","m","WordTiming","messageInitializer3","readMessage","push","writeRepeatedMessage","_wordTiming","word","begin","end","readInt32","writeInt32","_word","_begin","_end","S2tPipelineId","_id","ListS2tPipelinesRequest","languages","slice","pipelineOwners","domains","writeRepeatedString","_languages","_pipelineOwners","_domains","ListS2tPipelinesResponse","pipelineConfigs","Speech2TextConfig","messageInitializer1","_pipelineConfigs","ListS2tLanguagesRequest","ListS2tLanguagesResponse","ListS2tDomainsRequest","ListS2tDomainsResponse","description","Description","undefined","active","inference","Inference","streamingServer","StreamingServer","voiceActivityDetection","VoiceActivityDetection","postProcessing","PostProcessing","logging","Logging","writeMessage","_description","_active","_inference","_streamingServer","_voiceActivityDetection","_postProcessing","_logging","language","pipelineOwner","domain","comments","_language","_pipelineOwner","_domain","_comments","ctcAcousticModels","CtcAcousticModels","languageModel","LanguageModel","_ctcAcousticModels","_languageModel","type","quartznet","Quartznet","quartznetTriton","QuartznetTriton","wav2vec","Wav2Vec","_type","_quartznet","_quartznetTriton","_wav2vec","modelPath","useGpu","_modelPath","_useGpu","configPath","loadType","ptFiles","PtFiles","ckptFile","CkptFile","_configPath","_loadType","_ptFiles","_ckptFile","path","step","_path","_step","tritonUrl","tritonModel","_tritonUrl","_tritonModel","beamSize","beamSearchScorerAlpha","beamSearchScorerBeta","readInt64String","writeInt64String","_beamSize","_beamSearchScorerAlpha","_beamSearchScorerBeta","host","port","outputStyle","streamingSpeechRecognition","StreamingSpeechRecognition","_host","_port","_outputStyle","_streamingSpeechRecognition","transcribeNotFinal","ctcDecodingMethod","samplingRate","minAudioChunkSize","startOfUtteranceThreshold","endOfUtteranceThreshold","_transcribeNotFinal","_ctcDecodingMethod","_samplingRate","_minAudioChunkSize","_startOfUtteranceThreshold","_endOfUtteranceThreshold","pyannote","Pyannote","matchbox","Matchbox","_pyannote","_matchbox","minAudioSize","offset","onset","logScale","minDurationOff","minDurationOn","_minAudioSize","_offset","_onset","_logScale","_minDurationOff","_minDurationOn","modelConfig","encoderPath","decoderPath","_modelConfig","_encoderPath","_decoderPath","pipeline","postProcessors","PostProcessors","_pipeline","_postProcessors","symSpell","SymSpell","normalization","Normalization","_symSpell","_normalization","dictPath","maxDictionaryEditDistance","prefixLength","_dictPath","_maxDictionaryEditDistance","_prefixLength","Speech2TextClient","settings","clientFactory","handler","_this","$raw","transcribeFile","requestData","requestMetadata","GrpcMetadata","handle","GrpcCallType","unary","client","requestClass","thisProto.TranscribeFileRequest","responseClass","thisProto.TranscribeFileResponse","transcribeStream","serverStream","thisProto.TranscribeStreamRequest","thisProto.TranscribeStreamResponse","getS2tPipeline","thisProto.S2tPipelineId","thisProto.Speech2TextConfig","createS2tPipeline","deleteS2tPipeline","googleProtobuf000.Empty","updateS2tPipeline","listS2tPipelines","thisProto.ListS2tPipelinesRequest","thisProto.ListS2tPipelinesResponse","listS2tLanguages","thisProto.ListS2tLanguagesRequest","thisProto.ListS2tLanguagesResponse","listS2tDomains","thisProto.ListS2tDomainsRequest","thisProto.ListS2tDomainsResponse","createClient","pipe","throwStatusErrors","takeMessages","Injectable","args","providedIn","Optional","Inject","GRPC_CLIENT_FACTORY","GrpcHandler"],"mappings":"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","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n  uint8ArrayToBase64\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nexport enum CTCDecoding {\n  GREEDY = 0,\n  BEAM_SEARCH_WITH_LM = 1\n}\n/**\n * Message implementation for ondewo.s2t.TranscribeStreamRequest\n */\nexport class TranscribeStreamRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeStreamRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeStreamRequest();\n    TranscribeStreamRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeStreamRequest) {\n    _instance.s2tPipelineId = _instance.s2tPipelineId || '';\n    _instance.audioChunk = _instance.audioChunk || new Uint8Array();\n    _instance.ctcDecoding = _instance.ctcDecoding || 0;\n    _instance.spellingCorrection = _instance.spellingCorrection || false;\n    _instance.disableNormalization = _instance.disableNormalization || false;\n    _instance.endOfStream = _instance.endOfStream || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeStreamRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.s2tPipelineId = _reader.readString();\n          break;\n        case 2:\n          _instance.audioChunk = _reader.readBytes();\n          break;\n        case 3:\n          _instance.ctcDecoding = _reader.readEnum();\n          break;\n        case 4:\n          _instance.spellingCorrection = _reader.readBool();\n          break;\n        case 5:\n          _instance.disableNormalization = _reader.readBool();\n          break;\n        case 6:\n          _instance.endOfStream = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeStreamRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeStreamRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.s2tPipelineId) {\n      _writer.writeString(1, _instance.s2tPipelineId);\n    }\n    if (_instance.audioChunk && _instance.audioChunk.length) {\n      _writer.writeBytes(2, _instance.audioChunk);\n    }\n    if (_instance.ctcDecoding) {\n      _writer.writeEnum(3, _instance.ctcDecoding);\n    }\n    if (_instance.spellingCorrection) {\n      _writer.writeBool(4, _instance.spellingCorrection);\n    }\n    if (_instance.disableNormalization) {\n      _writer.writeBool(5, _instance.disableNormalization);\n    }\n    if (_instance.endOfStream) {\n      _writer.writeBool(6, _instance.endOfStream);\n    }\n  }\n\n  private _s2tPipelineId?: string;\n  private _audioChunk?: Uint8Array;\n  private _ctcDecoding?: CTCDecoding;\n  private _spellingCorrection?: boolean;\n  private _disableNormalization?: boolean;\n  private _endOfStream?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeStreamRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeStreamRequest.AsObject>) {\n    _value = _value || {};\n    this.s2tPipelineId = _value.s2tPipelineId;\n    this.audioChunk = _value.audioChunk;\n    this.ctcDecoding = _value.ctcDecoding;\n    this.spellingCorrection = _value.spellingCorrection;\n    this.disableNormalization = _value.disableNormalization;\n    this.endOfStream = _value.endOfStream;\n    TranscribeStreamRequest.refineValues(this);\n  }\n  get s2tPipelineId(): string | undefined {\n    return this._s2tPipelineId;\n  }\n  set s2tPipelineId(value: string | undefined) {\n    this._s2tPipelineId = value;\n  }\n  get audioChunk(): Uint8Array | undefined {\n    return this._audioChunk;\n  }\n  set audioChunk(value: Uint8Array | undefined) {\n    this._audioChunk = value;\n  }\n  get ctcDecoding(): CTCDecoding | undefined {\n    return this._ctcDecoding;\n  }\n  set ctcDecoding(value: CTCDecoding | undefined) {\n    this._ctcDecoding = value;\n  }\n  get spellingCorrection(): boolean | undefined {\n    return this._spellingCorrection;\n  }\n  set spellingCorrection(value: boolean | undefined) {\n    this._spellingCorrection = value;\n  }\n  get disableNormalization(): boolean | undefined {\n    return this._disableNormalization;\n  }\n  set disableNormalization(value: boolean | undefined) {\n    this._disableNormalization = value;\n  }\n  get endOfStream(): boolean | undefined {\n    return this._endOfStream;\n  }\n  set endOfStream(value: boolean | undefined) {\n    this._endOfStream = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeStreamRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeStreamRequest.AsObject {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      audioChunk: this.audioChunk\n        ? this.audioChunk.subarray(0)\n        : new Uint8Array(),\n      ctcDecoding: this.ctcDecoding,\n      spellingCorrection: this.spellingCorrection,\n      disableNormalization: this.disableNormalization,\n      endOfStream: this.endOfStream\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeStreamRequest.AsProtobufJSON {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      audioChunk: this.audioChunk ? uint8ArrayToBase64(this.audioChunk) : '',\n      ctcDecoding: CTCDecoding[this.ctcDecoding ?? 0],\n      spellingCorrection: this.spellingCorrection,\n      disableNormalization: this.disableNormalization,\n      endOfStream: this.endOfStream\n    };\n  }\n}\nexport module TranscribeStreamRequest {\n  /**\n   * Standard JavaScript object representation for TranscribeStreamRequest\n   */\n  export interface AsObject {\n    s2tPipelineId?: string;\n    audioChunk?: Uint8Array;\n    ctcDecoding?: CTCDecoding;\n    spellingCorrection?: boolean;\n    disableNormalization?: boolean;\n    endOfStream?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeStreamRequest\n   */\n  export interface AsProtobufJSON {\n    s2tPipelineId?: string;\n    audioChunk?: string;\n    ctcDecoding?: string;\n    spellingCorrection?: boolean;\n    disableNormalization?: boolean;\n    endOfStream?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeStreamResponse\n */\nexport class TranscribeStreamResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeStreamResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeStreamResponse();\n    TranscribeStreamResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeStreamResponse) {\n    _instance.transcription = _instance.transcription || '';\n    _instance.time = _instance.time || 0;\n    _instance.final = _instance.final || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeStreamResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.transcription = _reader.readString();\n          break;\n        case 2:\n          _instance.time = _reader.readFloat();\n          break;\n        case 3:\n          _instance.final = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeStreamResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeStreamResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcription) {\n      _writer.writeString(1, _instance.transcription);\n    }\n    if (_instance.time) {\n      _writer.writeFloat(2, _instance.time);\n    }\n    if (_instance.final) {\n      _writer.writeBool(3, _instance.final);\n    }\n  }\n\n  private _transcription?: string;\n  private _time?: number;\n  private _final?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeStreamResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeStreamResponse.AsObject>) {\n    _value = _value || {};\n    this.transcription = _value.transcription;\n    this.time = _value.time;\n    this.final = _value.final;\n    TranscribeStreamResponse.refineValues(this);\n  }\n  get transcription(): string | undefined {\n    return this._transcription;\n  }\n  set transcription(value: string | undefined) {\n    this._transcription = value;\n  }\n  get time(): number | undefined {\n    return this._time;\n  }\n  set time(value: number | undefined) {\n    this._time = value;\n  }\n  get final(): boolean | undefined {\n    return this._final;\n  }\n  set final(value: boolean | undefined) {\n    this._final = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeStreamResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeStreamResponse.AsObject {\n    return {\n      transcription: this.transcription,\n      time: this.time,\n      final: this.final\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeStreamResponse.AsProtobufJSON {\n    return {\n      transcription: this.transcription,\n      time: this.time,\n      final: this.final\n    };\n  }\n}\nexport module TranscribeStreamResponse {\n  /**\n   * Standard JavaScript object representation for TranscribeStreamResponse\n   */\n  export interface AsObject {\n    transcription?: string;\n    time?: number;\n    final?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeStreamResponse\n   */\n  export interface AsProtobufJSON {\n    transcription?: string;\n    time?: number;\n    final?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeFileRequest\n */\nexport class TranscribeFileRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeFileRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeFileRequest();\n    TranscribeFileRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeFileRequest) {\n    _instance.s2tPipelineId = _instance.s2tPipelineId || '';\n    _instance.audioFile = _instance.audioFile || new Uint8Array();\n    _instance.ctcDecoding = _instance.ctcDecoding || 0;\n    _instance.spellingCorrection = _instance.spellingCorrection || false;\n    _instance.disableNormalization = _instance.disableNormalization || false;\n    _instance.includeTiming = _instance.includeTiming || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeFileRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.s2tPipelineId = _reader.readString();\n          break;\n        case 2:\n          _instance.audioFile = _reader.readBytes();\n          break;\n        case 3:\n          _instance.ctcDecoding = _reader.readEnum();\n          break;\n        case 4:\n          _instance.spellingCorrection = _reader.readBool();\n          break;\n        case 5:\n          _instance.disableNormalization = _reader.readBool();\n          break;\n        case 6:\n          _instance.includeTiming = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeFileRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeFileRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.s2tPipelineId) {\n      _writer.writeString(1, _instance.s2tPipelineId);\n    }\n    if (_instance.audioFile && _instance.audioFile.length) {\n      _writer.writeBytes(2, _instance.audioFile);\n    }\n    if (_instance.ctcDecoding) {\n      _writer.writeEnum(3, _instance.ctcDecoding);\n    }\n    if (_instance.spellingCorrection) {\n      _writer.writeBool(4, _instance.spellingCorrection);\n    }\n    if (_instance.disableNormalization) {\n      _writer.writeBool(5, _instance.disableNormalization);\n    }\n    if (_instance.includeTiming) {\n      _writer.writeBool(6, _instance.includeTiming);\n    }\n  }\n\n  private _s2tPipelineId?: string;\n  private _audioFile?: Uint8Array;\n  private _ctcDecoding?: CTCDecoding;\n  private _spellingCorrection?: boolean;\n  private _disableNormalization?: boolean;\n  private _includeTiming?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeFileRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeFileRequest.AsObject>) {\n    _value = _value || {};\n    this.s2tPipelineId = _value.s2tPipelineId;\n    this.audioFile = _value.audioFile;\n    this.ctcDecoding = _value.ctcDecoding;\n    this.spellingCorrection = _value.spellingCorrection;\n    this.disableNormalization = _value.disableNormalization;\n    this.includeTiming = _value.includeTiming;\n    TranscribeFileRequest.refineValues(this);\n  }\n  get s2tPipelineId(): string | undefined {\n    return this._s2tPipelineId;\n  }\n  set s2tPipelineId(value: string | undefined) {\n    this._s2tPipelineId = value;\n  }\n  get audioFile(): Uint8Array | undefined {\n    return this._audioFile;\n  }\n  set audioFile(value: Uint8Array | undefined) {\n    this._audioFile = value;\n  }\n  get ctcDecoding(): CTCDecoding | undefined {\n    return this._ctcDecoding;\n  }\n  set ctcDecoding(value: CTCDecoding | undefined) {\n    this._ctcDecoding = value;\n  }\n  get spellingCorrection(): boolean | undefined {\n    return this._spellingCorrection;\n  }\n  set spellingCorrection(value: boolean | undefined) {\n    this._spellingCorrection = value;\n  }\n  get disableNormalization(): boolean | undefined {\n    return this._disableNormalization;\n  }\n  set disableNormalization(value: boolean | undefined) {\n    this._disableNormalization = value;\n  }\n  get includeTiming(): boolean | undefined {\n    return this._includeTiming;\n  }\n  set includeTiming(value: boolean | undefined) {\n    this._includeTiming = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeFileRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeFileRequest.AsObject {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      audioFile: this.audioFile ? this.audioFile.subarray(0) : new Uint8Array(),\n      ctcDecoding: this.ctcDecoding,\n      spellingCorrection: this.spellingCorrection,\n      disableNormalization: this.disableNormalization,\n      includeTiming: this.includeTiming\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeFileRequest.AsProtobufJSON {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      audioFile: this.audioFile ? uint8ArrayToBase64(this.audioFile) : '',\n      ctcDecoding: CTCDecoding[this.ctcDecoding ?? 0],\n      spellingCorrection: this.spellingCorrection,\n      disableNormalization: this.disableNormalization,\n      includeTiming: this.includeTiming\n    };\n  }\n}\nexport module TranscribeFileRequest {\n  /**\n   * Standard JavaScript object representation for TranscribeFileRequest\n   */\n  export interface AsObject {\n    s2tPipelineId?: string;\n    audioFile?: Uint8Array;\n    ctcDecoding?: CTCDecoding;\n    spellingCorrection?: boolean;\n    disableNormalization?: boolean;\n    includeTiming?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeFileRequest\n   */\n  export interface AsProtobufJSON {\n    s2tPipelineId?: string;\n    audioFile?: string;\n    ctcDecoding?: string;\n    spellingCorrection?: boolean;\n    disableNormalization?: boolean;\n    includeTiming?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeFileResponse\n */\nexport class TranscribeFileResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeFileResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeFileResponse();\n    TranscribeFileResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeFileResponse) {\n    _instance.transcription = _instance.transcription || '';\n    _instance.time = _instance.time || 0;\n    _instance.wordTiming = _instance.wordTiming || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeFileResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.transcription = _reader.readString();\n          break;\n        case 2:\n          _instance.time = _reader.readFloat();\n          break;\n        case 3:\n          const messageInitializer3 = new WordTiming();\n          _reader.readMessage(\n            messageInitializer3,\n            WordTiming.deserializeBinaryFromReader\n          );\n          (_instance.wordTiming = _instance.wordTiming || []).push(\n            messageInitializer3\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeFileResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeFileResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcription) {\n      _writer.writeString(1, _instance.transcription);\n    }\n    if (_instance.time) {\n      _writer.writeFloat(2, _instance.time);\n    }\n    if (_instance.wordTiming && _instance.wordTiming.length) {\n      _writer.writeRepeatedMessage(\n        3,\n        _instance.wordTiming as any,\n        WordTiming.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _transcription?: string;\n  private _time?: number;\n  private _wordTiming?: WordTiming[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeFileResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeFileResponse.AsObject>) {\n    _value = _value || {};\n    this.transcription = _value.transcription;\n    this.time = _value.time;\n    this.wordTiming = (_value.wordTiming || []).map(m => new WordTiming(m));\n    TranscribeFileResponse.refineValues(this);\n  }\n  get transcription(): string | undefined {\n    return this._transcription;\n  }\n  set transcription(value: string | undefined) {\n    this._transcription = value;\n  }\n  get time(): number | undefined {\n    return this._time;\n  }\n  set time(value: number | undefined) {\n    this._time = value;\n  }\n  get wordTiming(): WordTiming[] | undefined {\n    return this._wordTiming;\n  }\n  set wordTiming(value: WordTiming[] | undefined) {\n    this._wordTiming = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeFileResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeFileResponse.AsObject {\n    return {\n      transcription: this.transcription,\n      time: this.time,\n      wordTiming: (this.wordTiming || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeFileResponse.AsProtobufJSON {\n    return {\n      transcription: this.transcription,\n      time: this.time,\n      wordTiming: (this.wordTiming || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module TranscribeFileResponse {\n  /**\n   * Standard JavaScript object representation for TranscribeFileResponse\n   */\n  export interface AsObject {\n    transcription?: string;\n    time?: number;\n    wordTiming?: WordTiming.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeFileResponse\n   */\n  export interface AsProtobufJSON {\n    transcription?: string;\n    time?: number;\n    wordTiming?: WordTiming.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.WordTiming\n */\nexport class WordTiming implements GrpcMessage {\n  static id = 'ondewo.s2t.WordTiming';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new WordTiming();\n    WordTiming.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: WordTiming) {\n    _instance.word = _instance.word || '';\n    _instance.begin = _instance.begin || 0;\n    _instance.end = _instance.end || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: WordTiming,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.word = _reader.readString();\n          break;\n        case 2:\n          _instance.begin = _reader.readInt32();\n          break;\n        case 3:\n          _instance.end = _reader.readInt32();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    WordTiming.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: WordTiming, _writer: BinaryWriter) {\n    if (_instance.word) {\n      _writer.writeString(1, _instance.word);\n    }\n    if (_instance.begin) {\n      _writer.writeInt32(2, _instance.begin);\n    }\n    if (_instance.end) {\n      _writer.writeInt32(3, _instance.end);\n    }\n  }\n\n  private _word?: string;\n  private _begin?: number;\n  private _end?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of WordTiming to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<WordTiming.AsObject>) {\n    _value = _value || {};\n    this.word = _value.word;\n    this.begin = _value.begin;\n    this.end = _value.end;\n    WordTiming.refineValues(this);\n  }\n  get word(): string | undefined {\n    return this._word;\n  }\n  set word(value: string | undefined) {\n    this._word = value;\n  }\n  get begin(): number | undefined {\n    return this._begin;\n  }\n  set begin(value: number | undefined) {\n    this._begin = value;\n  }\n  get end(): number | undefined {\n    return this._end;\n  }\n  set end(value: number | undefined) {\n    this._end = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    WordTiming.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): WordTiming.AsObject {\n    return {\n      word: this.word,\n      begin: this.begin,\n      end: this.end\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): WordTiming.AsProtobufJSON {\n    return {\n      word: this.word,\n      begin: this.begin,\n      end: this.end\n    };\n  }\n}\nexport module WordTiming {\n  /**\n   * Standard JavaScript object representation for WordTiming\n   */\n  export interface AsObject {\n    word?: string;\n    begin?: number;\n    end?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for WordTiming\n   */\n  export interface AsProtobufJSON {\n    word?: string;\n    begin?: number;\n    end?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.S2tPipelineId\n */\nexport class S2tPipelineId implements GrpcMessage {\n  static id = 'ondewo.s2t.S2tPipelineId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new S2tPipelineId();\n    S2tPipelineId.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: S2tPipelineId) {\n    _instance.id = _instance.id || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: S2tPipelineId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    S2tPipelineId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: S2tPipelineId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of S2tPipelineId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<S2tPipelineId.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    S2tPipelineId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    S2tPipelineId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): S2tPipelineId.AsObject {\n    return {\n      id: this.id\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): S2tPipelineId.AsProtobufJSON {\n    return {\n      id: this.id\n    };\n  }\n}\nexport module S2tPipelineId {\n  /**\n   * Standard JavaScript object representation for S2tPipelineId\n   */\n  export interface AsObject {\n    id?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for S2tPipelineId\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tPipelinesRequest\n */\nexport class ListS2tPipelinesRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tPipelinesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tPipelinesRequest();\n    ListS2tPipelinesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tPipelinesRequest) {\n    _instance.languages = _instance.languages || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tPipelinesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tPipelinesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tPipelinesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(3, _instance.domains);\n    }\n  }\n\n  private _languages?: string[];\n  private _pipelineOwners?: string[];\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tPipelinesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tPipelinesRequest.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.domains = (_value.domains || []).slice();\n    ListS2tPipelinesRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tPipelinesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tPipelinesRequest.AsObject {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tPipelinesRequest.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListS2tPipelinesRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tPipelinesRequest\n   */\n  export interface AsObject {\n    languages?: string[];\n    pipelineOwners?: string[];\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tPipelinesRequest\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n    pipelineOwners?: string[];\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tPipelinesResponse\n */\nexport class ListS2tPipelinesResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tPipelinesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tPipelinesResponse();\n    ListS2tPipelinesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tPipelinesResponse) {\n    _instance.pipelineConfigs = _instance.pipelineConfigs || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tPipelinesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Speech2TextConfig();\n          _reader.readMessage(\n            messageInitializer1,\n            Speech2TextConfig.deserializeBinaryFromReader\n          );\n          (_instance.pipelineConfigs = _instance.pipelineConfigs || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tPipelinesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tPipelinesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelineConfigs && _instance.pipelineConfigs.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.pipelineConfigs as any,\n        Speech2TextConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _pipelineConfigs?: Speech2TextConfig[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tPipelinesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tPipelinesResponse.AsObject>) {\n    _value = _value || {};\n    this.pipelineConfigs = (_value.pipelineConfigs || []).map(\n      m => new Speech2TextConfig(m)\n    );\n    ListS2tPipelinesResponse.refineValues(this);\n  }\n  get pipelineConfigs(): Speech2TextConfig[] | undefined {\n    return this._pipelineConfigs;\n  }\n  set pipelineConfigs(value: Speech2TextConfig[] | undefined) {\n    this._pipelineConfigs = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tPipelinesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tPipelinesResponse.AsObject {\n    return {\n      pipelineConfigs: (this.pipelineConfigs || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tPipelinesResponse.AsProtobufJSON {\n    return {\n      pipelineConfigs: (this.pipelineConfigs || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module ListS2tPipelinesResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tPipelinesResponse\n   */\n  export interface AsObject {\n    pipelineConfigs?: Speech2TextConfig.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tPipelinesResponse\n   */\n  export interface AsProtobufJSON {\n    pipelineConfigs?: Speech2TextConfig.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguagesRequest\n */\nexport class ListS2tLanguagesRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguagesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguagesRequest();\n    ListS2tLanguagesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguagesRequest) {\n    _instance.domains = _instance.domains || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguagesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguagesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguagesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(1, _instance.domains);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n  }\n\n  private _domains?: string[];\n  private _pipelineOwners?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguagesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tLanguagesRequest.AsObject>) {\n    _value = _value || {};\n    this.domains = (_value.domains || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    ListS2tLanguagesRequest.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguagesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguagesRequest.AsObject {\n    return {\n      domains: (this.domains || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguagesRequest.AsProtobufJSON {\n    return {\n      domains: (this.domains || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n}\nexport module ListS2tLanguagesRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguagesRequest\n   */\n  export interface AsObject {\n    domains?: string[];\n    pipelineOwners?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguagesRequest\n   */\n  export interface AsProtobufJSON {\n    domains?: string[];\n    pipelineOwners?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguagesResponse\n */\nexport class ListS2tLanguagesResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguagesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguagesResponse();\n    ListS2tLanguagesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguagesResponse) {\n    _instance.languages = _instance.languages || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguagesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguagesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguagesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n  }\n\n  private _languages?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguagesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tLanguagesResponse.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    ListS2tLanguagesResponse.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguagesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguagesResponse.AsObject {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguagesResponse.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n}\nexport module ListS2tLanguagesResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguagesResponse\n   */\n  export interface AsObject {\n    languages?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguagesResponse\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tDomainsRequest\n */\nexport class ListS2tDomainsRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tDomainsRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tDomainsRequest();\n    ListS2tDomainsRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tDomainsRequest) {\n    _instance.languages = _instance.languages || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tDomainsRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tDomainsRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tDomainsRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n  }\n\n  private _languages?: string[];\n  private _pipelineOwners?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tDomainsRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tDomainsRequest.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    ListS2tDomainsRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tDomainsRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tDomainsRequest.AsObject {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tDomainsRequest.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n}\nexport module ListS2tDomainsRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tDomainsRequest\n   */\n  export interface AsObject {\n    languages?: string[];\n    pipelineOwners?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tDomainsRequest\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n    pipelineOwners?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tDomainsResponse\n */\nexport class ListS2tDomainsResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tDomainsResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tDomainsResponse();\n    ListS2tDomainsResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tDomainsResponse) {\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tDomainsResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tDomainsResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tDomainsResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(1, _instance.domains);\n    }\n  }\n\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tDomainsResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tDomainsResponse.AsObject>) {\n    _value = _value || {};\n    this.domains = (_value.domains || []).slice();\n    ListS2tDomainsResponse.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tDomainsResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tDomainsResponse.AsObject {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tDomainsResponse.AsProtobufJSON {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListS2tDomainsResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tDomainsResponse\n   */\n  export interface AsObject {\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tDomainsResponse\n   */\n  export interface AsProtobufJSON {\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Speech2TextConfig\n */\nexport class Speech2TextConfig implements GrpcMessage {\n  static id = 'ondewo.s2t.Speech2TextConfig';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Speech2TextConfig();\n    Speech2TextConfig.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Speech2TextConfig) {\n    _instance.id = _instance.id || '';\n    _instance.description = _instance.description || undefined;\n    _instance.active = _instance.active || false;\n    _instance.inference = _instance.inference || undefined;\n    _instance.streamingServer = _instance.streamingServer || undefined;\n    _instance.voiceActivityDetection =\n      _instance.voiceActivityDetection || undefined;\n    _instance.postProcessing = _instance.postProcessing || undefined;\n    _instance.logging = _instance.logging || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Speech2TextConfig,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          _instance.description = new Description();\n          _reader.readMessage(\n            _instance.description,\n            Description.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.active = _reader.readBool();\n          break;\n        case 4:\n          _instance.inference = new Inference();\n          _reader.readMessage(\n            _instance.inference,\n            Inference.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.streamingServer = new StreamingServer();\n          _reader.readMessage(\n            _instance.streamingServer,\n            StreamingServer.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.voiceActivityDetection = new VoiceActivityDetection();\n          _reader.readMessage(\n            _instance.voiceActivityDetection,\n            VoiceActivityDetection.deserializeBinaryFromReader\n          );\n          break;\n        case 7:\n          _instance.postProcessing = new PostProcessing();\n          _reader.readMessage(\n            _instance.postProcessing,\n            PostProcessing.deserializeBinaryFromReader\n          );\n          break;\n        case 8:\n          _instance.logging = new Logging();\n          _reader.readMessage(\n            _instance.logging,\n            Logging.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Speech2TextConfig.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Speech2TextConfig,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.description) {\n      _writer.writeMessage(\n        2,\n        _instance.description as any,\n        Description.serializeBinaryToWriter\n      );\n    }\n    if (_instance.active) {\n      _writer.writeBool(3, _instance.active);\n    }\n    if (_instance.inference) {\n      _writer.writeMessage(\n        4,\n        _instance.inference as any,\n        Inference.serializeBinaryToWriter\n      );\n    }\n    if (_instance.streamingServer) {\n      _writer.writeMessage(\n        5,\n        _instance.streamingServer as any,\n        StreamingServer.serializeBinaryToWriter\n      );\n    }\n    if (_instance.voiceActivityDetection) {\n      _writer.writeMessage(\n        6,\n        _instance.voiceActivityDetection as any,\n        VoiceActivityDetection.serializeBinaryToWriter\n      );\n    }\n    if (_instance.postProcessing) {\n      _writer.writeMessage(\n        7,\n        _instance.postProcessing as any,\n        PostProcessing.serializeBinaryToWriter\n      );\n    }\n    if (_instance.logging) {\n      _writer.writeMessage(\n        8,\n        _instance.logging as any,\n        Logging.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _description?: Description;\n  private _active?: boolean;\n  private _inference?: Inference;\n  private _streamingServer?: StreamingServer;\n  private _voiceActivityDetection?: VoiceActivityDetection;\n  private _postProcessing?: PostProcessing;\n  private _logging?: Logging;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Speech2TextConfig to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Speech2TextConfig.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.description = _value.description\n      ? new Description(_value.description)\n      : undefined;\n    this.active = _value.active;\n    this.inference = _value.inference\n      ? new Inference(_value.inference)\n      : undefined;\n    this.streamingServer = _value.streamingServer\n      ? new StreamingServer(_value.streamingServer)\n      : undefined;\n    this.voiceActivityDetection = _value.voiceActivityDetection\n      ? new VoiceActivityDetection(_value.voiceActivityDetection)\n      : undefined;\n    this.postProcessing = _value.postProcessing\n      ? new PostProcessing(_value.postProcessing)\n      : undefined;\n    this.logging = _value.logging ? new Logging(_value.logging) : undefined;\n    Speech2TextConfig.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get description(): Description | undefined {\n    return this._description;\n  }\n  set description(value: Description | undefined) {\n    this._description = value;\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get inference(): Inference | undefined {\n    return this._inference;\n  }\n  set inference(value: Inference | undefined) {\n    this._inference = value;\n  }\n  get streamingServer(): StreamingServer | undefined {\n    return this._streamingServer;\n  }\n  set streamingServer(value: StreamingServer | undefined) {\n    this._streamingServer = value;\n  }\n  get voiceActivityDetection(): VoiceActivityDetection | undefined {\n    return this._voiceActivityDetection;\n  }\n  set voiceActivityDetection(value: VoiceActivityDetection | undefined) {\n    this._voiceActivityDetection = value;\n  }\n  get postProcessing(): PostProcessing | undefined {\n    return this._postProcessing;\n  }\n  set postProcessing(value: PostProcessing | undefined) {\n    this._postProcessing = value;\n  }\n  get logging(): Logging | undefined {\n    return this._logging;\n  }\n  set logging(value: Logging | undefined) {\n    this._logging = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Speech2TextConfig.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Speech2TextConfig.AsObject {\n    return {\n      id: this.id,\n      description: this.description ? this.description.toObject() : undefined,\n      active: this.active,\n      inference: this.inference ? this.inference.toObject() : undefined,\n      streamingServer: this.streamingServer\n        ? this.streamingServer.toObject()\n        : undefined,\n      voiceActivityDetection: this.voiceActivityDetection\n        ? this.voiceActivityDetection.toObject()\n        : undefined,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toObject()\n        : undefined,\n      logging: this.logging ? this.logging.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Speech2TextConfig.AsProtobufJSON {\n    return {\n      id: this.id,\n      description: this.description\n        ? this.description.toProtobufJSON(options)\n        : null,\n      active: this.active,\n      inference: this.inference ? this.inference.toProtobufJSON(options) : null,\n      streamingServer: this.streamingServer\n        ? this.streamingServer.toProtobufJSON(options)\n        : null,\n      voiceActivityDetection: this.voiceActivityDetection\n        ? this.voiceActivityDetection.toProtobufJSON(options)\n        : null,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toProtobufJSON(options)\n        : null,\n      logging: this.logging ? this.logging.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module Speech2TextConfig {\n  /**\n   * Standard JavaScript object representation for Speech2TextConfig\n   */\n  export interface AsObject {\n    id?: string;\n    description?: Description.AsObject;\n    active?: boolean;\n    inference?: Inference.AsObject;\n    streamingServer?: StreamingServer.AsObject;\n    voiceActivityDetection?: VoiceActivityDetection.AsObject;\n    postProcessing?: PostProcessing.AsObject;\n    logging?: Logging.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Speech2TextConfig\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    description?: Description.AsProtobufJSON | null;\n    active?: boolean;\n    inference?: Inference.AsProtobufJSON | null;\n    streamingServer?: StreamingServer.AsProtobufJSON | null;\n    voiceActivityDetection?: VoiceActivityDetection.AsProtobufJSON | null;\n    postProcessing?: PostProcessing.AsProtobufJSON | null;\n    logging?: Logging.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Description\n */\nexport class Description implements GrpcMessage {\n  static id = 'ondewo.s2t.Description';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Description();\n    Description.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Description) {\n    _instance.language = _instance.language || '';\n    _instance.pipelineOwner = _instance.pipelineOwner || '';\n    _instance.domain = _instance.domain || '';\n    _instance.comments = _instance.comments || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Description,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        case 2:\n          _instance.pipelineOwner = _reader.readString();\n          break;\n        case 3:\n          _instance.domain = _reader.readString();\n          break;\n        case 4:\n          _instance.comments = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Description.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Description,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n    if (_instance.pipelineOwner) {\n      _writer.writeString(2, _instance.pipelineOwner);\n    }\n    if (_instance.domain) {\n      _writer.writeString(3, _instance.domain);\n    }\n    if (_instance.comments) {\n      _writer.writeString(4, _instance.comments);\n    }\n  }\n\n  private _language?: string;\n  private _pipelineOwner?: string;\n  private _domain?: string;\n  private _comments?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Description to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Description.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    this.pipelineOwner = _value.pipelineOwner;\n    this.domain = _value.domain;\n    this.comments = _value.comments;\n    Description.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get pipelineOwner(): string | undefined {\n    return this._pipelineOwner;\n  }\n  set pipelineOwner(value: string | undefined) {\n    this._pipelineOwner = value;\n  }\n  get domain(): string | undefined {\n    return this._domain;\n  }\n  set domain(value: string | undefined) {\n    this._domain = value;\n  }\n  get comments(): string | undefined {\n    return this._comments;\n  }\n  set comments(value: string | undefined) {\n    this._comments = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Description.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Description.AsObject {\n    return {\n      language: this.language,\n      pipelineOwner: this.pipelineOwner,\n      domain: this.domain,\n      comments: this.comments\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Description.AsProtobufJSON {\n    return {\n      language: this.language,\n      pipelineOwner: this.pipelineOwner,\n      domain: this.domain,\n      comments: this.comments\n    };\n  }\n}\nexport module Description {\n  /**\n   * Standard JavaScript object representation for Description\n   */\n  export interface AsObject {\n    language?: string;\n    pipelineOwner?: string;\n    domain?: string;\n    comments?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Description\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n    pipelineOwner?: string;\n    domain?: string;\n    comments?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Inference\n */\nexport class Inference implements GrpcMessage {\n  static id = 'ondewo.s2t.Inference';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Inference();\n    Inference.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Inference) {\n    _instance.ctcAcousticModels = _instance.ctcAcousticModels || undefined;\n    _instance.languageModel = _instance.languageModel || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Inference,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.ctcAcousticModels = new CtcAcousticModels();\n          _reader.readMessage(\n            _instance.ctcAcousticModels,\n            CtcAcousticModels.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.languageModel = new LanguageModel();\n          _reader.readMessage(\n            _instance.languageModel,\n            LanguageModel.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Inference.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Inference, _writer: BinaryWriter) {\n    if (_instance.ctcAcousticModels) {\n      _writer.writeMessage(\n        1,\n        _instance.ctcAcousticModels as any,\n        CtcAcousticModels.serializeBinaryToWriter\n      );\n    }\n    if (_instance.languageModel) {\n      _writer.writeMessage(\n        2,\n        _instance.languageModel as any,\n        LanguageModel.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _ctcAcousticModels?: CtcAcousticModels;\n  private _languageModel?: LanguageModel;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Inference to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Inference.AsObject>) {\n    _value = _value || {};\n    this.ctcAcousticModels = _value.ctcAcousticModels\n      ? new CtcAcousticModels(_value.ctcAcousticModels)\n      : undefined;\n    this.languageModel = _value.languageModel\n      ? new LanguageModel(_value.languageModel)\n      : undefined;\n    Inference.refineValues(this);\n  }\n  get ctcAcousticModels(): CtcAcousticModels | undefined {\n    return this._ctcAcousticModels;\n  }\n  set ctcAcousticModels(value: CtcAcousticModels | undefined) {\n    this._ctcAcousticModels = value;\n  }\n  get languageModel(): LanguageModel | undefined {\n    return this._languageModel;\n  }\n  set languageModel(value: LanguageModel | undefined) {\n    this._languageModel = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Inference.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Inference.AsObject {\n    return {\n      ctcAcousticModels: this.ctcAcousticModels\n        ? this.ctcAcousticModels.toObject()\n        : undefined,\n      languageModel: this.languageModel\n        ? this.languageModel.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Inference.AsProtobufJSON {\n    return {\n      ctcAcousticModels: this.ctcAcousticModels\n        ? this.ctcAcousticModels.toProtobufJSON(options)\n        : null,\n      languageModel: this.languageModel\n        ? this.languageModel.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Inference {\n  /**\n   * Standard JavaScript object representation for Inference\n   */\n  export interface AsObject {\n    ctcAcousticModels?: CtcAcousticModels.AsObject;\n    languageModel?: LanguageModel.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Inference\n   */\n  export interface AsProtobufJSON {\n    ctcAcousticModels?: CtcAcousticModels.AsProtobufJSON | null;\n    languageModel?: LanguageModel.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.CtcAcousticModels\n */\nexport class CtcAcousticModels implements GrpcMessage {\n  static id = 'ondewo.s2t.CtcAcousticModels';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CtcAcousticModels();\n    CtcAcousticModels.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CtcAcousticModels) {\n    _instance.type = _instance.type || '';\n    _instance.quartznet = _instance.quartznet || undefined;\n    _instance.quartznetTriton = _instance.quartznetTriton || undefined;\n    _instance.wav2vec = _instance.wav2vec || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CtcAcousticModels,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.quartznet = new Quartznet();\n          _reader.readMessage(\n            _instance.quartznet,\n            Quartznet.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.quartznetTriton = new QuartznetTriton();\n          _reader.readMessage(\n            _instance.quartznetTriton,\n            QuartznetTriton.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.wav2vec = new Wav2Vec();\n          _reader.readMessage(\n            _instance.wav2vec,\n            Wav2Vec.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CtcAcousticModels.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CtcAcousticModels,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.quartznet) {\n      _writer.writeMessage(\n        2,\n        _instance.quartznet as any,\n        Quartznet.serializeBinaryToWriter\n      );\n    }\n    if (_instance.quartznetTriton) {\n      _writer.writeMessage(\n        3,\n        _instance.quartznetTriton as any,\n        QuartznetTriton.serializeBinaryToWriter\n      );\n    }\n    if (_instance.wav2vec) {\n      _writer.writeMessage(\n        4,\n        _instance.wav2vec as any,\n        Wav2Vec.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _quartznet?: Quartznet;\n  private _quartznetTriton?: QuartznetTriton;\n  private _wav2vec?: Wav2Vec;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CtcAcousticModels to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CtcAcousticModels.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.quartznet = _value.quartznet\n      ? new Quartznet(_value.quartznet)\n      : undefined;\n    this.quartznetTriton = _value.quartznetTriton\n      ? new QuartznetTriton(_value.quartznetTriton)\n      : undefined;\n    this.wav2vec = _value.wav2vec ? new Wav2Vec(_value.wav2vec) : undefined;\n    CtcAcousticModels.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get quartznet(): Quartznet | undefined {\n    return this._quartznet;\n  }\n  set quartznet(value: Quartznet | undefined) {\n    this._quartznet = value;\n  }\n  get quartznetTriton(): QuartznetTriton | undefined {\n    return this._quartznetTriton;\n  }\n  set quartznetTriton(value: QuartznetTriton | undefined) {\n    this._quartznetTriton = value;\n  }\n  get wav2vec(): Wav2Vec | undefined {\n    return this._wav2vec;\n  }\n  set wav2vec(value: Wav2Vec | undefined) {\n    this._wav2vec = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CtcAcousticModels.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CtcAcousticModels.AsObject {\n    return {\n      type: this.type,\n      quartznet: this.quartznet ? this.quartznet.toObject() : undefined,\n      quartznetTriton: this.quartznetTriton\n        ? this.quartznetTriton.toObject()\n        : undefined,\n      wav2vec: this.wav2vec ? this.wav2vec.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CtcAcousticModels.AsProtobufJSON {\n    return {\n      type: this.type,\n      quartznet: this.quartznet ? this.quartznet.toProtobufJSON(options) : null,\n      quartznetTriton: this.quartznetTriton\n        ? this.quartznetTriton.toProtobufJSON(options)\n        : null,\n      wav2vec: this.wav2vec ? this.wav2vec.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module CtcAcousticModels {\n  /**\n   * Standard JavaScript object representation for CtcAcousticModels\n   */\n  export interface AsObject {\n    type?: string;\n    quartznet?: Quartznet.AsObject;\n    quartznetTriton?: QuartznetTriton.AsObject;\n    wav2vec?: Wav2Vec.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for CtcAcousticModels\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    quartznet?: Quartznet.AsProtobufJSON | null;\n    quartznetTriton?: QuartznetTriton.AsProtobufJSON | null;\n    wav2vec?: Wav2Vec.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Wav2Vec\n */\nexport class Wav2Vec implements GrpcMessage {\n  static id = 'ondewo.s2t.Wav2Vec';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Wav2Vec();\n    Wav2Vec.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Wav2Vec) {\n    _instance.modelPath = _instance.modelPath || '';\n    _instance.useGpu = _instance.useGpu || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Wav2Vec,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.modelPath = _reader.readString();\n          break;\n        case 2:\n          _instance.useGpu = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Wav2Vec.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Wav2Vec, _writer: BinaryWriter) {\n    if (_instance.modelPath) {\n      _writer.writeString(1, _instance.modelPath);\n    }\n    if (_instance.useGpu) {\n      _writer.writeBool(2, _instance.useGpu);\n    }\n  }\n\n  private _modelPath?: string;\n  private _useGpu?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Wav2Vec to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Wav2Vec.AsObject>) {\n    _value = _value || {};\n    this.modelPath = _value.modelPath;\n    this.useGpu = _value.useGpu;\n    Wav2Vec.refineValues(this);\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Wav2Vec.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Wav2Vec.AsObject {\n    return {\n      modelPath: this.modelPath,\n      useGpu: this.useGpu\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Wav2Vec.AsProtobufJSON {\n    return {\n      modelPath: this.modelPath,\n      useGpu: this.useGpu\n    };\n  }\n}\nexport module Wav2Vec {\n  /**\n   * Standard JavaScript object representation for Wav2Vec\n   */\n  export interface AsObject {\n    modelPath?: string;\n    useGpu?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for Wav2Vec\n   */\n  export interface AsProtobufJSON {\n    modelPath?: string;\n    useGpu?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Quartznet\n */\nexport class Quartznet implements GrpcMessage {\n  static id = 'ondewo.s2t.Quartznet';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Quartznet();\n    Quartznet.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Quartznet) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.loadType = _instance.loadType || '';\n    _instance.ptFiles = _instance.ptFiles || undefined;\n    _instance.ckptFile = _instance.ckptFile || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Quartznet,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.loadType = _reader.readString();\n          break;\n        case 3:\n          _instance.ptFiles = new PtFiles();\n          _reader.readMessage(\n            _instance.ptFiles,\n            PtFiles.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.ckptFile = new CkptFile();\n          _reader.readMessage(\n            _instance.ckptFile,\n            CkptFile.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Quartznet.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Quartznet, _writer: BinaryWriter) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.loadType) {\n      _writer.writeString(2, _instance.loadType);\n    }\n    if (_instance.ptFiles) {\n      _writer.writeMessage(\n        3,\n        _instance.ptFiles as any,\n        PtFiles.serializeBinaryToWriter\n      );\n    }\n    if (_instance.ckptFile) {\n      _writer.writeMessage(\n        4,\n        _instance.ckptFile as any,\n        CkptFile.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _configPath?: string;\n  private _loadType?: string;\n  private _ptFiles?: PtFiles;\n  private _ckptFile?: CkptFile;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Quartznet to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Quartznet.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.loadType = _value.loadType;\n    this.ptFiles = _value.ptFiles ? new PtFiles(_value.ptFiles) : undefined;\n    this.ckptFile = _value.ckptFile ? new CkptFile(_value.ckptFile) : undefined;\n    Quartznet.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get loadType(): string | undefined {\n    return this._loadType;\n  }\n  set loadType(value: string | undefined) {\n    this._loadType = value;\n  }\n  get ptFiles(): PtFiles | undefined {\n    return this._ptFiles;\n  }\n  set ptFiles(value: PtFiles | undefined) {\n    this._ptFiles = value;\n  }\n  get ckptFile(): CkptFile | undefined {\n    return this._ckptFile;\n  }\n  set ckptFile(value: CkptFile | undefined) {\n    this._ckptFile = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Quartznet.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Quartznet.AsObject {\n    return {\n      configPath: this.configPath,\n      loadType: this.loadType,\n      ptFiles: this.ptFiles ? this.ptFiles.toObject() : undefined,\n      ckptFile: this.ckptFile ? this.ckptFile.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Quartznet.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      loadType: this.loadType,\n      ptFiles: this.ptFiles ? this.ptFiles.toProtobufJSON(options) : null,\n      ckptFile: this.ckptFile ? this.ckptFile.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module Quartznet {\n  /**\n   * Standard JavaScript object representation for Quartznet\n   */\n  export interface AsObject {\n    configPath?: string;\n    loadType?: string;\n    ptFiles?: PtFiles.AsObject;\n    ckptFile?: CkptFile.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Quartznet\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    loadType?: string;\n    ptFiles?: PtFiles.AsProtobufJSON | null;\n    ckptFile?: CkptFile.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PtFiles\n */\nexport class PtFiles implements GrpcMessage {\n  static id = 'ondewo.s2t.PtFiles';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PtFiles();\n    PtFiles.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PtFiles) {\n    _instance.path = _instance.path || '';\n    _instance.step = _instance.step || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PtFiles,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.path = _reader.readString();\n          break;\n        case 2:\n          _instance.step = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PtFiles.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: PtFiles, _writer: BinaryWriter) {\n    if (_instance.path) {\n      _writer.writeString(1, _instance.path);\n    }\n    if (_instance.step) {\n      _writer.writeString(2, _instance.step);\n    }\n  }\n\n  private _path?: string;\n  private _step?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PtFiles to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PtFiles.AsObject>) {\n    _value = _value || {};\n    this.path = _value.path;\n    this.step = _value.step;\n    PtFiles.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get step(): string | undefined {\n    return this._step;\n  }\n  set step(value: string | undefined) {\n    this._step = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PtFiles.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PtFiles.AsObject {\n    return {\n      path: this.path,\n      step: this.step\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PtFiles.AsProtobufJSON {\n    return {\n      path: this.path,\n      step: this.step\n    };\n  }\n}\nexport module PtFiles {\n  /**\n   * Standard JavaScript object representation for PtFiles\n   */\n  export interface AsObject {\n    path?: string;\n    step?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for PtFiles\n   */\n  export interface AsProtobufJSON {\n    path?: string;\n    step?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.CkptFile\n */\nexport class CkptFile implements GrpcMessage {\n  static id = 'ondewo.s2t.CkptFile';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CkptFile();\n    CkptFile.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CkptFile) {\n    _instance.path = _instance.path || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CkptFile,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.path = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CkptFile.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: CkptFile, _writer: BinaryWriter) {\n    if (_instance.path) {\n      _writer.writeString(1, _instance.path);\n    }\n  }\n\n  private _path?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CkptFile to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CkptFile.AsObject>) {\n    _value = _value || {};\n    this.path = _value.path;\n    CkptFile.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CkptFile.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CkptFile.AsObject {\n    return {\n      path: this.path\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CkptFile.AsProtobufJSON {\n    return {\n      path: this.path\n    };\n  }\n}\nexport module CkptFile {\n  /**\n   * Standard JavaScript object representation for CkptFile\n   */\n  export interface AsObject {\n    path?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for CkptFile\n   */\n  export interface AsProtobufJSON {\n    path?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.QuartznetTriton\n */\nexport class QuartznetTriton implements GrpcMessage {\n  static id = 'ondewo.s2t.QuartznetTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new QuartznetTriton();\n    QuartznetTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: QuartznetTriton) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.tritonUrl = _instance.tritonUrl || '';\n    _instance.tritonModel = _instance.tritonModel || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: QuartznetTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.tritonUrl = _reader.readString();\n          break;\n        case 3:\n          _instance.tritonModel = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    QuartznetTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: QuartznetTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.tritonUrl) {\n      _writer.writeString(2, _instance.tritonUrl);\n    }\n    if (_instance.tritonModel) {\n      _writer.writeString(3, _instance.tritonModel);\n    }\n  }\n\n  private _configPath?: string;\n  private _tritonUrl?: string;\n  private _tritonModel?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of QuartznetTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<QuartznetTriton.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.tritonUrl = _value.tritonUrl;\n    this.tritonModel = _value.tritonModel;\n    QuartznetTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  get tritonModel(): string | undefined {\n    return this._tritonModel;\n  }\n  set tritonModel(value: string | undefined) {\n    this._tritonModel = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    QuartznetTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): QuartznetTriton.AsObject {\n    return {\n      configPath: this.configPath,\n      tritonUrl: this.tritonUrl,\n      tritonModel: this.tritonModel\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): QuartznetTriton.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      tritonUrl: this.tritonUrl,\n      tritonModel: this.tritonModel\n    };\n  }\n}\nexport module QuartznetTriton {\n  /**\n   * Standard JavaScript object representation for QuartznetTriton\n   */\n  export interface AsObject {\n    configPath?: string;\n    tritonUrl?: string;\n    tritonModel?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for QuartznetTriton\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    tritonUrl?: string;\n    tritonModel?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.LanguageModel\n */\nexport class LanguageModel implements GrpcMessage {\n  static id = 'ondewo.s2t.LanguageModel';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new LanguageModel();\n    LanguageModel.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: LanguageModel) {\n    _instance.path = _instance.path || '';\n    _instance.beamSize = _instance.beamSize || '0';\n    _instance.beamSearchScorerAlpha = _instance.beamSearchScorerAlpha || 0;\n    _instance.beamSearchScorerBeta = _instance.beamSearchScorerBeta || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: LanguageModel,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.path = _reader.readString();\n          break;\n        case 2:\n          _instance.beamSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.beamSearchScorerAlpha = _reader.readFloat();\n          break;\n        case 4:\n          _instance.beamSearchScorerBeta = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    LanguageModel.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: LanguageModel,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.path) {\n      _writer.writeString(1, _instance.path);\n    }\n    if (_instance.beamSize) {\n      _writer.writeInt64String(2, _instance.beamSize);\n    }\n    if (_instance.beamSearchScorerAlpha) {\n      _writer.writeFloat(3, _instance.beamSearchScorerAlpha);\n    }\n    if (_instance.beamSearchScorerBeta) {\n      _writer.writeFloat(4, _instance.beamSearchScorerBeta);\n    }\n  }\n\n  private _path?: string;\n  private _beamSize?: string;\n  private _beamSearchScorerAlpha?: number;\n  private _beamSearchScorerBeta?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of LanguageModel to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<LanguageModel.AsObject>) {\n    _value = _value || {};\n    this.path = _value.path;\n    this.beamSize = _value.beamSize;\n    this.beamSearchScorerAlpha = _value.beamSearchScorerAlpha;\n    this.beamSearchScorerBeta = _value.beamSearchScorerBeta;\n    LanguageModel.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get beamSize(): string | undefined {\n    return this._beamSize;\n  }\n  set beamSize(value: string | undefined) {\n    this._beamSize = value;\n  }\n  get beamSearchScorerAlpha(): number | undefined {\n    return this._beamSearchScorerAlpha;\n  }\n  set beamSearchScorerAlpha(value: number | undefined) {\n    this._beamSearchScorerAlpha = value;\n  }\n  get beamSearchScorerBeta(): number | undefined {\n    return this._beamSearchScorerBeta;\n  }\n  set beamSearchScorerBeta(value: number | undefined) {\n    this._beamSearchScorerBeta = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    LanguageModel.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): LanguageModel.AsObject {\n    return {\n      path: this.path,\n      beamSize: this.beamSize,\n      beamSearchScorerAlpha: this.beamSearchScorerAlpha,\n      beamSearchScorerBeta: this.beamSearchScorerBeta\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): LanguageModel.AsProtobufJSON {\n    return {\n      path: this.path,\n      beamSize: this.beamSize,\n      beamSearchScorerAlpha: this.beamSearchScorerAlpha,\n      beamSearchScorerBeta: this.beamSearchScorerBeta\n    };\n  }\n}\nexport module LanguageModel {\n  /**\n   * Standard JavaScript object representation for LanguageModel\n   */\n  export interface AsObject {\n    path?: string;\n    beamSize?: string;\n    beamSearchScorerAlpha?: number;\n    beamSearchScorerBeta?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for LanguageModel\n   */\n  export interface AsProtobufJSON {\n    path?: string;\n    beamSize?: string;\n    beamSearchScorerAlpha?: number;\n    beamSearchScorerBeta?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.StreamingServer\n */\nexport class StreamingServer implements GrpcMessage {\n  static id = 'ondewo.s2t.StreamingServer';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new StreamingServer();\n    StreamingServer.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: StreamingServer) {\n    _instance.host = _instance.host || '';\n    _instance.port = _instance.port || '0';\n    _instance.outputStyle = _instance.outputStyle || '';\n    _instance.streamingSpeechRecognition =\n      _instance.streamingSpeechRecognition || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: StreamingServer,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.host = _reader.readString();\n          break;\n        case 2:\n          _instance.port = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.outputStyle = _reader.readString();\n          break;\n        case 4:\n          _instance.streamingSpeechRecognition = new StreamingSpeechRecognition();\n          _reader.readMessage(\n            _instance.streamingSpeechRecognition,\n            StreamingSpeechRecognition.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    StreamingServer.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: StreamingServer,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.host) {\n      _writer.writeString(1, _instance.host);\n    }\n    if (_instance.port) {\n      _writer.writeInt64String(2, _instance.port);\n    }\n    if (_instance.outputStyle) {\n      _writer.writeString(3, _instance.outputStyle);\n    }\n    if (_instance.streamingSpeechRecognition) {\n      _writer.writeMessage(\n        4,\n        _instance.streamingSpeechRecognition as any,\n        StreamingSpeechRecognition.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _host?: string;\n  private _port?: string;\n  private _outputStyle?: string;\n  private _streamingSpeechRecognition?: StreamingSpeechRecognition;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of StreamingServer to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<StreamingServer.AsObject>) {\n    _value = _value || {};\n    this.host = _value.host;\n    this.port = _value.port;\n    this.outputStyle = _value.outputStyle;\n    this.streamingSpeechRecognition = _value.streamingSpeechRecognition\n      ? new StreamingSpeechRecognition(_value.streamingSpeechRecognition)\n      : undefined;\n    StreamingServer.refineValues(this);\n  }\n  get host(): string | undefined {\n    return this._host;\n  }\n  set host(value: string | undefined) {\n    this._host = value;\n  }\n  get port(): string | undefined {\n    return this._port;\n  }\n  set port(value: string | undefined) {\n    this._port = value;\n  }\n  get outputStyle(): string | undefined {\n    return this._outputStyle;\n  }\n  set outputStyle(value: string | undefined) {\n    this._outputStyle = value;\n  }\n  get streamingSpeechRecognition(): StreamingSpeechRecognition | undefined {\n    return this._streamingSpeechRecognition;\n  }\n  set streamingSpeechRecognition(\n    value: StreamingSpeechRecognition | undefined\n  ) {\n    this._streamingSpeechRecognition = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    StreamingServer.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): StreamingServer.AsObject {\n    return {\n      host: this.host,\n      port: this.port,\n      outputStyle: this.outputStyle,\n      streamingSpeechRecognition: this.streamingSpeechRecognition\n        ? this.streamingSpeechRecognition.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): StreamingServer.AsProtobufJSON {\n    return {\n      host: this.host,\n      port: this.port,\n      outputStyle: this.outputStyle,\n      streamingSpeechRecognition: this.streamingSpeechRecognition\n        ? this.streamingSpeechRecognition.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module StreamingServer {\n  /**\n   * Standard JavaScript object representation for StreamingServer\n   */\n  export interface AsObject {\n    host?: string;\n    port?: string;\n    outputStyle?: string;\n    streamingSpeechRecognition?: StreamingSpeechRecognition.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for StreamingServer\n   */\n  export interface AsProtobufJSON {\n    host?: string;\n    port?: string;\n    outputStyle?: string;\n    streamingSpeechRecognition?: StreamingSpeechRecognition.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.StreamingSpeechRecognition\n */\nexport class StreamingSpeechRecognition implements GrpcMessage {\n  static id = 'ondewo.s2t.StreamingSpeechRecognition';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new StreamingSpeechRecognition();\n    StreamingSpeechRecognition.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: StreamingSpeechRecognition) {\n    _instance.transcribeNotFinal = _instance.transcribeNotFinal || false;\n    _instance.ctcDecodingMethod = _instance.ctcDecodingMethod || '';\n    _instance.samplingRate = _instance.samplingRate || '0';\n    _instance.minAudioChunkSize = _instance.minAudioChunkSize || '0';\n    _instance.startOfUtteranceThreshold =\n      _instance.startOfUtteranceThreshold || 0;\n    _instance.endOfUtteranceThreshold = _instance.endOfUtteranceThreshold || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: StreamingSpeechRecognition,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.transcribeNotFinal = _reader.readBool();\n          break;\n        case 2:\n          _instance.ctcDecodingMethod = _reader.readString();\n          break;\n        case 3:\n          _instance.samplingRate = _reader.readInt64String();\n          break;\n        case 4:\n          _instance.minAudioChunkSize = _reader.readInt64String();\n          break;\n        case 5:\n          _instance.startOfUtteranceThreshold = _reader.readFloat();\n          break;\n        case 6:\n          _instance.endOfUtteranceThreshold = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    StreamingSpeechRecognition.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: StreamingSpeechRecognition,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcribeNotFinal) {\n      _writer.writeBool(1, _instance.transcribeNotFinal);\n    }\n    if (_instance.ctcDecodingMethod) {\n      _writer.writeString(2, _instance.ctcDecodingMethod);\n    }\n    if (_instance.samplingRate) {\n      _writer.writeInt64String(3, _instance.samplingRate);\n    }\n    if (_instance.minAudioChunkSize) {\n      _writer.writeInt64String(4, _instance.minAudioChunkSize);\n    }\n    if (_instance.startOfUtteranceThreshold) {\n      _writer.writeFloat(5, _instance.startOfUtteranceThreshold);\n    }\n    if (_instance.endOfUtteranceThreshold) {\n      _writer.writeFloat(6, _instance.endOfUtteranceThreshold);\n    }\n  }\n\n  private _transcribeNotFinal?: boolean;\n  private _ctcDecodingMethod?: string;\n  private _samplingRate?: string;\n  private _minAudioChunkSize?: string;\n  private _startOfUtteranceThreshold?: number;\n  private _endOfUtteranceThreshold?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of StreamingSpeechRecognition to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<StreamingSpeechRecognition.AsObject>) {\n    _value = _value || {};\n    this.transcribeNotFinal = _value.transcribeNotFinal;\n    this.ctcDecodingMethod = _value.ctcDecodingMethod;\n    this.samplingRate = _value.samplingRate;\n    this.minAudioChunkSize = _value.minAudioChunkSize;\n    this.startOfUtteranceThreshold = _value.startOfUtteranceThreshold;\n    this.endOfUtteranceThreshold = _value.endOfUtteranceThreshold;\n    StreamingSpeechRecognition.refineValues(this);\n  }\n  get transcribeNotFinal(): boolean | undefined {\n    return this._transcribeNotFinal;\n  }\n  set transcribeNotFinal(value: boolean | undefined) {\n    this._transcribeNotFinal = value;\n  }\n  get ctcDecodingMethod(): string | undefined {\n    return this._ctcDecodingMethod;\n  }\n  set ctcDecodingMethod(value: string | undefined) {\n    this._ctcDecodingMethod = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get minAudioChunkSize(): string | undefined {\n    return this._minAudioChunkSize;\n  }\n  set minAudioChunkSize(value: string | undefined) {\n    this._minAudioChunkSize = value;\n  }\n  get startOfUtteranceThreshold(): number | undefined {\n    return this._startOfUtteranceThreshold;\n  }\n  set startOfUtteranceThreshold(value: number | undefined) {\n    this._startOfUtteranceThreshold = value;\n  }\n  get endOfUtteranceThreshold(): number | undefined {\n    return this._endOfUtteranceThreshold;\n  }\n  set endOfUtteranceThreshold(value: number | undefined) {\n    this._endOfUtteranceThreshold = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    StreamingSpeechRecognition.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): StreamingSpeechRecognition.AsObject {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      ctcDecodingMethod: this.ctcDecodingMethod,\n      samplingRate: this.samplingRate,\n      minAudioChunkSize: this.minAudioChunkSize,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): StreamingSpeechRecognition.AsProtobufJSON {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      ctcDecodingMethod: this.ctcDecodingMethod,\n      samplingRate: this.samplingRate,\n      minAudioChunkSize: this.minAudioChunkSize,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold\n    };\n  }\n}\nexport module StreamingSpeechRecognition {\n  /**\n   * Standard JavaScript object representation for StreamingSpeechRecognition\n   */\n  export interface AsObject {\n    transcribeNotFinal?: boolean;\n    ctcDecodingMethod?: string;\n    samplingRate?: string;\n    minAudioChunkSize?: string;\n    startOfUtteranceThreshold?: number;\n    endOfUtteranceThreshold?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for StreamingSpeechRecognition\n   */\n  export interface AsProtobufJSON {\n    transcribeNotFinal?: boolean;\n    ctcDecodingMethod?: string;\n    samplingRate?: string;\n    minAudioChunkSize?: string;\n    startOfUtteranceThreshold?: number;\n    endOfUtteranceThreshold?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.VoiceActivityDetection\n */\nexport class VoiceActivityDetection implements GrpcMessage {\n  static id = 'ondewo.s2t.VoiceActivityDetection';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new VoiceActivityDetection();\n    VoiceActivityDetection.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: VoiceActivityDetection) {\n    _instance.active = _instance.active || '';\n    _instance.samplingRate = _instance.samplingRate || '0';\n    _instance.pyannote = _instance.pyannote || undefined;\n    _instance.matchbox = _instance.matchbox || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: VoiceActivityDetection,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.active = _reader.readString();\n          break;\n        case 2:\n          _instance.samplingRate = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.pyannote = new Pyannote();\n          _reader.readMessage(\n            _instance.pyannote,\n            Pyannote.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.matchbox = new Matchbox();\n          _reader.readMessage(\n            _instance.matchbox,\n            Matchbox.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    VoiceActivityDetection.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: VoiceActivityDetection,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.active) {\n      _writer.writeString(1, _instance.active);\n    }\n    if (_instance.samplingRate) {\n      _writer.writeInt64String(2, _instance.samplingRate);\n    }\n    if (_instance.pyannote) {\n      _writer.writeMessage(\n        3,\n        _instance.pyannote as any,\n        Pyannote.serializeBinaryToWriter\n      );\n    }\n    if (_instance.matchbox) {\n      _writer.writeMessage(\n        4,\n        _instance.matchbox as any,\n        Matchbox.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _active?: string;\n  private _samplingRate?: string;\n  private _pyannote?: Pyannote;\n  private _matchbox?: Matchbox;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of VoiceActivityDetection to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<VoiceActivityDetection.AsObject>) {\n    _value = _value || {};\n    this.active = _value.active;\n    this.samplingRate = _value.samplingRate;\n    this.pyannote = _value.pyannote ? new Pyannote(_value.pyannote) : undefined;\n    this.matchbox = _value.matchbox ? new Matchbox(_value.matchbox) : undefined;\n    VoiceActivityDetection.refineValues(this);\n  }\n  get active(): string | undefined {\n    return this._active;\n  }\n  set active(value: string | undefined) {\n    this._active = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get pyannote(): Pyannote | undefined {\n    return this._pyannote;\n  }\n  set pyannote(value: Pyannote | undefined) {\n    this._pyannote = value;\n  }\n  get matchbox(): Matchbox | undefined {\n    return this._matchbox;\n  }\n  set matchbox(value: Matchbox | undefined) {\n    this._matchbox = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    VoiceActivityDetection.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): VoiceActivityDetection.AsObject {\n    return {\n      active: this.active,\n      samplingRate: this.samplingRate,\n      pyannote: this.pyannote ? this.pyannote.toObject() : undefined,\n      matchbox: this.matchbox ? this.matchbox.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): VoiceActivityDetection.AsProtobufJSON {\n    return {\n      active: this.active,\n      samplingRate: this.samplingRate,\n      pyannote: this.pyannote ? this.pyannote.toProtobufJSON(options) : null,\n      matchbox: this.matchbox ? this.matchbox.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module VoiceActivityDetection {\n  /**\n   * Standard JavaScript object representation for VoiceActivityDetection\n   */\n  export interface AsObject {\n    active?: string;\n    samplingRate?: string;\n    pyannote?: Pyannote.AsObject;\n    matchbox?: Matchbox.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for VoiceActivityDetection\n   */\n  export interface AsProtobufJSON {\n    active?: string;\n    samplingRate?: string;\n    pyannote?: Pyannote.AsProtobufJSON | null;\n    matchbox?: Matchbox.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Pyannote\n */\nexport class Pyannote implements GrpcMessage {\n  static id = 'ondewo.s2t.Pyannote';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Pyannote();\n    Pyannote.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Pyannote) {\n    _instance.modelPath = _instance.modelPath || '';\n    _instance.minAudioSize = _instance.minAudioSize || '0';\n    _instance.offset = _instance.offset || 0;\n    _instance.onset = _instance.onset || 0;\n    _instance.logScale = _instance.logScale || false;\n    _instance.minDurationOff = _instance.minDurationOff || 0;\n    _instance.minDurationOn = _instance.minDurationOn || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Pyannote,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.modelPath = _reader.readString();\n          break;\n        case 2:\n          _instance.minAudioSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.offset = _reader.readFloat();\n          break;\n        case 4:\n          _instance.onset = _reader.readFloat();\n          break;\n        case 5:\n          _instance.logScale = _reader.readBool();\n          break;\n        case 6:\n          _instance.minDurationOff = _reader.readFloat();\n          break;\n        case 7:\n          _instance.minDurationOn = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Pyannote.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Pyannote, _writer: BinaryWriter) {\n    if (_instance.modelPath) {\n      _writer.writeString(1, _instance.modelPath);\n    }\n    if (_instance.minAudioSize) {\n      _writer.writeInt64String(2, _instance.minAudioSize);\n    }\n    if (_instance.offset) {\n      _writer.writeFloat(3, _instance.offset);\n    }\n    if (_instance.onset) {\n      _writer.writeFloat(4, _instance.onset);\n    }\n    if (_instance.logScale) {\n      _writer.writeBool(5, _instance.logScale);\n    }\n    if (_instance.minDurationOff) {\n      _writer.writeFloat(6, _instance.minDurationOff);\n    }\n    if (_instance.minDurationOn) {\n      _writer.writeFloat(7, _instance.minDurationOn);\n    }\n  }\n\n  private _modelPath?: string;\n  private _minAudioSize?: string;\n  private _offset?: number;\n  private _onset?: number;\n  private _logScale?: boolean;\n  private _minDurationOff?: number;\n  private _minDurationOn?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Pyannote to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Pyannote.AsObject>) {\n    _value = _value || {};\n    this.modelPath = _value.modelPath;\n    this.minAudioSize = _value.minAudioSize;\n    this.offset = _value.offset;\n    this.onset = _value.onset;\n    this.logScale = _value.logScale;\n    this.minDurationOff = _value.minDurationOff;\n    this.minDurationOn = _value.minDurationOn;\n    Pyannote.refineValues(this);\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  get minAudioSize(): string | undefined {\n    return this._minAudioSize;\n  }\n  set minAudioSize(value: string | undefined) {\n    this._minAudioSize = value;\n  }\n  get offset(): number | undefined {\n    return this._offset;\n  }\n  set offset(value: number | undefined) {\n    this._offset = value;\n  }\n  get onset(): number | undefined {\n    return this._onset;\n  }\n  set onset(value: number | undefined) {\n    this._onset = value;\n  }\n  get logScale(): boolean | undefined {\n    return this._logScale;\n  }\n  set logScale(value: boolean | undefined) {\n    this._logScale = value;\n  }\n  get minDurationOff(): number | undefined {\n    return this._minDurationOff;\n  }\n  set minDurationOff(value: number | undefined) {\n    this._minDurationOff = value;\n  }\n  get minDurationOn(): number | undefined {\n    return this._minDurationOn;\n  }\n  set minDurationOn(value: number | undefined) {\n    this._minDurationOn = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Pyannote.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Pyannote.AsObject {\n    return {\n      modelPath: this.modelPath,\n      minAudioSize: this.minAudioSize,\n      offset: this.offset,\n      onset: this.onset,\n      logScale: this.logScale,\n      minDurationOff: this.minDurationOff,\n      minDurationOn: this.minDurationOn\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Pyannote.AsProtobufJSON {\n    return {\n      modelPath: this.modelPath,\n      minAudioSize: this.minAudioSize,\n      offset: this.offset,\n      onset: this.onset,\n      logScale: this.logScale,\n      minDurationOff: this.minDurationOff,\n      minDurationOn: this.minDurationOn\n    };\n  }\n}\nexport module Pyannote {\n  /**\n   * Standard JavaScript object representation for Pyannote\n   */\n  export interface AsObject {\n    modelPath?: string;\n    minAudioSize?: string;\n    offset?: number;\n    onset?: number;\n    logScale?: boolean;\n    minDurationOff?: number;\n    minDurationOn?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Pyannote\n   */\n  export interface AsProtobufJSON {\n    modelPath?: string;\n    minAudioSize?: string;\n    offset?: number;\n    onset?: number;\n    logScale?: boolean;\n    minDurationOff?: number;\n    minDurationOn?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Matchbox\n */\nexport class Matchbox implements GrpcMessage {\n  static id = 'ondewo.s2t.Matchbox';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Matchbox();\n    Matchbox.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Matchbox) {\n    _instance.modelConfig = _instance.modelConfig || '';\n    _instance.encoderPath = _instance.encoderPath || '';\n    _instance.decoderPath = _instance.decoderPath || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Matchbox,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.modelConfig = _reader.readString();\n          break;\n        case 2:\n          _instance.encoderPath = _reader.readString();\n          break;\n        case 3:\n          _instance.decoderPath = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Matchbox.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Matchbox, _writer: BinaryWriter) {\n    if (_instance.modelConfig) {\n      _writer.writeString(1, _instance.modelConfig);\n    }\n    if (_instance.encoderPath) {\n      _writer.writeString(2, _instance.encoderPath);\n    }\n    if (_instance.decoderPath) {\n      _writer.writeString(3, _instance.decoderPath);\n    }\n  }\n\n  private _modelConfig?: string;\n  private _encoderPath?: string;\n  private _decoderPath?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Matchbox to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Matchbox.AsObject>) {\n    _value = _value || {};\n    this.modelConfig = _value.modelConfig;\n    this.encoderPath = _value.encoderPath;\n    this.decoderPath = _value.decoderPath;\n    Matchbox.refineValues(this);\n  }\n  get modelConfig(): string | undefined {\n    return this._modelConfig;\n  }\n  set modelConfig(value: string | undefined) {\n    this._modelConfig = value;\n  }\n  get encoderPath(): string | undefined {\n    return this._encoderPath;\n  }\n  set encoderPath(value: string | undefined) {\n    this._encoderPath = value;\n  }\n  get decoderPath(): string | undefined {\n    return this._decoderPath;\n  }\n  set decoderPath(value: string | undefined) {\n    this._decoderPath = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Matchbox.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Matchbox.AsObject {\n    return {\n      modelConfig: this.modelConfig,\n      encoderPath: this.encoderPath,\n      decoderPath: this.decoderPath\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Matchbox.AsProtobufJSON {\n    return {\n      modelConfig: this.modelConfig,\n      encoderPath: this.encoderPath,\n      decoderPath: this.decoderPath\n    };\n  }\n}\nexport module Matchbox {\n  /**\n   * Standard JavaScript object representation for Matchbox\n   */\n  export interface AsObject {\n    modelConfig?: string;\n    encoderPath?: string;\n    decoderPath?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Matchbox\n   */\n  export interface AsProtobufJSON {\n    modelConfig?: string;\n    encoderPath?: string;\n    decoderPath?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PostProcessing\n */\nexport class PostProcessing implements GrpcMessage {\n  static id = 'ondewo.s2t.PostProcessing';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PostProcessing();\n    PostProcessing.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PostProcessing) {\n    _instance.pipeline = _instance.pipeline || [];\n    _instance.postProcessors = _instance.postProcessors || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PostProcessing,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.pipeline = _instance.pipeline || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          _instance.postProcessors = new PostProcessors();\n          _reader.readMessage(\n            _instance.postProcessors,\n            PostProcessors.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PostProcessing.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PostProcessing,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipeline && _instance.pipeline.length) {\n      _writer.writeRepeatedString(1, _instance.pipeline);\n    }\n    if (_instance.postProcessors) {\n      _writer.writeMessage(\n        2,\n        _instance.postProcessors as any,\n        PostProcessors.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _pipeline?: string[];\n  private _postProcessors?: PostProcessors;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PostProcessing to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PostProcessing.AsObject>) {\n    _value = _value || {};\n    this.pipeline = (_value.pipeline || []).slice();\n    this.postProcessors = _value.postProcessors\n      ? new PostProcessors(_value.postProcessors)\n      : undefined;\n    PostProcessing.refineValues(this);\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get postProcessors(): PostProcessors | undefined {\n    return this._postProcessors;\n  }\n  set postProcessors(value: PostProcessors | undefined) {\n    this._postProcessors = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PostProcessing.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PostProcessing.AsObject {\n    return {\n      pipeline: (this.pipeline || []).slice(),\n      postProcessors: this.postProcessors\n        ? this.postProcessors.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PostProcessing.AsProtobufJSON {\n    return {\n      pipeline: (this.pipeline || []).slice(),\n      postProcessors: this.postProcessors\n        ? this.postProcessors.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module PostProcessing {\n  /**\n   * Standard JavaScript object representation for PostProcessing\n   */\n  export interface AsObject {\n    pipeline?: string[];\n    postProcessors?: PostProcessors.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for PostProcessing\n   */\n  export interface AsProtobufJSON {\n    pipeline?: string[];\n    postProcessors?: PostProcessors.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PostProcessors\n */\nexport class PostProcessors implements GrpcMessage {\n  static id = 'ondewo.s2t.PostProcessors';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PostProcessors();\n    PostProcessors.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PostProcessors) {\n    _instance.symSpell = _instance.symSpell || undefined;\n    _instance.normalization = _instance.normalization || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PostProcessors,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.symSpell = new SymSpell();\n          _reader.readMessage(\n            _instance.symSpell,\n            SymSpell.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.normalization = new Normalization();\n          _reader.readMessage(\n            _instance.normalization,\n            Normalization.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PostProcessors.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PostProcessors,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.symSpell) {\n      _writer.writeMessage(\n        1,\n        _instance.symSpell as any,\n        SymSpell.serializeBinaryToWriter\n      );\n    }\n    if (_instance.normalization) {\n      _writer.writeMessage(\n        2,\n        _instance.normalization as any,\n        Normalization.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _symSpell?: SymSpell;\n  private _normalization?: Normalization;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PostProcessors to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PostProcessors.AsObject>) {\n    _value = _value || {};\n    this.symSpell = _value.symSpell ? new SymSpell(_value.symSpell) : undefined;\n    this.normalization = _value.normalization\n      ? new Normalization(_value.normalization)\n      : undefined;\n    PostProcessors.refineValues(this);\n  }\n  get symSpell(): SymSpell | undefined {\n    return this._symSpell;\n  }\n  set symSpell(value: SymSpell | undefined) {\n    this._symSpell = value;\n  }\n  get normalization(): Normalization | undefined {\n    return this._normalization;\n  }\n  set normalization(value: Normalization | undefined) {\n    this._normalization = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PostProcessors.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PostProcessors.AsObject {\n    return {\n      symSpell: this.symSpell ? this.symSpell.toObject() : undefined,\n      normalization: this.normalization\n        ? this.normalization.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PostProcessors.AsProtobufJSON {\n    return {\n      symSpell: this.symSpell ? this.symSpell.toProtobufJSON(options) : null,\n      normalization: this.normalization\n        ? this.normalization.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module PostProcessors {\n  /**\n   * Standard JavaScript object representation for PostProcessors\n   */\n  export interface AsObject {\n    symSpell?: SymSpell.AsObject;\n    normalization?: Normalization.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for PostProcessors\n   */\n  export interface AsProtobufJSON {\n    symSpell?: SymSpell.AsProtobufJSON | null;\n    normalization?: Normalization.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.SymSpell\n */\nexport class SymSpell implements GrpcMessage {\n  static id = 'ondewo.s2t.SymSpell';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SymSpell();\n    SymSpell.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SymSpell) {\n    _instance.dictPath = _instance.dictPath || '';\n    _instance.maxDictionaryEditDistance =\n      _instance.maxDictionaryEditDistance || '0';\n    _instance.prefixLength = _instance.prefixLength || '0';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SymSpell,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.dictPath = _reader.readString();\n          break;\n        case 2:\n          _instance.maxDictionaryEditDistance = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.prefixLength = _reader.readInt64String();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SymSpell.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: SymSpell, _writer: BinaryWriter) {\n    if (_instance.dictPath) {\n      _writer.writeString(1, _instance.dictPath);\n    }\n    if (_instance.maxDictionaryEditDistance) {\n      _writer.writeInt64String(2, _instance.maxDictionaryEditDistance);\n    }\n    if (_instance.prefixLength) {\n      _writer.writeInt64String(3, _instance.prefixLength);\n    }\n  }\n\n  private _dictPath?: string;\n  private _maxDictionaryEditDistance?: string;\n  private _prefixLength?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SymSpell to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SymSpell.AsObject>) {\n    _value = _value || {};\n    this.dictPath = _value.dictPath;\n    this.maxDictionaryEditDistance = _value.maxDictionaryEditDistance;\n    this.prefixLength = _value.prefixLength;\n    SymSpell.refineValues(this);\n  }\n  get dictPath(): string | undefined {\n    return this._dictPath;\n  }\n  set dictPath(value: string | undefined) {\n    this._dictPath = value;\n  }\n  get maxDictionaryEditDistance(): string | undefined {\n    return this._maxDictionaryEditDistance;\n  }\n  set maxDictionaryEditDistance(value: string | undefined) {\n    this._maxDictionaryEditDistance = value;\n  }\n  get prefixLength(): string | undefined {\n    return this._prefixLength;\n  }\n  set prefixLength(value: string | undefined) {\n    this._prefixLength = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SymSpell.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SymSpell.AsObject {\n    return {\n      dictPath: this.dictPath,\n      maxDictionaryEditDistance: this.maxDictionaryEditDistance,\n      prefixLength: this.prefixLength\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SymSpell.AsProtobufJSON {\n    return {\n      dictPath: this.dictPath,\n      maxDictionaryEditDistance: this.maxDictionaryEditDistance,\n      prefixLength: this.prefixLength\n    };\n  }\n}\nexport module SymSpell {\n  /**\n   * Standard JavaScript object representation for SymSpell\n   */\n  export interface AsObject {\n    dictPath?: string;\n    maxDictionaryEditDistance?: string;\n    prefixLength?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for SymSpell\n   */\n  export interface AsProtobufJSON {\n    dictPath?: string;\n    maxDictionaryEditDistance?: string;\n    prefixLength?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Normalization\n */\nexport class Normalization implements GrpcMessage {\n  static id = 'ondewo.s2t.Normalization';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Normalization();\n    Normalization.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Normalization) {\n    _instance.language = _instance.language || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Normalization,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Normalization.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Normalization,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n  }\n\n  private _language?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Normalization to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Normalization.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    Normalization.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Normalization.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Normalization.AsObject {\n    return {\n      language: this.language\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Normalization.AsProtobufJSON {\n    return {\n      language: this.language\n    };\n  }\n}\nexport module Normalization {\n  /**\n   * Standard JavaScript object representation for Normalization\n   */\n  export interface AsObject {\n    language?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Normalization\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Logging\n */\nexport class Logging implements GrpcMessage {\n  static id = 'ondewo.s2t.Logging';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Logging();\n    Logging.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Logging) {\n    _instance.type = _instance.type || '';\n    _instance.path = _instance.path || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Logging,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.path = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Logging.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Logging, _writer: BinaryWriter) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.path) {\n      _writer.writeString(2, _instance.path);\n    }\n  }\n\n  private _type?: string;\n  private _path?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Logging to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Logging.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.path = _value.path;\n    Logging.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Logging.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Logging.AsObject {\n    return {\n      type: this.type,\n      path: this.path\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Logging.AsProtobufJSON {\n    return {\n      type: this.type,\n      path: this.path\n    };\n  }\n}\nexport module Logging {\n  /**\n   * Standard JavaScript object representation for Logging\n   */\n  export interface AsObject {\n    type?: string;\n    path?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Logging\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    path?: string;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\n\n/**\n * Specific GrpcClientSettings for Speech2Text.\n * Use it only if your default settings are not set or the service requires other settings.\n */\nexport const GRPC_SPEECH2_TEXT_CLIENT_SETTINGS = new InjectionToken<any>(\n  'GRPC_SPEECH2_TEXT_CLIENT_SETTINGS'\n);\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcEvent,\n  GrpcMetadata\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './speech-to-text.pb';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nimport { GRPC_SPEECH2_TEXT_CLIENT_SETTINGS } from './speech-to-text.pbconf';\n/**\n * Service client implementation for ondewo.s2t.Speech2Text\n */\n@Injectable({ providedIn: 'any' })\nexport class Speech2TextClient {\n  private client: GrpcClient<any>;\n\n  /**\n   * Raw RPC implementation for each service client method.\n   * The raw methods provide more control on the incoming data and events. E.g. they can be useful to read status `OK` metadata.\n   * Attention: these methods do not throw errors when non-zero status codes are received.\n   */\n  $raw = {\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/TranscribeFile\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.TranscribeFileResponse>>\n     */\n    transcribeFile: (\n      requestData: thisProto.TranscribeFileRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.TranscribeFileResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/TranscribeFile',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.TranscribeFileRequest,\n        responseClass: thisProto.TranscribeFileResponse\n      });\n    },\n    /**\n     * Server streaming RPC for /ondewo.s2t.Speech2Text/TranscribeStream\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.TranscribeStreamResponse>>\n     */\n    transcribeStream: (\n      requestData: thisProto.TranscribeStreamRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.TranscribeStreamResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.serverStream,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/TranscribeStream',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.TranscribeStreamRequest,\n        responseClass: thisProto.TranscribeStreamResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/GetS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Speech2TextConfig>>\n     */\n    getS2tPipeline: (\n      requestData: thisProto.S2tPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Speech2TextConfig>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/GetS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.S2tPipelineId,\n        responseClass: thisProto.Speech2TextConfig\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/CreateS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.S2tPipelineId>>\n     */\n    createS2tPipeline: (\n      requestData: thisProto.Speech2TextConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.S2tPipelineId>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/CreateS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Speech2TextConfig,\n        responseClass: thisProto.S2tPipelineId\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/DeleteS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    deleteS2tPipeline: (\n      requestData: thisProto.S2tPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/DeleteS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.S2tPipelineId,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/UpdateS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    updateS2tPipeline: (\n      requestData: thisProto.Speech2TextConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/UpdateS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Speech2TextConfig,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tPipelines\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tPipelinesResponse>>\n     */\n    listS2tPipelines: (\n      requestData: thisProto.ListS2tPipelinesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tPipelinesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tPipelines',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tPipelinesRequest,\n        responseClass: thisProto.ListS2tPipelinesResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tLanguages\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tLanguagesResponse>>\n     */\n    listS2tLanguages: (\n      requestData: thisProto.ListS2tLanguagesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tLanguagesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tLanguages',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tLanguagesRequest,\n        responseClass: thisProto.ListS2tLanguagesResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tDomains\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tDomainsResponse>>\n     */\n    listS2tDomains: (\n      requestData: thisProto.ListS2tDomainsRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tDomainsResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tDomains',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tDomainsRequest,\n        responseClass: thisProto.ListS2tDomainsResponse\n      });\n    }\n  };\n\n  constructor(\n    @Optional() @Inject(GRPC_SPEECH2_TEXT_CLIENT_SETTINGS) settings: any,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory<any>,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.s2t.Speech2Text',\n      settings\n    );\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/TranscribeFile\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.TranscribeFileResponse>\n   */\n  transcribeFile(\n    requestData: thisProto.TranscribeFileRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.TranscribeFileResponse> {\n    return this.$raw\n      .transcribeFile(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Server streaming RPC for /ondewo.s2t.Speech2Text/TranscribeStream\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.TranscribeStreamResponse>\n   */\n  transcribeStream(\n    requestData: thisProto.TranscribeStreamRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.TranscribeStreamResponse> {\n    return this.$raw\n      .transcribeStream(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/GetS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Speech2TextConfig>\n   */\n  getS2tPipeline(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Speech2TextConfig> {\n    return this.$raw\n      .getS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/CreateS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.S2tPipelineId>\n   */\n  createS2tPipeline(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.S2tPipelineId> {\n    return this.$raw\n      .createS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/DeleteS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  deleteS2tPipeline(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .deleteS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/UpdateS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  updateS2tPipeline(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .updateS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tPipelines\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tPipelinesResponse>\n   */\n  listS2tPipelines(\n    requestData: thisProto.ListS2tPipelinesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tPipelinesResponse> {\n    return this.$raw\n      .listS2tPipelines(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tLanguages\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tLanguagesResponse>\n   */\n  listS2tLanguages(\n    requestData: thisProto.ListS2tLanguagesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tLanguagesResponse> {\n    return this.$raw\n      .listS2tLanguages(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tDomains\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tDomainsResponse>\n   */\n  listS2tDomains(\n    requestData: thisProto.ListS2tDomainsRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tDomainsResponse> {\n    return this.$raw\n      .listS2tDomains(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n}\n"]}