{"version":3,"sources":["../../api/ondewo/s2t/speech-to-text.pb.ts","../../api/ondewo/s2t/speech-to-text.pbconf.ts","../../api/google/protobuf/empty.pb.ts","../../api/ondewo/s2t/speech-to-text.pbsc.ts"],"names":["CTCDecoding","GRPC_SPEECH2_TEXT_CLIENT_SETTINGS","InjectionToken","TranscribeStreamRequest","value","this","s2tPipelineId","audioChunk","ctcDecoding","spellingCorrection","disableNormalization","endOfStream","refineValues","toBinary","instance","writer","BinaryWriter","toBinaryWriter","getResultBuffer","fromBinary","bytes","fromBinaryReader","BinaryReader","Uint8Array","reader","nextField","isEndGroup","getFieldNumber","readString","readBytes","readEnum","readBool","skipField","writeString","length","writeBytes","writeEnum","writeBool","Object","defineProperty","prototype","_s2tPipelineId","_audioChunk","_ctcDecoding","_spellingCorrection","_disableNormalization","_endOfStream","toObject","subarray","toJSON","TranscribeStreamResponse","transcription","time","final","readFloat","writeFloat","_transcription","_time","_final","TranscribeFileRequest","audioFile","includeTiming","_audioFile","_includeTiming","TranscribeFileResponse","wordTiming","map","m","WordTiming","messageInitializer3","readMessage","push","writeRepeatedMessage","_wordTiming","word","begin","end","readInt32","writeInt32","_word","_begin","_end","S2tPipelineId","id","_id","ListS2tPipelinesRequest","languages","slice","pipelineOwners","domains","writeRepeatedString","_languages","_pipelineOwners","_domains","ListS2tPipelinesResponse","pipelineConfigs","Speech2TextConfig","messageInitializer1","_pipelineConfigs","ListS2tLanguagesRequest","ListS2tLanguagesResponse","ListS2tDomainsRequest","ListS2tDomainsResponse","description","Description","undefined","active","inference","Inference","streamingServer","StreamingServer","voiceActivityDetection","VoiceActivityDetection","postProcessing","PostProcessing","logging","Logging","writeMessage","_description","_active","_inference","_streamingServer","_voiceActivityDetection","_postProcessing","_logging","language","pipelineOwner","domain","comments","_language","_pipelineOwner","_domain","_comments","ctcAcousticModels","CtcAcousticModels","languageModel","LanguageModel","_ctcAcousticModels","_languageModel","type","quartznet","Quartznet","quartznetTriton","QuartznetTriton","wav2vec","Wav2Vec","_type","_quartznet","_quartznetTriton","_wav2vec","modelPath","useGpu","_modelPath","_useGpu","configPath","loadType","ptFiles","PtFiles","ckptFile","CkptFile","_configPath","_loadType","_ptFiles","_ckptFile","path","step","_path","_step","tritonUrl","tritonModel","_tritonUrl","_tritonModel","beamSize","beamSearchScorerAlpha","beamSearchScorerBeta","readInt64String","writeInt64String","_beamSize","_beamSearchScorerAlpha","_beamSearchScorerBeta","host","port","outputStyle","streamingSpeechRecognition","StreamingSpeechRecognition","_host","_port","_outputStyle","_streamingSpeechRecognition","transcribeNotFinal","ctcDecodingMethod","samplingRate","minAudioChunkSize","startOfUtteranceThreshold","endOfUtteranceThreshold","_transcribeNotFinal","_ctcDecodingMethod","_samplingRate","_minAudioChunkSize","_startOfUtteranceThreshold","_endOfUtteranceThreshold","pyannote","Pyannote","matchbox","Matchbox","_pyannote","_matchbox","minAudioSize","offset","onset","logScale","minDurationOff","minDurationOn","_minAudioSize","_offset","_onset","_logScale","_minDurationOff","_minDurationOn","modelConfig","encoderPath","decoderPath","_modelConfig","_encoderPath","_decoderPath","pipeline","postProcessors","PostProcessors","_pipeline","_postProcessors","symSpell","SymSpell","normalization","Normalization","_symSpell","_normalization","dictPath","maxDictionaryEditDistance","prefixLength","_dictPath","_maxDictionaryEditDistance","_prefixLength","Empty","Speech2TextClient","settings","clientFactory","handler","client","createClient","transcribeFile","requestData","requestMetadata","transcribeFile$eventStream","pipe","throwStatusErrors","takeMessages","handle","GrpcCallType","unary","requestClass","thisProto.TranscribeFileRequest","responseClass","thisProto.TranscribeFileResponse","transcribeStream","transcribeStream$eventStream","serverStream","thisProto.TranscribeStreamRequest","thisProto.TranscribeStreamResponse","getS2tPipeline","getS2tPipeline$eventStream","thisProto.S2tPipelineId","thisProto.Speech2TextConfig","createS2tPipeline","createS2tPipeline$eventStream","deleteS2tPipeline","deleteS2tPipeline$eventStream","googleProtobuf000.Empty","updateS2tPipeline","updateS2tPipeline$eventStream","listS2tPipelines","listS2tPipelines$eventStream","thisProto.ListS2tPipelinesRequest","thisProto.ListS2tPipelinesResponse","listS2tLanguages","listS2tLanguages$eventStream","thisProto.ListS2tLanguagesRequest","thisProto.ListS2tLanguagesResponse","listS2tDomains","listS2tDomains$eventStream","thisProto.ListS2tDomainsRequest","thisProto.ListS2tDomainsResponse","Injectable","args","providedIn","Optional","Inject","GRPC_CLIENT_FACTORY","GrpcHandler"],"mappings":"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","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { GrpcMessage, RecursivePartial } from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '../../google/protobuf/empty.pb';\nexport enum CTCDecoding {\n  greedy = 0,\n  beamSearchWithLm = 1\n}\nexport class TranscribeStreamRequest implements GrpcMessage {\n  static toBinary(instance: TranscribeStreamRequest) {\n    const writer = new BinaryWriter();\n    TranscribeStreamRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new TranscribeStreamRequest();\n    TranscribeStreamRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: TranscribeStreamRequest) {\n    instance.s2tPipelineId = instance.s2tPipelineId || '';\n    instance.audioChunk = instance.audioChunk || new Uint8Array();\n    instance.ctcDecoding = instance.ctcDecoding || 0;\n    instance.spellingCorrection = instance.spellingCorrection || false;\n    instance.disableNormalization = instance.disableNormalization || false;\n    instance.endOfStream = instance.endOfStream || false;\n  }\n\n  static fromBinaryReader(\n    instance: TranscribeStreamRequest,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.s2tPipelineId = reader.readString();\n          break;\n        case 2:\n          instance.audioChunk = reader.readBytes();\n          break;\n        case 3:\n          instance.ctcDecoding = reader.readEnum();\n          break;\n        case 4:\n          instance.spellingCorrection = reader.readBool();\n          break;\n        case 5:\n          instance.disableNormalization = reader.readBool();\n          break;\n        case 6:\n          instance.endOfStream = reader.readBool();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    TranscribeStreamRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: TranscribeStreamRequest,\n    writer: BinaryWriter\n  ) {\n    if (instance.s2tPipelineId) {\n      writer.writeString(1, instance.s2tPipelineId);\n    }\n    if (instance.audioChunk && instance.audioChunk.length) {\n      writer.writeBytes(2, instance.audioChunk);\n    }\n    if (instance.ctcDecoding) {\n      writer.writeEnum(3, instance.ctcDecoding);\n    }\n    if (instance.spellingCorrection) {\n      writer.writeBool(4, instance.spellingCorrection);\n    }\n    if (instance.disableNormalization) {\n      writer.writeBool(5, instance.disableNormalization);\n    }\n    if (instance.endOfStream) {\n      writer.writeBool(6, instance.endOfStream);\n    }\n  }\n\n  private _s2tPipelineId?: string;\n  private _audioChunk?: Uint8Array;\n  private _ctcDecoding?: CTCDecoding;\n  private _spellingCorrection?: boolean;\n  private _disableNormalization?: boolean;\n  private _endOfStream?: boolean;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param TranscribeStreamRequest value\n   */\n  constructor(value?: RecursivePartial<TranscribeStreamRequest>) {\n    value = value || {};\n    this.s2tPipelineId = value.s2tPipelineId;\n    this.audioChunk = value.audioChunk;\n    this.ctcDecoding = value.ctcDecoding;\n    this.spellingCorrection = value.spellingCorrection;\n    this.disableNormalization = value.disableNormalization;\n    this.endOfStream = value.endOfStream;\n    TranscribeStreamRequest.refineValues(this);\n  }\n  get s2tPipelineId(): string | undefined {\n    return this._s2tPipelineId;\n  }\n  set s2tPipelineId(value: string | undefined) {\n    this._s2tPipelineId = value;\n  }\n  get audioChunk(): Uint8Array | undefined {\n    return this._audioChunk;\n  }\n  set audioChunk(value: Uint8Array | undefined) {\n    this._audioChunk = value;\n  }\n  get ctcDecoding(): CTCDecoding | undefined {\n    return this._ctcDecoding;\n  }\n  set ctcDecoding(value: CTCDecoding | undefined) {\n    this._ctcDecoding = value;\n  }\n  get spellingCorrection(): boolean | undefined {\n    return this._spellingCorrection;\n  }\n  set spellingCorrection(value: boolean | undefined) {\n    this._spellingCorrection = value;\n  }\n  get disableNormalization(): boolean | undefined {\n    return this._disableNormalization;\n  }\n  set disableNormalization(value: boolean | undefined) {\n    this._disableNormalization = value;\n  }\n  get endOfStream(): boolean | undefined {\n    return this._endOfStream;\n  }\n  set endOfStream(value: boolean | undefined) {\n    this._endOfStream = value;\n  }\n  toObject() {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      audioChunk: this.audioChunk\n        ? this.audioChunk.subarray(0)\n        : new Uint8Array(),\n      ctcDecoding: this.ctcDecoding,\n      spellingCorrection: this.spellingCorrection,\n      disableNormalization: this.disableNormalization,\n      endOfStream: this.endOfStream\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module TranscribeStreamRequest {}\nexport class TranscribeStreamResponse implements GrpcMessage {\n  static toBinary(instance: TranscribeStreamResponse) {\n    const writer = new BinaryWriter();\n    TranscribeStreamResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new TranscribeStreamResponse();\n    TranscribeStreamResponse.fromBinaryReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  static refineValues(instance: TranscribeStreamResponse) {\n    instance.transcription = instance.transcription || '';\n    instance.time = instance.time || 0;\n    instance.final = instance.final || false;\n  }\n\n  static fromBinaryReader(\n    instance: TranscribeStreamResponse,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.transcription = reader.readString();\n          break;\n        case 2:\n          instance.time = reader.readFloat();\n          break;\n        case 3:\n          instance.final = reader.readBool();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    TranscribeStreamResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: TranscribeStreamResponse,\n    writer: BinaryWriter\n  ) {\n    if (instance.transcription) {\n      writer.writeString(1, instance.transcription);\n    }\n    if (instance.time) {\n      writer.writeFloat(2, instance.time);\n    }\n    if (instance.final) {\n      writer.writeBool(3, instance.final);\n    }\n  }\n\n  private _transcription?: string;\n  private _time?: number;\n  private _final?: boolean;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param TranscribeStreamResponse value\n   */\n  constructor(value?: RecursivePartial<TranscribeStreamResponse>) {\n    value = value || {};\n    this.transcription = value.transcription;\n    this.time = value.time;\n    this.final = value.final;\n    TranscribeStreamResponse.refineValues(this);\n  }\n  get transcription(): string | undefined {\n    return this._transcription;\n  }\n  set transcription(value: string | undefined) {\n    this._transcription = value;\n  }\n  get time(): number | undefined {\n    return this._time;\n  }\n  set time(value: number | undefined) {\n    this._time = value;\n  }\n  get final(): boolean | undefined {\n    return this._final;\n  }\n  set final(value: boolean | undefined) {\n    this._final = value;\n  }\n  toObject() {\n    return {\n      transcription: this.transcription,\n      time: this.time,\n      final: this.final\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module TranscribeStreamResponse {}\nexport class TranscribeFileRequest implements GrpcMessage {\n  static toBinary(instance: TranscribeFileRequest) {\n    const writer = new BinaryWriter();\n    TranscribeFileRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new TranscribeFileRequest();\n    TranscribeFileRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: TranscribeFileRequest) {\n    instance.s2tPipelineId = instance.s2tPipelineId || '';\n    instance.audioFile = instance.audioFile || new Uint8Array();\n    instance.ctcDecoding = instance.ctcDecoding || 0;\n    instance.spellingCorrection = instance.spellingCorrection || false;\n    instance.disableNormalization = instance.disableNormalization || false;\n    instance.includeTiming = instance.includeTiming || false;\n  }\n\n  static fromBinaryReader(\n    instance: TranscribeFileRequest,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.s2tPipelineId = reader.readString();\n          break;\n        case 2:\n          instance.audioFile = reader.readBytes();\n          break;\n        case 3:\n          instance.ctcDecoding = reader.readEnum();\n          break;\n        case 4:\n          instance.spellingCorrection = reader.readBool();\n          break;\n        case 5:\n          instance.disableNormalization = reader.readBool();\n          break;\n        case 6:\n          instance.includeTiming = reader.readBool();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    TranscribeFileRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: TranscribeFileRequest, writer: BinaryWriter) {\n    if (instance.s2tPipelineId) {\n      writer.writeString(1, instance.s2tPipelineId);\n    }\n    if (instance.audioFile && instance.audioFile.length) {\n      writer.writeBytes(2, instance.audioFile);\n    }\n    if (instance.ctcDecoding) {\n      writer.writeEnum(3, instance.ctcDecoding);\n    }\n    if (instance.spellingCorrection) {\n      writer.writeBool(4, instance.spellingCorrection);\n    }\n    if (instance.disableNormalization) {\n      writer.writeBool(5, instance.disableNormalization);\n    }\n    if (instance.includeTiming) {\n      writer.writeBool(6, instance.includeTiming);\n    }\n  }\n\n  private _s2tPipelineId?: string;\n  private _audioFile?: Uint8Array;\n  private _ctcDecoding?: CTCDecoding;\n  private _spellingCorrection?: boolean;\n  private _disableNormalization?: boolean;\n  private _includeTiming?: boolean;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param TranscribeFileRequest value\n   */\n  constructor(value?: RecursivePartial<TranscribeFileRequest>) {\n    value = value || {};\n    this.s2tPipelineId = value.s2tPipelineId;\n    this.audioFile = value.audioFile;\n    this.ctcDecoding = value.ctcDecoding;\n    this.spellingCorrection = value.spellingCorrection;\n    this.disableNormalization = value.disableNormalization;\n    this.includeTiming = value.includeTiming;\n    TranscribeFileRequest.refineValues(this);\n  }\n  get s2tPipelineId(): string | undefined {\n    return this._s2tPipelineId;\n  }\n  set s2tPipelineId(value: string | undefined) {\n    this._s2tPipelineId = value;\n  }\n  get audioFile(): Uint8Array | undefined {\n    return this._audioFile;\n  }\n  set audioFile(value: Uint8Array | undefined) {\n    this._audioFile = value;\n  }\n  get ctcDecoding(): CTCDecoding | undefined {\n    return this._ctcDecoding;\n  }\n  set ctcDecoding(value: CTCDecoding | undefined) {\n    this._ctcDecoding = value;\n  }\n  get spellingCorrection(): boolean | undefined {\n    return this._spellingCorrection;\n  }\n  set spellingCorrection(value: boolean | undefined) {\n    this._spellingCorrection = value;\n  }\n  get disableNormalization(): boolean | undefined {\n    return this._disableNormalization;\n  }\n  set disableNormalization(value: boolean | undefined) {\n    this._disableNormalization = value;\n  }\n  get includeTiming(): boolean | undefined {\n    return this._includeTiming;\n  }\n  set includeTiming(value: boolean | undefined) {\n    this._includeTiming = value;\n  }\n  toObject() {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      audioFile: this.audioFile ? this.audioFile.subarray(0) : new Uint8Array(),\n      ctcDecoding: this.ctcDecoding,\n      spellingCorrection: this.spellingCorrection,\n      disableNormalization: this.disableNormalization,\n      includeTiming: this.includeTiming\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module TranscribeFileRequest {}\nexport class TranscribeFileResponse implements GrpcMessage {\n  static toBinary(instance: TranscribeFileResponse) {\n    const writer = new BinaryWriter();\n    TranscribeFileResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new TranscribeFileResponse();\n    TranscribeFileResponse.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: TranscribeFileResponse) {\n    instance.transcription = instance.transcription || '';\n    instance.time = instance.time || 0;\n    instance.wordTiming = instance.wordTiming || [];\n  }\n\n  static fromBinaryReader(\n    instance: TranscribeFileResponse,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.transcription = reader.readString();\n          break;\n        case 2:\n          instance.time = reader.readFloat();\n          break;\n        case 3:\n          const messageInitializer3 = new WordTiming();\n          reader.readMessage(messageInitializer3, WordTiming.fromBinaryReader);\n          (instance.wordTiming = instance.wordTiming || []).push(\n            messageInitializer3\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    TranscribeFileResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: TranscribeFileResponse,\n    writer: BinaryWriter\n  ) {\n    if (instance.transcription) {\n      writer.writeString(1, instance.transcription);\n    }\n    if (instance.time) {\n      writer.writeFloat(2, instance.time);\n    }\n    if (instance.wordTiming && instance.wordTiming.length) {\n      writer.writeRepeatedMessage(\n        3,\n        instance.wordTiming as any,\n        WordTiming.toBinaryWriter\n      );\n    }\n  }\n\n  private _transcription?: string;\n  private _time?: number;\n  private _wordTiming?: WordTiming[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param TranscribeFileResponse value\n   */\n  constructor(value?: RecursivePartial<TranscribeFileResponse>) {\n    value = value || {};\n    this.transcription = value.transcription;\n    this.time = value.time;\n    this.wordTiming = (value.wordTiming || []).map(m => new WordTiming(m));\n    TranscribeFileResponse.refineValues(this);\n  }\n  get transcription(): string | undefined {\n    return this._transcription;\n  }\n  set transcription(value: string | undefined) {\n    this._transcription = value;\n  }\n  get time(): number | undefined {\n    return this._time;\n  }\n  set time(value: number | undefined) {\n    this._time = value;\n  }\n  get wordTiming(): WordTiming[] | undefined {\n    return this._wordTiming;\n  }\n  set wordTiming(value: WordTiming[] | undefined) {\n    this._wordTiming = value;\n  }\n  toObject() {\n    return {\n      transcription: this.transcription,\n      time: this.time,\n      wordTiming: (this.wordTiming || []).map(m => m.toObject())\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module TranscribeFileResponse {}\nexport class WordTiming implements GrpcMessage {\n  static toBinary(instance: WordTiming) {\n    const writer = new BinaryWriter();\n    WordTiming.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new WordTiming();\n    WordTiming.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: WordTiming) {\n    instance.word = instance.word || '';\n    instance.begin = instance.begin || 0;\n    instance.end = instance.end || 0;\n  }\n\n  static fromBinaryReader(instance: WordTiming, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.word = reader.readString();\n          break;\n        case 2:\n          instance.begin = reader.readInt32();\n          break;\n        case 3:\n          instance.end = reader.readInt32();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    WordTiming.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: WordTiming, writer: BinaryWriter) {\n    if (instance.word) {\n      writer.writeString(1, instance.word);\n    }\n    if (instance.begin) {\n      writer.writeInt32(2, instance.begin);\n    }\n    if (instance.end) {\n      writer.writeInt32(3, instance.end);\n    }\n  }\n\n  private _word?: string;\n  private _begin?: number;\n  private _end?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param WordTiming value\n   */\n  constructor(value?: RecursivePartial<WordTiming>) {\n    value = value || {};\n    this.word = value.word;\n    this.begin = value.begin;\n    this.end = value.end;\n    WordTiming.refineValues(this);\n  }\n  get word(): string | undefined {\n    return this._word;\n  }\n  set word(value: string | undefined) {\n    this._word = value;\n  }\n  get begin(): number | undefined {\n    return this._begin;\n  }\n  set begin(value: number | undefined) {\n    this._begin = value;\n  }\n  get end(): number | undefined {\n    return this._end;\n  }\n  set end(value: number | undefined) {\n    this._end = value;\n  }\n  toObject() {\n    return {\n      word: this.word,\n      begin: this.begin,\n      end: this.end\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module WordTiming {}\nexport class S2tPipelineId implements GrpcMessage {\n  static toBinary(instance: S2tPipelineId) {\n    const writer = new BinaryWriter();\n    S2tPipelineId.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new S2tPipelineId();\n    S2tPipelineId.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: S2tPipelineId) {\n    instance.id = instance.id || '';\n  }\n\n  static fromBinaryReader(instance: S2tPipelineId, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.id = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    S2tPipelineId.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: S2tPipelineId, writer: BinaryWriter) {\n    if (instance.id) {\n      writer.writeString(1, instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param S2tPipelineId value\n   */\n  constructor(value?: RecursivePartial<S2tPipelineId>) {\n    value = value || {};\n    this.id = value.id;\n    S2tPipelineId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  toObject() {\n    return {\n      id: this.id\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module S2tPipelineId {}\nexport class ListS2tPipelinesRequest implements GrpcMessage {\n  static toBinary(instance: ListS2tPipelinesRequest) {\n    const writer = new BinaryWriter();\n    ListS2tPipelinesRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListS2tPipelinesRequest();\n    ListS2tPipelinesRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: ListS2tPipelinesRequest) {\n    instance.languages = instance.languages || [];\n    instance.pipelineOwners = instance.pipelineOwners || [];\n    instance.domains = instance.domains || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListS2tPipelinesRequest,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.languages = instance.languages || []).push(\n            reader.readString()\n          );\n          break;\n        case 2:\n          (instance.pipelineOwners = instance.pipelineOwners || []).push(\n            reader.readString()\n          );\n          break;\n        case 3:\n          (instance.domains = instance.domains || []).push(reader.readString());\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListS2tPipelinesRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListS2tPipelinesRequest,\n    writer: BinaryWriter\n  ) {\n    if (instance.languages && instance.languages.length) {\n      writer.writeRepeatedString(1, instance.languages);\n    }\n    if (instance.pipelineOwners && instance.pipelineOwners.length) {\n      writer.writeRepeatedString(2, instance.pipelineOwners);\n    }\n    if (instance.domains && instance.domains.length) {\n      writer.writeRepeatedString(3, instance.domains);\n    }\n  }\n\n  private _languages?: string[];\n  private _pipelineOwners?: string[];\n  private _domains?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListS2tPipelinesRequest value\n   */\n  constructor(value?: RecursivePartial<ListS2tPipelinesRequest>) {\n    value = value || {};\n    this.languages = (value.languages || []).slice();\n    this.pipelineOwners = (value.pipelineOwners || []).slice();\n    this.domains = (value.domains || []).slice();\n    ListS2tPipelinesRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  toObject() {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListS2tPipelinesRequest {}\nexport class ListS2tPipelinesResponse implements GrpcMessage {\n  static toBinary(instance: ListS2tPipelinesResponse) {\n    const writer = new BinaryWriter();\n    ListS2tPipelinesResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListS2tPipelinesResponse();\n    ListS2tPipelinesResponse.fromBinaryReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  static refineValues(instance: ListS2tPipelinesResponse) {\n    instance.pipelineConfigs = instance.pipelineConfigs || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListS2tPipelinesResponse,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Speech2TextConfig();\n          reader.readMessage(\n            messageInitializer1,\n            Speech2TextConfig.fromBinaryReader\n          );\n          (instance.pipelineConfigs = instance.pipelineConfigs || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListS2tPipelinesResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListS2tPipelinesResponse,\n    writer: BinaryWriter\n  ) {\n    if (instance.pipelineConfigs && instance.pipelineConfigs.length) {\n      writer.writeRepeatedMessage(\n        1,\n        instance.pipelineConfigs as any,\n        Speech2TextConfig.toBinaryWriter\n      );\n    }\n  }\n\n  private _pipelineConfigs?: Speech2TextConfig[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListS2tPipelinesResponse value\n   */\n  constructor(value?: RecursivePartial<ListS2tPipelinesResponse>) {\n    value = value || {};\n    this.pipelineConfigs = (value.pipelineConfigs || []).map(\n      m => new Speech2TextConfig(m)\n    );\n    ListS2tPipelinesResponse.refineValues(this);\n  }\n  get pipelineConfigs(): Speech2TextConfig[] | undefined {\n    return this._pipelineConfigs;\n  }\n  set pipelineConfigs(value: Speech2TextConfig[] | undefined) {\n    this._pipelineConfigs = value;\n  }\n  toObject() {\n    return {\n      pipelineConfigs: (this.pipelineConfigs || []).map(m => m.toObject())\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListS2tPipelinesResponse {}\nexport class ListS2tLanguagesRequest implements GrpcMessage {\n  static toBinary(instance: ListS2tLanguagesRequest) {\n    const writer = new BinaryWriter();\n    ListS2tLanguagesRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguagesRequest();\n    ListS2tLanguagesRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: ListS2tLanguagesRequest) {\n    instance.domains = instance.domains || [];\n    instance.pipelineOwners = instance.pipelineOwners || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListS2tLanguagesRequest,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.domains = instance.domains || []).push(reader.readString());\n          break;\n        case 2:\n          (instance.pipelineOwners = instance.pipelineOwners || []).push(\n            reader.readString()\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListS2tLanguagesRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListS2tLanguagesRequest,\n    writer: BinaryWriter\n  ) {\n    if (instance.domains && instance.domains.length) {\n      writer.writeRepeatedString(1, instance.domains);\n    }\n    if (instance.pipelineOwners && instance.pipelineOwners.length) {\n      writer.writeRepeatedString(2, instance.pipelineOwners);\n    }\n  }\n\n  private _domains?: string[];\n  private _pipelineOwners?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListS2tLanguagesRequest value\n   */\n  constructor(value?: RecursivePartial<ListS2tLanguagesRequest>) {\n    value = value || {};\n    this.domains = (value.domains || []).slice();\n    this.pipelineOwners = (value.pipelineOwners || []).slice();\n    ListS2tLanguagesRequest.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  toObject() {\n    return {\n      domains: (this.domains || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListS2tLanguagesRequest {}\nexport class ListS2tLanguagesResponse implements GrpcMessage {\n  static toBinary(instance: ListS2tLanguagesResponse) {\n    const writer = new BinaryWriter();\n    ListS2tLanguagesResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguagesResponse();\n    ListS2tLanguagesResponse.fromBinaryReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  static refineValues(instance: ListS2tLanguagesResponse) {\n    instance.languages = instance.languages || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListS2tLanguagesResponse,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.languages = instance.languages || []).push(\n            reader.readString()\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListS2tLanguagesResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListS2tLanguagesResponse,\n    writer: BinaryWriter\n  ) {\n    if (instance.languages && instance.languages.length) {\n      writer.writeRepeatedString(1, instance.languages);\n    }\n  }\n\n  private _languages?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListS2tLanguagesResponse value\n   */\n  constructor(value?: RecursivePartial<ListS2tLanguagesResponse>) {\n    value = value || {};\n    this.languages = (value.languages || []).slice();\n    ListS2tLanguagesResponse.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  toObject() {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListS2tLanguagesResponse {}\nexport class ListS2tDomainsRequest implements GrpcMessage {\n  static toBinary(instance: ListS2tDomainsRequest) {\n    const writer = new BinaryWriter();\n    ListS2tDomainsRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListS2tDomainsRequest();\n    ListS2tDomainsRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: ListS2tDomainsRequest) {\n    instance.languages = instance.languages || [];\n    instance.pipelineOwners = instance.pipelineOwners || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListS2tDomainsRequest,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.languages = instance.languages || []).push(\n            reader.readString()\n          );\n          break;\n        case 2:\n          (instance.pipelineOwners = instance.pipelineOwners || []).push(\n            reader.readString()\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListS2tDomainsRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: ListS2tDomainsRequest, writer: BinaryWriter) {\n    if (instance.languages && instance.languages.length) {\n      writer.writeRepeatedString(1, instance.languages);\n    }\n    if (instance.pipelineOwners && instance.pipelineOwners.length) {\n      writer.writeRepeatedString(2, instance.pipelineOwners);\n    }\n  }\n\n  private _languages?: string[];\n  private _pipelineOwners?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListS2tDomainsRequest value\n   */\n  constructor(value?: RecursivePartial<ListS2tDomainsRequest>) {\n    value = value || {};\n    this.languages = (value.languages || []).slice();\n    this.pipelineOwners = (value.pipelineOwners || []).slice();\n    ListS2tDomainsRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  toObject() {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListS2tDomainsRequest {}\nexport class ListS2tDomainsResponse implements GrpcMessage {\n  static toBinary(instance: ListS2tDomainsResponse) {\n    const writer = new BinaryWriter();\n    ListS2tDomainsResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListS2tDomainsResponse();\n    ListS2tDomainsResponse.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: ListS2tDomainsResponse) {\n    instance.domains = instance.domains || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListS2tDomainsResponse,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.domains = instance.domains || []).push(reader.readString());\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListS2tDomainsResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListS2tDomainsResponse,\n    writer: BinaryWriter\n  ) {\n    if (instance.domains && instance.domains.length) {\n      writer.writeRepeatedString(1, instance.domains);\n    }\n  }\n\n  private _domains?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListS2tDomainsResponse value\n   */\n  constructor(value?: RecursivePartial<ListS2tDomainsResponse>) {\n    value = value || {};\n    this.domains = (value.domains || []).slice();\n    ListS2tDomainsResponse.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  toObject() {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListS2tDomainsResponse {}\nexport class Speech2TextConfig implements GrpcMessage {\n  static toBinary(instance: Speech2TextConfig) {\n    const writer = new BinaryWriter();\n    Speech2TextConfig.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Speech2TextConfig();\n    Speech2TextConfig.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Speech2TextConfig) {\n    instance.id = instance.id || '';\n    instance.description = instance.description || undefined;\n    instance.active = instance.active || false;\n    instance.inference = instance.inference || undefined;\n    instance.streamingServer = instance.streamingServer || undefined;\n    instance.voiceActivityDetection =\n      instance.voiceActivityDetection || undefined;\n    instance.postProcessing = instance.postProcessing || undefined;\n    instance.logging = instance.logging || undefined;\n  }\n\n  static fromBinaryReader(instance: Speech2TextConfig, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.id = reader.readString();\n          break;\n        case 2:\n          instance.description = new Description();\n          reader.readMessage(\n            instance.description,\n            Description.fromBinaryReader\n          );\n          break;\n        case 3:\n          instance.active = reader.readBool();\n          break;\n        case 4:\n          instance.inference = new Inference();\n          reader.readMessage(instance.inference, Inference.fromBinaryReader);\n          break;\n        case 5:\n          instance.streamingServer = new StreamingServer();\n          reader.readMessage(\n            instance.streamingServer,\n            StreamingServer.fromBinaryReader\n          );\n          break;\n        case 6:\n          instance.voiceActivityDetection = new VoiceActivityDetection();\n          reader.readMessage(\n            instance.voiceActivityDetection,\n            VoiceActivityDetection.fromBinaryReader\n          );\n          break;\n        case 7:\n          instance.postProcessing = new PostProcessing();\n          reader.readMessage(\n            instance.postProcessing,\n            PostProcessing.fromBinaryReader\n          );\n          break;\n        case 8:\n          instance.logging = new Logging();\n          reader.readMessage(instance.logging, Logging.fromBinaryReader);\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Speech2TextConfig.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Speech2TextConfig, writer: BinaryWriter) {\n    if (instance.id) {\n      writer.writeString(1, instance.id);\n    }\n    if (instance.description) {\n      writer.writeMessage(\n        2,\n        instance.description as any,\n        Description.toBinaryWriter\n      );\n    }\n    if (instance.active) {\n      writer.writeBool(3, instance.active);\n    }\n    if (instance.inference) {\n      writer.writeMessage(\n        4,\n        instance.inference as any,\n        Inference.toBinaryWriter\n      );\n    }\n    if (instance.streamingServer) {\n      writer.writeMessage(\n        5,\n        instance.streamingServer as any,\n        StreamingServer.toBinaryWriter\n      );\n    }\n    if (instance.voiceActivityDetection) {\n      writer.writeMessage(\n        6,\n        instance.voiceActivityDetection as any,\n        VoiceActivityDetection.toBinaryWriter\n      );\n    }\n    if (instance.postProcessing) {\n      writer.writeMessage(\n        7,\n        instance.postProcessing as any,\n        PostProcessing.toBinaryWriter\n      );\n    }\n    if (instance.logging) {\n      writer.writeMessage(8, instance.logging as any, Logging.toBinaryWriter);\n    }\n  }\n\n  private _id?: string;\n  private _description?: Description;\n  private _active?: boolean;\n  private _inference?: Inference;\n  private _streamingServer?: StreamingServer;\n  private _voiceActivityDetection?: VoiceActivityDetection;\n  private _postProcessing?: PostProcessing;\n  private _logging?: Logging;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Speech2TextConfig value\n   */\n  constructor(value?: RecursivePartial<Speech2TextConfig>) {\n    value = value || {};\n    this.id = value.id;\n    this.description = value.description\n      ? new Description(value.description)\n      : undefined;\n    this.active = value.active;\n    this.inference = value.inference\n      ? new Inference(value.inference)\n      : undefined;\n    this.streamingServer = value.streamingServer\n      ? new StreamingServer(value.streamingServer)\n      : undefined;\n    this.voiceActivityDetection = value.voiceActivityDetection\n      ? new VoiceActivityDetection(value.voiceActivityDetection)\n      : undefined;\n    this.postProcessing = value.postProcessing\n      ? new PostProcessing(value.postProcessing)\n      : undefined;\n    this.logging = value.logging ? new Logging(value.logging) : undefined;\n    Speech2TextConfig.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get description(): Description | undefined {\n    return this._description;\n  }\n  set description(value: Description | undefined) {\n    this._description = value;\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get inference(): Inference | undefined {\n    return this._inference;\n  }\n  set inference(value: Inference | undefined) {\n    this._inference = value;\n  }\n  get streamingServer(): StreamingServer | undefined {\n    return this._streamingServer;\n  }\n  set streamingServer(value: StreamingServer | undefined) {\n    this._streamingServer = value;\n  }\n  get voiceActivityDetection(): VoiceActivityDetection | undefined {\n    return this._voiceActivityDetection;\n  }\n  set voiceActivityDetection(value: VoiceActivityDetection | undefined) {\n    this._voiceActivityDetection = value;\n  }\n  get postProcessing(): PostProcessing | undefined {\n    return this._postProcessing;\n  }\n  set postProcessing(value: PostProcessing | undefined) {\n    this._postProcessing = value;\n  }\n  get logging(): Logging | undefined {\n    return this._logging;\n  }\n  set logging(value: Logging | undefined) {\n    this._logging = value;\n  }\n  toObject() {\n    return {\n      id: this.id,\n      description: this.description ? this.description.toObject() : undefined,\n      active: this.active,\n      inference: this.inference ? this.inference.toObject() : undefined,\n      streamingServer: this.streamingServer\n        ? this.streamingServer.toObject()\n        : undefined,\n      voiceActivityDetection: this.voiceActivityDetection\n        ? this.voiceActivityDetection.toObject()\n        : undefined,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toObject()\n        : undefined,\n      logging: this.logging ? this.logging.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Speech2TextConfig {}\nexport class Description implements GrpcMessage {\n  static toBinary(instance: Description) {\n    const writer = new BinaryWriter();\n    Description.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Description();\n    Description.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Description) {\n    instance.language = instance.language || '';\n    instance.pipelineOwner = instance.pipelineOwner || '';\n    instance.domain = instance.domain || '';\n    instance.comments = instance.comments || '';\n  }\n\n  static fromBinaryReader(instance: Description, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.language = reader.readString();\n          break;\n        case 2:\n          instance.pipelineOwner = reader.readString();\n          break;\n        case 3:\n          instance.domain = reader.readString();\n          break;\n        case 4:\n          instance.comments = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Description.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Description, writer: BinaryWriter) {\n    if (instance.language) {\n      writer.writeString(1, instance.language);\n    }\n    if (instance.pipelineOwner) {\n      writer.writeString(2, instance.pipelineOwner);\n    }\n    if (instance.domain) {\n      writer.writeString(3, instance.domain);\n    }\n    if (instance.comments) {\n      writer.writeString(4, instance.comments);\n    }\n  }\n\n  private _language?: string;\n  private _pipelineOwner?: string;\n  private _domain?: string;\n  private _comments?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Description value\n   */\n  constructor(value?: RecursivePartial<Description>) {\n    value = value || {};\n    this.language = value.language;\n    this.pipelineOwner = value.pipelineOwner;\n    this.domain = value.domain;\n    this.comments = value.comments;\n    Description.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get pipelineOwner(): string | undefined {\n    return this._pipelineOwner;\n  }\n  set pipelineOwner(value: string | undefined) {\n    this._pipelineOwner = value;\n  }\n  get domain(): string | undefined {\n    return this._domain;\n  }\n  set domain(value: string | undefined) {\n    this._domain = value;\n  }\n  get comments(): string | undefined {\n    return this._comments;\n  }\n  set comments(value: string | undefined) {\n    this._comments = value;\n  }\n  toObject() {\n    return {\n      language: this.language,\n      pipelineOwner: this.pipelineOwner,\n      domain: this.domain,\n      comments: this.comments\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Description {}\nexport class Inference implements GrpcMessage {\n  static toBinary(instance: Inference) {\n    const writer = new BinaryWriter();\n    Inference.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Inference();\n    Inference.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Inference) {\n    instance.ctcAcousticModels = instance.ctcAcousticModels || undefined;\n    instance.languageModel = instance.languageModel || undefined;\n  }\n\n  static fromBinaryReader(instance: Inference, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.ctcAcousticModels = new CtcAcousticModels();\n          reader.readMessage(\n            instance.ctcAcousticModels,\n            CtcAcousticModels.fromBinaryReader\n          );\n          break;\n        case 2:\n          instance.languageModel = new LanguageModel();\n          reader.readMessage(\n            instance.languageModel,\n            LanguageModel.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Inference.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Inference, writer: BinaryWriter) {\n    if (instance.ctcAcousticModels) {\n      writer.writeMessage(\n        1,\n        instance.ctcAcousticModels as any,\n        CtcAcousticModels.toBinaryWriter\n      );\n    }\n    if (instance.languageModel) {\n      writer.writeMessage(\n        2,\n        instance.languageModel as any,\n        LanguageModel.toBinaryWriter\n      );\n    }\n  }\n\n  private _ctcAcousticModels?: CtcAcousticModels;\n  private _languageModel?: LanguageModel;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Inference value\n   */\n  constructor(value?: RecursivePartial<Inference>) {\n    value = value || {};\n    this.ctcAcousticModels = value.ctcAcousticModels\n      ? new CtcAcousticModels(value.ctcAcousticModels)\n      : undefined;\n    this.languageModel = value.languageModel\n      ? new LanguageModel(value.languageModel)\n      : undefined;\n    Inference.refineValues(this);\n  }\n  get ctcAcousticModels(): CtcAcousticModels | undefined {\n    return this._ctcAcousticModels;\n  }\n  set ctcAcousticModels(value: CtcAcousticModels | undefined) {\n    this._ctcAcousticModels = value;\n  }\n  get languageModel(): LanguageModel | undefined {\n    return this._languageModel;\n  }\n  set languageModel(value: LanguageModel | undefined) {\n    this._languageModel = value;\n  }\n  toObject() {\n    return {\n      ctcAcousticModels: this.ctcAcousticModels\n        ? this.ctcAcousticModels.toObject()\n        : undefined,\n      languageModel: this.languageModel\n        ? this.languageModel.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Inference {}\nexport class CtcAcousticModels implements GrpcMessage {\n  static toBinary(instance: CtcAcousticModels) {\n    const writer = new BinaryWriter();\n    CtcAcousticModels.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new CtcAcousticModels();\n    CtcAcousticModels.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: CtcAcousticModels) {\n    instance.type = instance.type || '';\n    instance.quartznet = instance.quartznet || undefined;\n    instance.quartznetTriton = instance.quartznetTriton || undefined;\n    instance.wav2vec = instance.wav2vec || undefined;\n  }\n\n  static fromBinaryReader(instance: CtcAcousticModels, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.type = reader.readString();\n          break;\n        case 2:\n          instance.quartznet = new Quartznet();\n          reader.readMessage(instance.quartznet, Quartznet.fromBinaryReader);\n          break;\n        case 3:\n          instance.quartznetTriton = new QuartznetTriton();\n          reader.readMessage(\n            instance.quartznetTriton,\n            QuartznetTriton.fromBinaryReader\n          );\n          break;\n        case 4:\n          instance.wav2vec = new Wav2Vec();\n          reader.readMessage(instance.wav2vec, Wav2Vec.fromBinaryReader);\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    CtcAcousticModels.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: CtcAcousticModels, writer: BinaryWriter) {\n    if (instance.type) {\n      writer.writeString(1, instance.type);\n    }\n    if (instance.quartznet) {\n      writer.writeMessage(\n        2,\n        instance.quartznet as any,\n        Quartznet.toBinaryWriter\n      );\n    }\n    if (instance.quartznetTriton) {\n      writer.writeMessage(\n        3,\n        instance.quartznetTriton as any,\n        QuartznetTriton.toBinaryWriter\n      );\n    }\n    if (instance.wav2vec) {\n      writer.writeMessage(4, instance.wav2vec as any, Wav2Vec.toBinaryWriter);\n    }\n  }\n\n  private _type?: string;\n  private _quartznet?: Quartznet;\n  private _quartznetTriton?: QuartznetTriton;\n  private _wav2vec?: Wav2Vec;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param CtcAcousticModels value\n   */\n  constructor(value?: RecursivePartial<CtcAcousticModels>) {\n    value = value || {};\n    this.type = value.type;\n    this.quartznet = value.quartznet\n      ? new Quartznet(value.quartznet)\n      : undefined;\n    this.quartznetTriton = value.quartznetTriton\n      ? new QuartznetTriton(value.quartznetTriton)\n      : undefined;\n    this.wav2vec = value.wav2vec ? new Wav2Vec(value.wav2vec) : undefined;\n    CtcAcousticModels.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get quartznet(): Quartznet | undefined {\n    return this._quartznet;\n  }\n  set quartznet(value: Quartznet | undefined) {\n    this._quartznet = value;\n  }\n  get quartznetTriton(): QuartznetTriton | undefined {\n    return this._quartznetTriton;\n  }\n  set quartznetTriton(value: QuartznetTriton | undefined) {\n    this._quartznetTriton = value;\n  }\n  get wav2vec(): Wav2Vec | undefined {\n    return this._wav2vec;\n  }\n  set wav2vec(value: Wav2Vec | undefined) {\n    this._wav2vec = value;\n  }\n  toObject() {\n    return {\n      type: this.type,\n      quartznet: this.quartznet ? this.quartznet.toObject() : undefined,\n      quartznetTriton: this.quartznetTriton\n        ? this.quartznetTriton.toObject()\n        : undefined,\n      wav2vec: this.wav2vec ? this.wav2vec.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module CtcAcousticModels {}\nexport class Wav2Vec implements GrpcMessage {\n  static toBinary(instance: Wav2Vec) {\n    const writer = new BinaryWriter();\n    Wav2Vec.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Wav2Vec();\n    Wav2Vec.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Wav2Vec) {\n    instance.modelPath = instance.modelPath || '';\n    instance.useGpu = instance.useGpu || false;\n  }\n\n  static fromBinaryReader(instance: Wav2Vec, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.modelPath = reader.readString();\n          break;\n        case 2:\n          instance.useGpu = reader.readBool();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Wav2Vec.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Wav2Vec, writer: BinaryWriter) {\n    if (instance.modelPath) {\n      writer.writeString(1, instance.modelPath);\n    }\n    if (instance.useGpu) {\n      writer.writeBool(2, instance.useGpu);\n    }\n  }\n\n  private _modelPath?: string;\n  private _useGpu?: boolean;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Wav2Vec value\n   */\n  constructor(value?: RecursivePartial<Wav2Vec>) {\n    value = value || {};\n    this.modelPath = value.modelPath;\n    this.useGpu = value.useGpu;\n    Wav2Vec.refineValues(this);\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n  toObject() {\n    return {\n      modelPath: this.modelPath,\n      useGpu: this.useGpu\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Wav2Vec {}\nexport class Quartznet implements GrpcMessage {\n  static toBinary(instance: Quartznet) {\n    const writer = new BinaryWriter();\n    Quartznet.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Quartznet();\n    Quartznet.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Quartznet) {\n    instance.configPath = instance.configPath || '';\n    instance.loadType = instance.loadType || '';\n    instance.ptFiles = instance.ptFiles || undefined;\n    instance.ckptFile = instance.ckptFile || undefined;\n  }\n\n  static fromBinaryReader(instance: Quartznet, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.configPath = reader.readString();\n          break;\n        case 2:\n          instance.loadType = reader.readString();\n          break;\n        case 3:\n          instance.ptFiles = new PtFiles();\n          reader.readMessage(instance.ptFiles, PtFiles.fromBinaryReader);\n          break;\n        case 4:\n          instance.ckptFile = new CkptFile();\n          reader.readMessage(instance.ckptFile, CkptFile.fromBinaryReader);\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Quartznet.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Quartznet, writer: BinaryWriter) {\n    if (instance.configPath) {\n      writer.writeString(1, instance.configPath);\n    }\n    if (instance.loadType) {\n      writer.writeString(2, instance.loadType);\n    }\n    if (instance.ptFiles) {\n      writer.writeMessage(3, instance.ptFiles as any, PtFiles.toBinaryWriter);\n    }\n    if (instance.ckptFile) {\n      writer.writeMessage(4, instance.ckptFile as any, CkptFile.toBinaryWriter);\n    }\n  }\n\n  private _configPath?: string;\n  private _loadType?: string;\n  private _ptFiles?: PtFiles;\n  private _ckptFile?: CkptFile;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Quartznet value\n   */\n  constructor(value?: RecursivePartial<Quartznet>) {\n    value = value || {};\n    this.configPath = value.configPath;\n    this.loadType = value.loadType;\n    this.ptFiles = value.ptFiles ? new PtFiles(value.ptFiles) : undefined;\n    this.ckptFile = value.ckptFile ? new CkptFile(value.ckptFile) : undefined;\n    Quartznet.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get loadType(): string | undefined {\n    return this._loadType;\n  }\n  set loadType(value: string | undefined) {\n    this._loadType = value;\n  }\n  get ptFiles(): PtFiles | undefined {\n    return this._ptFiles;\n  }\n  set ptFiles(value: PtFiles | undefined) {\n    this._ptFiles = value;\n  }\n  get ckptFile(): CkptFile | undefined {\n    return this._ckptFile;\n  }\n  set ckptFile(value: CkptFile | undefined) {\n    this._ckptFile = value;\n  }\n  toObject() {\n    return {\n      configPath: this.configPath,\n      loadType: this.loadType,\n      ptFiles: this.ptFiles ? this.ptFiles.toObject() : undefined,\n      ckptFile: this.ckptFile ? this.ckptFile.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Quartznet {}\nexport class PtFiles implements GrpcMessage {\n  static toBinary(instance: PtFiles) {\n    const writer = new BinaryWriter();\n    PtFiles.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new PtFiles();\n    PtFiles.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: PtFiles) {\n    instance.path = instance.path || '';\n    instance.step = instance.step || '';\n  }\n\n  static fromBinaryReader(instance: PtFiles, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.path = reader.readString();\n          break;\n        case 2:\n          instance.step = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    PtFiles.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: PtFiles, writer: BinaryWriter) {\n    if (instance.path) {\n      writer.writeString(1, instance.path);\n    }\n    if (instance.step) {\n      writer.writeString(2, instance.step);\n    }\n  }\n\n  private _path?: string;\n  private _step?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param PtFiles value\n   */\n  constructor(value?: RecursivePartial<PtFiles>) {\n    value = value || {};\n    this.path = value.path;\n    this.step = value.step;\n    PtFiles.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get step(): string | undefined {\n    return this._step;\n  }\n  set step(value: string | undefined) {\n    this._step = value;\n  }\n  toObject() {\n    return {\n      path: this.path,\n      step: this.step\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module PtFiles {}\nexport class CkptFile implements GrpcMessage {\n  static toBinary(instance: CkptFile) {\n    const writer = new BinaryWriter();\n    CkptFile.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new CkptFile();\n    CkptFile.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: CkptFile) {\n    instance.path = instance.path || '';\n  }\n\n  static fromBinaryReader(instance: CkptFile, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.path = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    CkptFile.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: CkptFile, writer: BinaryWriter) {\n    if (instance.path) {\n      writer.writeString(1, instance.path);\n    }\n  }\n\n  private _path?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param CkptFile value\n   */\n  constructor(value?: RecursivePartial<CkptFile>) {\n    value = value || {};\n    this.path = value.path;\n    CkptFile.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  toObject() {\n    return {\n      path: this.path\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module CkptFile {}\nexport class QuartznetTriton implements GrpcMessage {\n  static toBinary(instance: QuartznetTriton) {\n    const writer = new BinaryWriter();\n    QuartznetTriton.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new QuartznetTriton();\n    QuartznetTriton.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: QuartznetTriton) {\n    instance.configPath = instance.configPath || '';\n    instance.tritonUrl = instance.tritonUrl || '';\n    instance.tritonModel = instance.tritonModel || '';\n  }\n\n  static fromBinaryReader(instance: QuartznetTriton, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.configPath = reader.readString();\n          break;\n        case 2:\n          instance.tritonUrl = reader.readString();\n          break;\n        case 3:\n          instance.tritonModel = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    QuartznetTriton.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: QuartznetTriton, writer: BinaryWriter) {\n    if (instance.configPath) {\n      writer.writeString(1, instance.configPath);\n    }\n    if (instance.tritonUrl) {\n      writer.writeString(2, instance.tritonUrl);\n    }\n    if (instance.tritonModel) {\n      writer.writeString(3, instance.tritonModel);\n    }\n  }\n\n  private _configPath?: string;\n  private _tritonUrl?: string;\n  private _tritonModel?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param QuartznetTriton value\n   */\n  constructor(value?: RecursivePartial<QuartznetTriton>) {\n    value = value || {};\n    this.configPath = value.configPath;\n    this.tritonUrl = value.tritonUrl;\n    this.tritonModel = value.tritonModel;\n    QuartznetTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  get tritonModel(): string | undefined {\n    return this._tritonModel;\n  }\n  set tritonModel(value: string | undefined) {\n    this._tritonModel = value;\n  }\n  toObject() {\n    return {\n      configPath: this.configPath,\n      tritonUrl: this.tritonUrl,\n      tritonModel: this.tritonModel\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module QuartznetTriton {}\nexport class LanguageModel implements GrpcMessage {\n  static toBinary(instance: LanguageModel) {\n    const writer = new BinaryWriter();\n    LanguageModel.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new LanguageModel();\n    LanguageModel.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: LanguageModel) {\n    instance.path = instance.path || '';\n    instance.beamSize = instance.beamSize || '0';\n    instance.beamSearchScorerAlpha = instance.beamSearchScorerAlpha || 0;\n    instance.beamSearchScorerBeta = instance.beamSearchScorerBeta || 0;\n  }\n\n  static fromBinaryReader(instance: LanguageModel, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.path = reader.readString();\n          break;\n        case 2:\n          instance.beamSize = reader.readInt64String();\n          break;\n        case 3:\n          instance.beamSearchScorerAlpha = reader.readFloat();\n          break;\n        case 4:\n          instance.beamSearchScorerBeta = reader.readFloat();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    LanguageModel.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: LanguageModel, writer: BinaryWriter) {\n    if (instance.path) {\n      writer.writeString(1, instance.path);\n    }\n    if (instance.beamSize) {\n      writer.writeInt64String(2, instance.beamSize);\n    }\n    if (instance.beamSearchScorerAlpha) {\n      writer.writeFloat(3, instance.beamSearchScorerAlpha);\n    }\n    if (instance.beamSearchScorerBeta) {\n      writer.writeFloat(4, instance.beamSearchScorerBeta);\n    }\n  }\n\n  private _path?: string;\n  private _beamSize?: string;\n  private _beamSearchScorerAlpha?: number;\n  private _beamSearchScorerBeta?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param LanguageModel value\n   */\n  constructor(value?: RecursivePartial<LanguageModel>) {\n    value = value || {};\n    this.path = value.path;\n    this.beamSize = value.beamSize;\n    this.beamSearchScorerAlpha = value.beamSearchScorerAlpha;\n    this.beamSearchScorerBeta = value.beamSearchScorerBeta;\n    LanguageModel.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get beamSize(): string | undefined {\n    return this._beamSize;\n  }\n  set beamSize(value: string | undefined) {\n    this._beamSize = value;\n  }\n  get beamSearchScorerAlpha(): number | undefined {\n    return this._beamSearchScorerAlpha;\n  }\n  set beamSearchScorerAlpha(value: number | undefined) {\n    this._beamSearchScorerAlpha = value;\n  }\n  get beamSearchScorerBeta(): number | undefined {\n    return this._beamSearchScorerBeta;\n  }\n  set beamSearchScorerBeta(value: number | undefined) {\n    this._beamSearchScorerBeta = value;\n  }\n  toObject() {\n    return {\n      path: this.path,\n      beamSize: this.beamSize,\n      beamSearchScorerAlpha: this.beamSearchScorerAlpha,\n      beamSearchScorerBeta: this.beamSearchScorerBeta\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module LanguageModel {}\nexport class StreamingServer implements GrpcMessage {\n  static toBinary(instance: StreamingServer) {\n    const writer = new BinaryWriter();\n    StreamingServer.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new StreamingServer();\n    StreamingServer.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: StreamingServer) {\n    instance.host = instance.host || '';\n    instance.port = instance.port || '0';\n    instance.outputStyle = instance.outputStyle || '';\n    instance.streamingSpeechRecognition =\n      instance.streamingSpeechRecognition || undefined;\n  }\n\n  static fromBinaryReader(instance: StreamingServer, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.host = reader.readString();\n          break;\n        case 2:\n          instance.port = reader.readInt64String();\n          break;\n        case 3:\n          instance.outputStyle = reader.readString();\n          break;\n        case 4:\n          instance.streamingSpeechRecognition = new StreamingSpeechRecognition();\n          reader.readMessage(\n            instance.streamingSpeechRecognition,\n            StreamingSpeechRecognition.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    StreamingServer.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: StreamingServer, writer: BinaryWriter) {\n    if (instance.host) {\n      writer.writeString(1, instance.host);\n    }\n    if (instance.port) {\n      writer.writeInt64String(2, instance.port);\n    }\n    if (instance.outputStyle) {\n      writer.writeString(3, instance.outputStyle);\n    }\n    if (instance.streamingSpeechRecognition) {\n      writer.writeMessage(\n        4,\n        instance.streamingSpeechRecognition as any,\n        StreamingSpeechRecognition.toBinaryWriter\n      );\n    }\n  }\n\n  private _host?: string;\n  private _port?: string;\n  private _outputStyle?: string;\n  private _streamingSpeechRecognition?: StreamingSpeechRecognition;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param StreamingServer value\n   */\n  constructor(value?: RecursivePartial<StreamingServer>) {\n    value = value || {};\n    this.host = value.host;\n    this.port = value.port;\n    this.outputStyle = value.outputStyle;\n    this.streamingSpeechRecognition = value.streamingSpeechRecognition\n      ? new StreamingSpeechRecognition(value.streamingSpeechRecognition)\n      : undefined;\n    StreamingServer.refineValues(this);\n  }\n  get host(): string | undefined {\n    return this._host;\n  }\n  set host(value: string | undefined) {\n    this._host = value;\n  }\n  get port(): string | undefined {\n    return this._port;\n  }\n  set port(value: string | undefined) {\n    this._port = value;\n  }\n  get outputStyle(): string | undefined {\n    return this._outputStyle;\n  }\n  set outputStyle(value: string | undefined) {\n    this._outputStyle = value;\n  }\n  get streamingSpeechRecognition(): StreamingSpeechRecognition | undefined {\n    return this._streamingSpeechRecognition;\n  }\n  set streamingSpeechRecognition(\n    value: StreamingSpeechRecognition | undefined\n  ) {\n    this._streamingSpeechRecognition = value;\n  }\n  toObject() {\n    return {\n      host: this.host,\n      port: this.port,\n      outputStyle: this.outputStyle,\n      streamingSpeechRecognition: this.streamingSpeechRecognition\n        ? this.streamingSpeechRecognition.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module StreamingServer {}\nexport class StreamingSpeechRecognition implements GrpcMessage {\n  static toBinary(instance: StreamingSpeechRecognition) {\n    const writer = new BinaryWriter();\n    StreamingSpeechRecognition.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new StreamingSpeechRecognition();\n    StreamingSpeechRecognition.fromBinaryReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  static refineValues(instance: StreamingSpeechRecognition) {\n    instance.transcribeNotFinal = instance.transcribeNotFinal || false;\n    instance.ctcDecodingMethod = instance.ctcDecodingMethod || '';\n    instance.samplingRate = instance.samplingRate || '0';\n    instance.minAudioChunkSize = instance.minAudioChunkSize || '0';\n    instance.startOfUtteranceThreshold =\n      instance.startOfUtteranceThreshold || 0;\n    instance.endOfUtteranceThreshold = instance.endOfUtteranceThreshold || 0;\n  }\n\n  static fromBinaryReader(\n    instance: StreamingSpeechRecognition,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.transcribeNotFinal = reader.readBool();\n          break;\n        case 2:\n          instance.ctcDecodingMethod = reader.readString();\n          break;\n        case 3:\n          instance.samplingRate = reader.readInt64String();\n          break;\n        case 4:\n          instance.minAudioChunkSize = reader.readInt64String();\n          break;\n        case 5:\n          instance.startOfUtteranceThreshold = reader.readFloat();\n          break;\n        case 6:\n          instance.endOfUtteranceThreshold = reader.readFloat();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    StreamingSpeechRecognition.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: StreamingSpeechRecognition,\n    writer: BinaryWriter\n  ) {\n    if (instance.transcribeNotFinal) {\n      writer.writeBool(1, instance.transcribeNotFinal);\n    }\n    if (instance.ctcDecodingMethod) {\n      writer.writeString(2, instance.ctcDecodingMethod);\n    }\n    if (instance.samplingRate) {\n      writer.writeInt64String(3, instance.samplingRate);\n    }\n    if (instance.minAudioChunkSize) {\n      writer.writeInt64String(4, instance.minAudioChunkSize);\n    }\n    if (instance.startOfUtteranceThreshold) {\n      writer.writeFloat(5, instance.startOfUtteranceThreshold);\n    }\n    if (instance.endOfUtteranceThreshold) {\n      writer.writeFloat(6, instance.endOfUtteranceThreshold);\n    }\n  }\n\n  private _transcribeNotFinal?: boolean;\n  private _ctcDecodingMethod?: string;\n  private _samplingRate?: string;\n  private _minAudioChunkSize?: string;\n  private _startOfUtteranceThreshold?: number;\n  private _endOfUtteranceThreshold?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param StreamingSpeechRecognition value\n   */\n  constructor(value?: RecursivePartial<StreamingSpeechRecognition>) {\n    value = value || {};\n    this.transcribeNotFinal = value.transcribeNotFinal;\n    this.ctcDecodingMethod = value.ctcDecodingMethod;\n    this.samplingRate = value.samplingRate;\n    this.minAudioChunkSize = value.minAudioChunkSize;\n    this.startOfUtteranceThreshold = value.startOfUtteranceThreshold;\n    this.endOfUtteranceThreshold = value.endOfUtteranceThreshold;\n    StreamingSpeechRecognition.refineValues(this);\n  }\n  get transcribeNotFinal(): boolean | undefined {\n    return this._transcribeNotFinal;\n  }\n  set transcribeNotFinal(value: boolean | undefined) {\n    this._transcribeNotFinal = value;\n  }\n  get ctcDecodingMethod(): string | undefined {\n    return this._ctcDecodingMethod;\n  }\n  set ctcDecodingMethod(value: string | undefined) {\n    this._ctcDecodingMethod = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get minAudioChunkSize(): string | undefined {\n    return this._minAudioChunkSize;\n  }\n  set minAudioChunkSize(value: string | undefined) {\n    this._minAudioChunkSize = value;\n  }\n  get startOfUtteranceThreshold(): number | undefined {\n    return this._startOfUtteranceThreshold;\n  }\n  set startOfUtteranceThreshold(value: number | undefined) {\n    this._startOfUtteranceThreshold = value;\n  }\n  get endOfUtteranceThreshold(): number | undefined {\n    return this._endOfUtteranceThreshold;\n  }\n  set endOfUtteranceThreshold(value: number | undefined) {\n    this._endOfUtteranceThreshold = value;\n  }\n  toObject() {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      ctcDecodingMethod: this.ctcDecodingMethod,\n      samplingRate: this.samplingRate,\n      minAudioChunkSize: this.minAudioChunkSize,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module StreamingSpeechRecognition {}\nexport class VoiceActivityDetection implements GrpcMessage {\n  static toBinary(instance: VoiceActivityDetection) {\n    const writer = new BinaryWriter();\n    VoiceActivityDetection.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new VoiceActivityDetection();\n    VoiceActivityDetection.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: VoiceActivityDetection) {\n    instance.active = instance.active || '';\n    instance.samplingRate = instance.samplingRate || '0';\n    instance.pyannote = instance.pyannote || undefined;\n    instance.matchbox = instance.matchbox || undefined;\n  }\n\n  static fromBinaryReader(\n    instance: VoiceActivityDetection,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.active = reader.readString();\n          break;\n        case 2:\n          instance.samplingRate = reader.readInt64String();\n          break;\n        case 3:\n          instance.pyannote = new Pyannote();\n          reader.readMessage(instance.pyannote, Pyannote.fromBinaryReader);\n          break;\n        case 4:\n          instance.matchbox = new Matchbox();\n          reader.readMessage(instance.matchbox, Matchbox.fromBinaryReader);\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    VoiceActivityDetection.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: VoiceActivityDetection,\n    writer: BinaryWriter\n  ) {\n    if (instance.active) {\n      writer.writeString(1, instance.active);\n    }\n    if (instance.samplingRate) {\n      writer.writeInt64String(2, instance.samplingRate);\n    }\n    if (instance.pyannote) {\n      writer.writeMessage(3, instance.pyannote as any, Pyannote.toBinaryWriter);\n    }\n    if (instance.matchbox) {\n      writer.writeMessage(4, instance.matchbox as any, Matchbox.toBinaryWriter);\n    }\n  }\n\n  private _active?: string;\n  private _samplingRate?: string;\n  private _pyannote?: Pyannote;\n  private _matchbox?: Matchbox;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param VoiceActivityDetection value\n   */\n  constructor(value?: RecursivePartial<VoiceActivityDetection>) {\n    value = value || {};\n    this.active = value.active;\n    this.samplingRate = value.samplingRate;\n    this.pyannote = value.pyannote ? new Pyannote(value.pyannote) : undefined;\n    this.matchbox = value.matchbox ? new Matchbox(value.matchbox) : undefined;\n    VoiceActivityDetection.refineValues(this);\n  }\n  get active(): string | undefined {\n    return this._active;\n  }\n  set active(value: string | undefined) {\n    this._active = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get pyannote(): Pyannote | undefined {\n    return this._pyannote;\n  }\n  set pyannote(value: Pyannote | undefined) {\n    this._pyannote = value;\n  }\n  get matchbox(): Matchbox | undefined {\n    return this._matchbox;\n  }\n  set matchbox(value: Matchbox | undefined) {\n    this._matchbox = value;\n  }\n  toObject() {\n    return {\n      active: this.active,\n      samplingRate: this.samplingRate,\n      pyannote: this.pyannote ? this.pyannote.toObject() : undefined,\n      matchbox: this.matchbox ? this.matchbox.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module VoiceActivityDetection {}\nexport class Pyannote implements GrpcMessage {\n  static toBinary(instance: Pyannote) {\n    const writer = new BinaryWriter();\n    Pyannote.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Pyannote();\n    Pyannote.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Pyannote) {\n    instance.modelPath = instance.modelPath || '';\n    instance.minAudioSize = instance.minAudioSize || '0';\n    instance.offset = instance.offset || 0;\n    instance.onset = instance.onset || 0;\n    instance.logScale = instance.logScale || false;\n    instance.minDurationOff = instance.minDurationOff || 0;\n    instance.minDurationOn = instance.minDurationOn || 0;\n  }\n\n  static fromBinaryReader(instance: Pyannote, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.modelPath = reader.readString();\n          break;\n        case 2:\n          instance.minAudioSize = reader.readInt64String();\n          break;\n        case 3:\n          instance.offset = reader.readFloat();\n          break;\n        case 4:\n          instance.onset = reader.readFloat();\n          break;\n        case 5:\n          instance.logScale = reader.readBool();\n          break;\n        case 6:\n          instance.minDurationOff = reader.readFloat();\n          break;\n        case 7:\n          instance.minDurationOn = reader.readFloat();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Pyannote.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Pyannote, writer: BinaryWriter) {\n    if (instance.modelPath) {\n      writer.writeString(1, instance.modelPath);\n    }\n    if (instance.minAudioSize) {\n      writer.writeInt64String(2, instance.minAudioSize);\n    }\n    if (instance.offset) {\n      writer.writeFloat(3, instance.offset);\n    }\n    if (instance.onset) {\n      writer.writeFloat(4, instance.onset);\n    }\n    if (instance.logScale) {\n      writer.writeBool(5, instance.logScale);\n    }\n    if (instance.minDurationOff) {\n      writer.writeFloat(6, instance.minDurationOff);\n    }\n    if (instance.minDurationOn) {\n      writer.writeFloat(7, instance.minDurationOn);\n    }\n  }\n\n  private _modelPath?: string;\n  private _minAudioSize?: string;\n  private _offset?: number;\n  private _onset?: number;\n  private _logScale?: boolean;\n  private _minDurationOff?: number;\n  private _minDurationOn?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Pyannote value\n   */\n  constructor(value?: RecursivePartial<Pyannote>) {\n    value = value || {};\n    this.modelPath = value.modelPath;\n    this.minAudioSize = value.minAudioSize;\n    this.offset = value.offset;\n    this.onset = value.onset;\n    this.logScale = value.logScale;\n    this.minDurationOff = value.minDurationOff;\n    this.minDurationOn = value.minDurationOn;\n    Pyannote.refineValues(this);\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  get minAudioSize(): string | undefined {\n    return this._minAudioSize;\n  }\n  set minAudioSize(value: string | undefined) {\n    this._minAudioSize = value;\n  }\n  get offset(): number | undefined {\n    return this._offset;\n  }\n  set offset(value: number | undefined) {\n    this._offset = value;\n  }\n  get onset(): number | undefined {\n    return this._onset;\n  }\n  set onset(value: number | undefined) {\n    this._onset = value;\n  }\n  get logScale(): boolean | undefined {\n    return this._logScale;\n  }\n  set logScale(value: boolean | undefined) {\n    this._logScale = value;\n  }\n  get minDurationOff(): number | undefined {\n    return this._minDurationOff;\n  }\n  set minDurationOff(value: number | undefined) {\n    this._minDurationOff = value;\n  }\n  get minDurationOn(): number | undefined {\n    return this._minDurationOn;\n  }\n  set minDurationOn(value: number | undefined) {\n    this._minDurationOn = value;\n  }\n  toObject() {\n    return {\n      modelPath: this.modelPath,\n      minAudioSize: this.minAudioSize,\n      offset: this.offset,\n      onset: this.onset,\n      logScale: this.logScale,\n      minDurationOff: this.minDurationOff,\n      minDurationOn: this.minDurationOn\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Pyannote {}\nexport class Matchbox implements GrpcMessage {\n  static toBinary(instance: Matchbox) {\n    const writer = new BinaryWriter();\n    Matchbox.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Matchbox();\n    Matchbox.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Matchbox) {\n    instance.modelConfig = instance.modelConfig || '';\n    instance.encoderPath = instance.encoderPath || '';\n    instance.decoderPath = instance.decoderPath || '';\n  }\n\n  static fromBinaryReader(instance: Matchbox, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.modelConfig = reader.readString();\n          break;\n        case 2:\n          instance.encoderPath = reader.readString();\n          break;\n        case 3:\n          instance.decoderPath = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Matchbox.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Matchbox, writer: BinaryWriter) {\n    if (instance.modelConfig) {\n      writer.writeString(1, instance.modelConfig);\n    }\n    if (instance.encoderPath) {\n      writer.writeString(2, instance.encoderPath);\n    }\n    if (instance.decoderPath) {\n      writer.writeString(3, instance.decoderPath);\n    }\n  }\n\n  private _modelConfig?: string;\n  private _encoderPath?: string;\n  private _decoderPath?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Matchbox value\n   */\n  constructor(value?: RecursivePartial<Matchbox>) {\n    value = value || {};\n    this.modelConfig = value.modelConfig;\n    this.encoderPath = value.encoderPath;\n    this.decoderPath = value.decoderPath;\n    Matchbox.refineValues(this);\n  }\n  get modelConfig(): string | undefined {\n    return this._modelConfig;\n  }\n  set modelConfig(value: string | undefined) {\n    this._modelConfig = value;\n  }\n  get encoderPath(): string | undefined {\n    return this._encoderPath;\n  }\n  set encoderPath(value: string | undefined) {\n    this._encoderPath = value;\n  }\n  get decoderPath(): string | undefined {\n    return this._decoderPath;\n  }\n  set decoderPath(value: string | undefined) {\n    this._decoderPath = value;\n  }\n  toObject() {\n    return {\n      modelConfig: this.modelConfig,\n      encoderPath: this.encoderPath,\n      decoderPath: this.decoderPath\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Matchbox {}\nexport class PostProcessing implements GrpcMessage {\n  static toBinary(instance: PostProcessing) {\n    const writer = new BinaryWriter();\n    PostProcessing.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new PostProcessing();\n    PostProcessing.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: PostProcessing) {\n    instance.pipeline = instance.pipeline || [];\n    instance.postProcessors = instance.postProcessors || undefined;\n  }\n\n  static fromBinaryReader(instance: PostProcessing, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.pipeline = instance.pipeline || []).push(\n            reader.readString()\n          );\n          break;\n        case 2:\n          instance.postProcessors = new PostProcessors();\n          reader.readMessage(\n            instance.postProcessors,\n            PostProcessors.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    PostProcessing.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: PostProcessing, writer: BinaryWriter) {\n    if (instance.pipeline && instance.pipeline.length) {\n      writer.writeRepeatedString(1, instance.pipeline);\n    }\n    if (instance.postProcessors) {\n      writer.writeMessage(\n        2,\n        instance.postProcessors as any,\n        PostProcessors.toBinaryWriter\n      );\n    }\n  }\n\n  private _pipeline?: string[];\n  private _postProcessors?: PostProcessors;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param PostProcessing value\n   */\n  constructor(value?: RecursivePartial<PostProcessing>) {\n    value = value || {};\n    this.pipeline = (value.pipeline || []).slice();\n    this.postProcessors = value.postProcessors\n      ? new PostProcessors(value.postProcessors)\n      : undefined;\n    PostProcessing.refineValues(this);\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get postProcessors(): PostProcessors | undefined {\n    return this._postProcessors;\n  }\n  set postProcessors(value: PostProcessors | undefined) {\n    this._postProcessors = value;\n  }\n  toObject() {\n    return {\n      pipeline: (this.pipeline || []).slice(),\n      postProcessors: this.postProcessors\n        ? this.postProcessors.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module PostProcessing {}\nexport class PostProcessors implements GrpcMessage {\n  static toBinary(instance: PostProcessors) {\n    const writer = new BinaryWriter();\n    PostProcessors.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new PostProcessors();\n    PostProcessors.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: PostProcessors) {\n    instance.symSpell = instance.symSpell || undefined;\n    instance.normalization = instance.normalization || undefined;\n  }\n\n  static fromBinaryReader(instance: PostProcessors, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.symSpell = new SymSpell();\n          reader.readMessage(instance.symSpell, SymSpell.fromBinaryReader);\n          break;\n        case 2:\n          instance.normalization = new Normalization();\n          reader.readMessage(\n            instance.normalization,\n            Normalization.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    PostProcessors.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: PostProcessors, writer: BinaryWriter) {\n    if (instance.symSpell) {\n      writer.writeMessage(1, instance.symSpell as any, SymSpell.toBinaryWriter);\n    }\n    if (instance.normalization) {\n      writer.writeMessage(\n        2,\n        instance.normalization as any,\n        Normalization.toBinaryWriter\n      );\n    }\n  }\n\n  private _symSpell?: SymSpell;\n  private _normalization?: Normalization;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param PostProcessors value\n   */\n  constructor(value?: RecursivePartial<PostProcessors>) {\n    value = value || {};\n    this.symSpell = value.symSpell ? new SymSpell(value.symSpell) : undefined;\n    this.normalization = value.normalization\n      ? new Normalization(value.normalization)\n      : undefined;\n    PostProcessors.refineValues(this);\n  }\n  get symSpell(): SymSpell | undefined {\n    return this._symSpell;\n  }\n  set symSpell(value: SymSpell | undefined) {\n    this._symSpell = value;\n  }\n  get normalization(): Normalization | undefined {\n    return this._normalization;\n  }\n  set normalization(value: Normalization | undefined) {\n    this._normalization = value;\n  }\n  toObject() {\n    return {\n      symSpell: this.symSpell ? this.symSpell.toObject() : undefined,\n      normalization: this.normalization\n        ? this.normalization.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module PostProcessors {}\nexport class SymSpell implements GrpcMessage {\n  static toBinary(instance: SymSpell) {\n    const writer = new BinaryWriter();\n    SymSpell.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new SymSpell();\n    SymSpell.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: SymSpell) {\n    instance.dictPath = instance.dictPath || '';\n    instance.maxDictionaryEditDistance =\n      instance.maxDictionaryEditDistance || '0';\n    instance.prefixLength = instance.prefixLength || '0';\n  }\n\n  static fromBinaryReader(instance: SymSpell, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.dictPath = reader.readString();\n          break;\n        case 2:\n          instance.maxDictionaryEditDistance = reader.readInt64String();\n          break;\n        case 3:\n          instance.prefixLength = reader.readInt64String();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    SymSpell.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: SymSpell, writer: BinaryWriter) {\n    if (instance.dictPath) {\n      writer.writeString(1, instance.dictPath);\n    }\n    if (instance.maxDictionaryEditDistance) {\n      writer.writeInt64String(2, instance.maxDictionaryEditDistance);\n    }\n    if (instance.prefixLength) {\n      writer.writeInt64String(3, instance.prefixLength);\n    }\n  }\n\n  private _dictPath?: string;\n  private _maxDictionaryEditDistance?: string;\n  private _prefixLength?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param SymSpell value\n   */\n  constructor(value?: RecursivePartial<SymSpell>) {\n    value = value || {};\n    this.dictPath = value.dictPath;\n    this.maxDictionaryEditDistance = value.maxDictionaryEditDistance;\n    this.prefixLength = value.prefixLength;\n    SymSpell.refineValues(this);\n  }\n  get dictPath(): string | undefined {\n    return this._dictPath;\n  }\n  set dictPath(value: string | undefined) {\n    this._dictPath = value;\n  }\n  get maxDictionaryEditDistance(): string | undefined {\n    return this._maxDictionaryEditDistance;\n  }\n  set maxDictionaryEditDistance(value: string | undefined) {\n    this._maxDictionaryEditDistance = value;\n  }\n  get prefixLength(): string | undefined {\n    return this._prefixLength;\n  }\n  set prefixLength(value: string | undefined) {\n    this._prefixLength = value;\n  }\n  toObject() {\n    return {\n      dictPath: this.dictPath,\n      maxDictionaryEditDistance: this.maxDictionaryEditDistance,\n      prefixLength: this.prefixLength\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module SymSpell {}\nexport class Normalization implements GrpcMessage {\n  static toBinary(instance: Normalization) {\n    const writer = new BinaryWriter();\n    Normalization.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Normalization();\n    Normalization.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Normalization) {\n    instance.language = instance.language || '';\n  }\n\n  static fromBinaryReader(instance: Normalization, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.language = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Normalization.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Normalization, writer: BinaryWriter) {\n    if (instance.language) {\n      writer.writeString(1, instance.language);\n    }\n  }\n\n  private _language?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Normalization value\n   */\n  constructor(value?: RecursivePartial<Normalization>) {\n    value = value || {};\n    this.language = value.language;\n    Normalization.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  toObject() {\n    return {\n      language: this.language\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Normalization {}\nexport class Logging implements GrpcMessage {\n  static toBinary(instance: Logging) {\n    const writer = new BinaryWriter();\n    Logging.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Logging();\n    Logging.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Logging) {\n    instance.type = instance.type || '';\n    instance.path = instance.path || '';\n  }\n\n  static fromBinaryReader(instance: Logging, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.type = reader.readString();\n          break;\n        case 2:\n          instance.path = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Logging.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Logging, writer: BinaryWriter) {\n    if (instance.type) {\n      writer.writeString(1, instance.type);\n    }\n    if (instance.path) {\n      writer.writeString(2, instance.path);\n    }\n  }\n\n  private _type?: string;\n  private _path?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Logging value\n   */\n  constructor(value?: RecursivePartial<Logging>) {\n    value = value || {};\n    this.type = value.type;\n    this.path = value.path;\n    Logging.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  toObject() {\n    return {\n      type: this.type,\n      path: this.path\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Logging {}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\nimport { GrpcClientSettings } from '@ngx-grpc/common';\n/*\n  To configure the services you need to provide a configuration for each of them.\n\n  E.g. you can create a module where you configure all of them and then import this module into your AppModule:\n\n  const grpcSettings = { host: environment.grpcHost };\n\n  @NgModule({\n    providers: [\n      { provide: GRPC_SPEECH2_TEXT_CLIENT_SETTINGS, useValue: grpcSettings },\n    ],\n  })\n  export class GrpcConfigModule { }\n*/\nexport const GRPC_SPEECH2_TEXT_CLIENT_SETTINGS = new InjectionToken<\n  GrpcClientSettings\n>('GRPC_SPEECH2_TEXT_CLIENT_SETTINGS');\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { GrpcMessage, RecursivePartial } from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nexport class Empty implements GrpcMessage {\n  static toBinary(instance: Empty) {\n    const writer = new BinaryWriter();\n    Empty.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Empty();\n    Empty.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Empty) {}\n\n  static fromBinaryReader(instance: Empty, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        default:\n          reader.skipField();\n      }\n    }\n\n    Empty.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Empty, writer: BinaryWriter) {}\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Empty value\n   */\n  constructor(value?: RecursivePartial<Empty>) {\n    value = value || {};\n    Empty.refineValues(this);\n  }\n  toObject() {\n    return {};\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Empty {}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcClientSettings,\n  GrpcEvent\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Metadata } from 'grpc-web';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './speech-to-text.pb';\nimport * as googleProtobuf000 from '../../google/protobuf/empty.pb';\nimport { GRPC_SPEECH2_TEXT_CLIENT_SETTINGS } from './speech-to-text.pbconf';\n@Injectable({\n  providedIn: 'root'\n})\nexport class Speech2TextClient {\n  private client: GrpcClient;\n\n  constructor(\n    @Optional()\n    @Inject(GRPC_SPEECH2_TEXT_CLIENT_SETTINGS)\n    settings: GrpcClientSettings,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.s2t.Speech2Text',\n      settings\n    );\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.TranscribeFileRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.TranscribeFileResponse>\n   */\n  transcribeFile(\n    requestData: thisProto.TranscribeFileRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.TranscribeFileResponse> {\n    return this.transcribeFile$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.TranscribeFileRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.TranscribeFileResponse>>\n   */\n  transcribeFile$eventStream(\n    requestData: thisProto.TranscribeFileRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.TranscribeFileResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/TranscribeFile',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.TranscribeFileRequest,\n      responseClass: thisProto.TranscribeFileResponse\n    });\n  }\n\n  /**\n   * Server streaming RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.TranscribeStreamRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.TranscribeStreamResponse>\n   */\n  transcribeStream(\n    requestData: thisProto.TranscribeStreamRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.TranscribeStreamResponse> {\n    return this.transcribeStream$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Server streaming RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.TranscribeStreamRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.TranscribeStreamResponse>>\n   */\n  transcribeStream$eventStream(\n    requestData: thisProto.TranscribeStreamRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.TranscribeStreamResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.serverStream,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/TranscribeStream',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.TranscribeStreamRequest,\n      responseClass: thisProto.TranscribeStreamResponse\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.S2tPipelineId request\n   * @param Metadata metadata\n   * @return Observable<thisProto.Speech2TextConfig>\n   */\n  getS2tPipeline(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.Speech2TextConfig> {\n    return this.getS2tPipeline$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.S2tPipelineId request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.Speech2TextConfig>>\n   */\n  getS2tPipeline$eventStream(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.Speech2TextConfig>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/GetS2tPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.S2tPipelineId,\n      responseClass: thisProto.Speech2TextConfig\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.Speech2TextConfig request\n   * @param Metadata metadata\n   * @return Observable<thisProto.S2tPipelineId>\n   */\n  createS2tPipeline(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.S2tPipelineId> {\n    return this.createS2tPipeline$eventStream(\n      requestData,\n      requestMetadata\n    ).pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.Speech2TextConfig request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.S2tPipelineId>>\n   */\n  createS2tPipeline$eventStream(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.S2tPipelineId>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/CreateS2tPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.Speech2TextConfig,\n      responseClass: thisProto.S2tPipelineId\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.S2tPipelineId request\n   * @param Metadata metadata\n   * @return Observable<googleProtobuf000.Empty>\n   */\n  deleteS2tPipeline(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<googleProtobuf000.Empty> {\n    return this.deleteS2tPipeline$eventStream(\n      requestData,\n      requestMetadata\n    ).pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.S2tPipelineId request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<googleProtobuf000.Empty>>\n   */\n  deleteS2tPipeline$eventStream(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<googleProtobuf000.Empty>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/DeleteS2tPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.S2tPipelineId,\n      responseClass: googleProtobuf000.Empty\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.Speech2TextConfig request\n   * @param Metadata metadata\n   * @return Observable<googleProtobuf000.Empty>\n   */\n  updateS2tPipeline(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<googleProtobuf000.Empty> {\n    return this.updateS2tPipeline$eventStream(\n      requestData,\n      requestMetadata\n    ).pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.Speech2TextConfig request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<googleProtobuf000.Empty>>\n   */\n  updateS2tPipeline$eventStream(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<googleProtobuf000.Empty>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/UpdateS2tPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.Speech2TextConfig,\n      responseClass: googleProtobuf000.Empty\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.ListS2tPipelinesRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.ListS2tPipelinesResponse>\n   */\n  listS2tPipelines(\n    requestData: thisProto.ListS2tPipelinesRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.ListS2tPipelinesResponse> {\n    return this.listS2tPipelines$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.ListS2tPipelinesRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.ListS2tPipelinesResponse>>\n   */\n  listS2tPipelines$eventStream(\n    requestData: thisProto.ListS2tPipelinesRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.ListS2tPipelinesResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/ListS2tPipelines',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.ListS2tPipelinesRequest,\n      responseClass: thisProto.ListS2tPipelinesResponse\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.ListS2tLanguagesRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.ListS2tLanguagesResponse>\n   */\n  listS2tLanguages(\n    requestData: thisProto.ListS2tLanguagesRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.ListS2tLanguagesResponse> {\n    return this.listS2tLanguages$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.ListS2tLanguagesRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.ListS2tLanguagesResponse>>\n   */\n  listS2tLanguages$eventStream(\n    requestData: thisProto.ListS2tLanguagesRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.ListS2tLanguagesResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/ListS2tLanguages',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.ListS2tLanguagesRequest,\n      responseClass: thisProto.ListS2tLanguagesResponse\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.ListS2tDomainsRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.ListS2tDomainsResponse>\n   */\n  listS2tDomains(\n    requestData: thisProto.ListS2tDomainsRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.ListS2tDomainsResponse> {\n    return this.listS2tDomains$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.ListS2tDomainsRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.ListS2tDomainsResponse>>\n   */\n  listS2tDomains$eventStream(\n    requestData: thisProto.ListS2tDomainsRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.ListS2tDomainsResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/ListS2tDomains',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.ListS2tDomainsRequest,\n      responseClass: thisProto.ListS2tDomainsResponse\n    });\n  }\n}\n"]}