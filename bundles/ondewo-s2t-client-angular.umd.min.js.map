{"version":3,"sources":["../../api/ondewo/s2t/speech-to-text.pb.ts","../../api/ondewo/s2t/speech-to-text.pbconf.ts","../../api/ondewo/s2t/speech-to-text.pbsc.ts"],"names":["CTCDecoding","OneofReturnOptionsCase","VoiceActivityDetectionCase","OneofUtteranceDetectionCase","OneofPostProcessingCase","OneofLanguageModelNameCase","TranscribeRequestConfig","GRPC_SPEECH2_TEXT_CLIENT_SETTINGS","InjectionToken","_value","this","_oneofLanguageModelName","none","_oneofPostProcessing","_oneofUtteranceDetection","_voiceActivityDetection","_oneofReturnOptions","s2tPipelineId","ctcDecoding","languageModelName","postProcessing","PostProcessingOptions","undefined","utteranceDetection","UtteranceDetectionOptions","pyannote","Pyannote","matchbox","Matchbox","returnOptions","TranscriptionReturnOptions","refineValues","deserializeBinary","bytes","instance","deserializeBinaryFromReader","BinaryReader","_instance","_reader","nextField","isEndGroup","getFieldNumber","readString","readEnum","readMessage","skipField","serializeBinaryToWriter","_writer","writeString","writeEnum","writeMessage","Object","defineProperty","prototype","_s2tPipelineId","value","_ctcDecoding","_languageModelName","_postProcessing","_utteranceDetection","_pyannote","_matchbox","_returnOptions","serializeBinary","writer","BinaryWriter","getResultBuffer","toObject","toJSON","toProtobufJSON","options","_a","_b","OneofTranscribeNotFinalCase","returnStartOfSpeech","returnAudio","returnAlternativeTranscriptions","returnConfidenceScore","returnWordTiming","readBool","writeBool","_returnStartOfSpeech","_returnAudio","_returnAlternativeTranscriptions","_returnConfidenceScore","_returnWordTiming","id","_oneofTranscribeNotFinal","transcribeNotFinal","startOfUtteranceThreshold","endOfUtteranceThreshold","nextChunkTimeout","readFloat","writeFloat","_transcribeNotFinal","_startOfUtteranceThreshold","_endOfUtteranceThreshold","_nextChunkTimeout","spellingCorrection","normalize","config","PostProcessing","_spellingCorrection","_normalize","_config","TranscribeStreamRequest","audioChunk","endOfStream","Uint8Array","readBytes","length","writeBytes","_audioChunk","_endOfStream","subarray","uint8ArrayToBase64","OneofConfigCase","TranscribeStreamResponse","Transcription","transcription","confidenceScore","_transcription","_confidenceScore","_oneofConfig","transcriptions","map","m","time","final","audio","utteranceStart","audioUuid","messageInitializer1","push","writeRepeatedMessage","_transcriptions","_time","_final","_audio","_utteranceStart","_audioUuid","TranscribeFileRequest","audioFile","_audioFile","TranscribeFileResponse","wordTiming","WordTiming","messageInitializer3","_wordTiming","word","begin","end","readInt32","writeInt32","_word","_begin","_end","S2tPipelineId","_id","ListS2tPipelinesRequest","languages","slice","pipelineOwners","domains","writeRepeatedString","_languages","_pipelineOwners","_domains","ListS2tPipelinesResponse","pipelineConfigs","Speech2TextConfig","_pipelineConfigs","ListS2tLanguagesRequest","ListS2tLanguagesResponse","ListS2tDomainsRequest","ListS2tDomainsResponse","GetServiceInfoResponse","version","_version","description","Description","active","inference","Inference","streamingServer","StreamingServer","voiceActivityDetection","VoiceActivityDetection","logging","Logging","_description","_active","_inference","_streamingServer","_logging","language","pipelineOwner","domain","comments","_language","_pipelineOwner","_domain","_comments","ctcAcousticModels","CtcAcousticModels","languageModels","LanguageModels","_ctcAcousticModels","_languageModels","type","quartznet","Quartznet","quartznetTriton","QuartznetTriton","wav2vec","Wav2Vec","_type","_quartznet","_quartznetTriton","_wav2vec","modelPath","useGpu","_modelPath","_useGpu","configPath","loadType","ptFiles","PtFiles","ckptFile","CkptFile","_configPath","_loadType","_ptFiles","_ckptFile","path","step","_path","_step","tritonUrl","tritonModel","_tritonUrl","_tritonModel","beamSize","defaultLm","beamSearchScorerAlpha","beamSearchScorerBeta","readInt64String","writeInt64String","_beamSize","_defaultLm","_beamSearchScorerAlpha","_beamSearchScorerBeta","host","port","outputStyle","streamingSpeechRecognition","StreamingSpeechRecognition","_host","_port","_outputStyle","_streamingSpeechRecognition","ctcDecodingMethod","samplingRate","minAudioChunkSize","_ctcDecodingMethod","_samplingRate","_minAudioChunkSize","OneofLogScaleCase","_oneofLogScale","minAudioSize","offset","onset","logScale","minDurationOff","minDurationOn","_minAudioSize","_offset","_onset","_logScale","_minDurationOff","_minDurationOn","modelConfig","encoderPath","decoderPath","_modelConfig","_encoderPath","_decoderPath","pipeline","postProcessors","PostProcessors","_pipeline","_postProcessors","symSpell","SymSpell","normalization","Normalization","_symSpell","_normalization","dictPath","maxDictionaryEditDistance","prefixLength","_dictPath","_maxDictionaryEditDistance","_prefixLength","ListS2tLanguageModelsRequest","ids","_ids","LanguageModelPipelineId","pipelineId","modelNames","_pipelineId","_modelNames","ListS2tLanguageModelsResponse","lmPipelineIds","_lmPipelineIds","Speech2TextClient","settings","clientFactory","handler","_this","$raw","transcribeFile","requestData","requestMetadata","GrpcMetadata","handle","GrpcCallType","unary","client","requestClass","thisProto.TranscribeFileRequest","responseClass","thisProto.TranscribeFileResponse","transcribeStream","serverStream","thisProto.TranscribeStreamRequest","thisProto.TranscribeStreamResponse","getS2tPipeline","thisProto.S2tPipelineId","thisProto.Speech2TextConfig","createS2tPipeline","deleteS2tPipeline","googleProtobuf000.Empty","updateS2tPipeline","listS2tPipelines","thisProto.ListS2tPipelinesRequest","thisProto.ListS2tPipelinesResponse","listS2tLanguages","thisProto.ListS2tLanguagesRequest","thisProto.ListS2tLanguagesResponse","listS2tDomains","thisProto.ListS2tDomainsRequest","thisProto.ListS2tDomainsResponse","getServiceInfo","thisProto.GetServiceInfoResponse","listS2tLanguageModels","thisProto.ListS2tLanguageModelsRequest","thisProto.ListS2tLanguageModelsResponse","createClient","pipe","throwStatusErrors","takeMessages","Injectable","args","providedIn","Optional","Inject","GRPC_CLIENT_FACTORY","GrpcHandler"],"mappings":"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","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n  uint8ArrayToBase64\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nexport enum CTCDecoding {\n  DEFAULT = 0,\n  GREEDY = 1,\n  BEAM_SEARCH_WITH_LM = 2\n}\n/**\n * Message implementation for ondewo.s2t.TranscribeRequestConfig\n */\nexport class TranscribeRequestConfig implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeRequestConfig';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeRequestConfig();\n    TranscribeRequestConfig.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeRequestConfig) {\n    _instance.s2tPipelineId = _instance.s2tPipelineId || '';\n    _instance.ctcDecoding = _instance.ctcDecoding || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeRequestConfig,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.s2tPipelineId = _reader.readString();\n          break;\n        case 2:\n          _instance.ctcDecoding = _reader.readEnum();\n          break;\n        case 3:\n          _instance.languageModelName = _reader.readString();\n          break;\n        case 4:\n          _instance.postProcessing = new PostProcessingOptions();\n          _reader.readMessage(\n            _instance.postProcessing,\n            PostProcessingOptions.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.utteranceDetection = new UtteranceDetectionOptions();\n          _reader.readMessage(\n            _instance.utteranceDetection,\n            UtteranceDetectionOptions.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.pyannote = new Pyannote();\n          _reader.readMessage(\n            _instance.pyannote,\n            Pyannote.deserializeBinaryFromReader\n          );\n          break;\n        case 7:\n          _instance.matchbox = new Matchbox();\n          _reader.readMessage(\n            _instance.matchbox,\n            Matchbox.deserializeBinaryFromReader\n          );\n          break;\n        case 8:\n          _instance.returnOptions = new TranscriptionReturnOptions();\n          _reader.readMessage(\n            _instance.returnOptions,\n            TranscriptionReturnOptions.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeRequestConfig.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeRequestConfig,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.s2tPipelineId) {\n      _writer.writeString(1, _instance.s2tPipelineId);\n    }\n    if (_instance.ctcDecoding) {\n      _writer.writeEnum(2, _instance.ctcDecoding);\n    }\n    if (_instance.languageModelName || _instance.languageModelName === '') {\n      _writer.writeString(3, _instance.languageModelName);\n    }\n    if (_instance.postProcessing) {\n      _writer.writeMessage(\n        4,\n        _instance.postProcessing as any,\n        PostProcessingOptions.serializeBinaryToWriter\n      );\n    }\n    if (_instance.utteranceDetection) {\n      _writer.writeMessage(\n        5,\n        _instance.utteranceDetection as any,\n        UtteranceDetectionOptions.serializeBinaryToWriter\n      );\n    }\n    if (_instance.pyannote) {\n      _writer.writeMessage(\n        6,\n        _instance.pyannote as any,\n        Pyannote.serializeBinaryToWriter\n      );\n    }\n    if (_instance.matchbox) {\n      _writer.writeMessage(\n        7,\n        _instance.matchbox as any,\n        Matchbox.serializeBinaryToWriter\n      );\n    }\n    if (_instance.returnOptions) {\n      _writer.writeMessage(\n        8,\n        _instance.returnOptions as any,\n        TranscriptionReturnOptions.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _s2tPipelineId?: string;\n  private _ctcDecoding?: CTCDecoding;\n  private _languageModelName?: string;\n  private _postProcessing?: PostProcessingOptions;\n  private _utteranceDetection?: UtteranceDetectionOptions;\n  private _pyannote?: Pyannote;\n  private _matchbox?: Matchbox;\n  private _returnOptions?: TranscriptionReturnOptions;\n\n  private _oneofLanguageModelName: TranscribeRequestConfig.OneofLanguageModelNameCase =\n    TranscribeRequestConfig.OneofLanguageModelNameCase.none;\n  private _oneofPostProcessing: TranscribeRequestConfig.OneofPostProcessingCase =\n    TranscribeRequestConfig.OneofPostProcessingCase.none;\n  private _oneofUtteranceDetection: TranscribeRequestConfig.OneofUtteranceDetectionCase =\n    TranscribeRequestConfig.OneofUtteranceDetectionCase.none;\n  private _voiceActivityDetection: TranscribeRequestConfig.VoiceActivityDetectionCase =\n    TranscribeRequestConfig.VoiceActivityDetectionCase.none;\n  private _oneofReturnOptions: TranscribeRequestConfig.OneofReturnOptionsCase =\n    TranscribeRequestConfig.OneofReturnOptionsCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeRequestConfig to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeRequestConfig.AsObject>) {\n    _value = _value || {};\n    this.s2tPipelineId = _value.s2tPipelineId;\n    this.ctcDecoding = _value.ctcDecoding;\n    this.languageModelName = _value.languageModelName;\n    this.postProcessing = _value.postProcessing\n      ? new PostProcessingOptions(_value.postProcessing)\n      : undefined;\n    this.utteranceDetection = _value.utteranceDetection\n      ? new UtteranceDetectionOptions(_value.utteranceDetection)\n      : undefined;\n    this.pyannote = _value.pyannote ? new Pyannote(_value.pyannote) : undefined;\n    this.matchbox = _value.matchbox ? new Matchbox(_value.matchbox) : undefined;\n    this.returnOptions = _value.returnOptions\n      ? new TranscriptionReturnOptions(_value.returnOptions)\n      : undefined;\n    TranscribeRequestConfig.refineValues(this);\n  }\n  get s2tPipelineId(): string | undefined {\n    return this._s2tPipelineId;\n  }\n  set s2tPipelineId(value: string | undefined) {\n    this._s2tPipelineId = value;\n  }\n  get ctcDecoding(): CTCDecoding | undefined {\n    return this._ctcDecoding;\n  }\n  set ctcDecoding(value: CTCDecoding | undefined) {\n    this._ctcDecoding = value;\n  }\n  get languageModelName(): string | undefined {\n    return this._languageModelName;\n  }\n  set languageModelName(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofLanguageModelName =\n        TranscribeRequestConfig.OneofLanguageModelNameCase.languageModelName;\n    }\n    this._languageModelName = value;\n  }\n  get postProcessing(): PostProcessingOptions | undefined {\n    return this._postProcessing;\n  }\n  set postProcessing(value: PostProcessingOptions | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofPostProcessing =\n        TranscribeRequestConfig.OneofPostProcessingCase.postProcessing;\n    }\n    this._postProcessing = value;\n  }\n  get utteranceDetection(): UtteranceDetectionOptions | undefined {\n    return this._utteranceDetection;\n  }\n  set utteranceDetection(value: UtteranceDetectionOptions | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofUtteranceDetection =\n        TranscribeRequestConfig.OneofUtteranceDetectionCase.utteranceDetection;\n    }\n    this._utteranceDetection = value;\n  }\n  get pyannote(): Pyannote | undefined {\n    return this._pyannote;\n  }\n  set pyannote(value: Pyannote | undefined) {\n    if (value !== undefined && value !== null) {\n      this._matchbox = undefined;\n      this._voiceActivityDetection =\n        TranscribeRequestConfig.VoiceActivityDetectionCase.pyannote;\n    }\n    this._pyannote = value;\n  }\n  get matchbox(): Matchbox | undefined {\n    return this._matchbox;\n  }\n  set matchbox(value: Matchbox | undefined) {\n    if (value !== undefined && value !== null) {\n      this._pyannote = undefined;\n      this._voiceActivityDetection =\n        TranscribeRequestConfig.VoiceActivityDetectionCase.matchbox;\n    }\n    this._matchbox = value;\n  }\n  get returnOptions(): TranscriptionReturnOptions | undefined {\n    return this._returnOptions;\n  }\n  set returnOptions(value: TranscriptionReturnOptions | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofReturnOptions =\n        TranscribeRequestConfig.OneofReturnOptionsCase.returnOptions;\n    }\n    this._returnOptions = value;\n  }\n  get oneofLanguageModelName() {\n    return this._oneofLanguageModelName;\n  }\n  get oneofPostProcessing() {\n    return this._oneofPostProcessing;\n  }\n  get oneofUtteranceDetection() {\n    return this._oneofUtteranceDetection;\n  }\n  get voiceActivityDetection() {\n    return this._voiceActivityDetection;\n  }\n  get oneofReturnOptions() {\n    return this._oneofReturnOptions;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeRequestConfig.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeRequestConfig.AsObject {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      ctcDecoding: this.ctcDecoding,\n      languageModelName: this.languageModelName,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toObject()\n        : undefined,\n      utteranceDetection: this.utteranceDetection\n        ? this.utteranceDetection.toObject()\n        : undefined,\n      pyannote: this.pyannote ? this.pyannote.toObject() : undefined,\n      matchbox: this.matchbox ? this.matchbox.toObject() : undefined,\n      returnOptions: this.returnOptions\n        ? this.returnOptions.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeRequestConfig.AsProtobufJSON {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      ctcDecoding: CTCDecoding[this.ctcDecoding ?? 0],\n      languageModelName: this.languageModelName ?? null,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toProtobufJSON(options)\n        : null,\n      utteranceDetection: this.utteranceDetection\n        ? this.utteranceDetection.toProtobufJSON(options)\n        : null,\n      pyannote: this.pyannote ? this.pyannote.toProtobufJSON(options) : null,\n      matchbox: this.matchbox ? this.matchbox.toProtobufJSON(options) : null,\n      returnOptions: this.returnOptions\n        ? this.returnOptions.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module TranscribeRequestConfig {\n  /**\n   * Standard JavaScript object representation for TranscribeRequestConfig\n   */\n  export interface AsObject {\n    s2tPipelineId?: string;\n    ctcDecoding?: CTCDecoding;\n    languageModelName?: string;\n    postProcessing?: PostProcessingOptions.AsObject;\n    utteranceDetection?: UtteranceDetectionOptions.AsObject;\n    pyannote?: Pyannote.AsObject;\n    matchbox?: Matchbox.AsObject;\n    returnOptions?: TranscriptionReturnOptions.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeRequestConfig\n   */\n  export interface AsProtobufJSON {\n    s2tPipelineId?: string;\n    ctcDecoding?: string;\n    languageModelName?: string | null;\n    postProcessing?: PostProcessingOptions.AsProtobufJSON | null;\n    utteranceDetection?: UtteranceDetectionOptions.AsProtobufJSON | null;\n    pyannote?: Pyannote.AsProtobufJSON | null;\n    matchbox?: Matchbox.AsProtobufJSON | null;\n    returnOptions?: TranscriptionReturnOptions.AsProtobufJSON | null;\n  }\n  export enum OneofLanguageModelNameCase {\n    none = 0,\n    languageModelName = 1\n  }\n  export enum OneofPostProcessingCase {\n    none = 0,\n    postProcessing = 1\n  }\n  export enum OneofUtteranceDetectionCase {\n    none = 0,\n    utteranceDetection = 1\n  }\n  export enum VoiceActivityDetectionCase {\n    none = 0,\n    pyannote = 1,\n    matchbox = 2\n  }\n  export enum OneofReturnOptionsCase {\n    none = 0,\n    returnOptions = 1\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscriptionReturnOptions\n */\nexport class TranscriptionReturnOptions implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscriptionReturnOptions';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscriptionReturnOptions();\n    TranscriptionReturnOptions.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscriptionReturnOptions) {\n    _instance.returnStartOfSpeech = _instance.returnStartOfSpeech || false;\n    _instance.returnAudio = _instance.returnAudio || false;\n    _instance.returnAlternativeTranscriptions =\n      _instance.returnAlternativeTranscriptions || false;\n    _instance.returnConfidenceScore = _instance.returnConfidenceScore || false;\n    _instance.returnWordTiming = _instance.returnWordTiming || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscriptionReturnOptions,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.returnStartOfSpeech = _reader.readBool();\n          break;\n        case 2:\n          _instance.returnAudio = _reader.readBool();\n          break;\n        case 3:\n          _instance.returnAlternativeTranscriptions = _reader.readBool();\n          break;\n        case 4:\n          _instance.returnConfidenceScore = _reader.readBool();\n          break;\n        case 8:\n          _instance.returnWordTiming = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscriptionReturnOptions.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscriptionReturnOptions,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.returnStartOfSpeech) {\n      _writer.writeBool(1, _instance.returnStartOfSpeech);\n    }\n    if (_instance.returnAudio) {\n      _writer.writeBool(2, _instance.returnAudio);\n    }\n    if (_instance.returnAlternativeTranscriptions) {\n      _writer.writeBool(3, _instance.returnAlternativeTranscriptions);\n    }\n    if (_instance.returnConfidenceScore) {\n      _writer.writeBool(4, _instance.returnConfidenceScore);\n    }\n    if (_instance.returnWordTiming) {\n      _writer.writeBool(8, _instance.returnWordTiming);\n    }\n  }\n\n  private _returnStartOfSpeech?: boolean;\n  private _returnAudio?: boolean;\n  private _returnAlternativeTranscriptions?: boolean;\n  private _returnConfidenceScore?: boolean;\n  private _returnWordTiming?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscriptionReturnOptions to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscriptionReturnOptions.AsObject>) {\n    _value = _value || {};\n    this.returnStartOfSpeech = _value.returnStartOfSpeech;\n    this.returnAudio = _value.returnAudio;\n    this.returnAlternativeTranscriptions =\n      _value.returnAlternativeTranscriptions;\n    this.returnConfidenceScore = _value.returnConfidenceScore;\n    this.returnWordTiming = _value.returnWordTiming;\n    TranscriptionReturnOptions.refineValues(this);\n  }\n  get returnStartOfSpeech(): boolean | undefined {\n    return this._returnStartOfSpeech;\n  }\n  set returnStartOfSpeech(value: boolean | undefined) {\n    this._returnStartOfSpeech = value;\n  }\n  get returnAudio(): boolean | undefined {\n    return this._returnAudio;\n  }\n  set returnAudio(value: boolean | undefined) {\n    this._returnAudio = value;\n  }\n  get returnAlternativeTranscriptions(): boolean | undefined {\n    return this._returnAlternativeTranscriptions;\n  }\n  set returnAlternativeTranscriptions(value: boolean | undefined) {\n    this._returnAlternativeTranscriptions = value;\n  }\n  get returnConfidenceScore(): boolean | undefined {\n    return this._returnConfidenceScore;\n  }\n  set returnConfidenceScore(value: boolean | undefined) {\n    this._returnConfidenceScore = value;\n  }\n  get returnWordTiming(): boolean | undefined {\n    return this._returnWordTiming;\n  }\n  set returnWordTiming(value: boolean | undefined) {\n    this._returnWordTiming = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscriptionReturnOptions.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscriptionReturnOptions.AsObject {\n    return {\n      returnStartOfSpeech: this.returnStartOfSpeech,\n      returnAudio: this.returnAudio,\n      returnAlternativeTranscriptions: this.returnAlternativeTranscriptions,\n      returnConfidenceScore: this.returnConfidenceScore,\n      returnWordTiming: this.returnWordTiming\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscriptionReturnOptions.AsProtobufJSON {\n    return {\n      returnStartOfSpeech: this.returnStartOfSpeech,\n      returnAudio: this.returnAudio,\n      returnAlternativeTranscriptions: this.returnAlternativeTranscriptions,\n      returnConfidenceScore: this.returnConfidenceScore,\n      returnWordTiming: this.returnWordTiming\n    };\n  }\n}\nexport module TranscriptionReturnOptions {\n  /**\n   * Standard JavaScript object representation for TranscriptionReturnOptions\n   */\n  export interface AsObject {\n    returnStartOfSpeech?: boolean;\n    returnAudio?: boolean;\n    returnAlternativeTranscriptions?: boolean;\n    returnConfidenceScore?: boolean;\n    returnWordTiming?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscriptionReturnOptions\n   */\n  export interface AsProtobufJSON {\n    returnStartOfSpeech?: boolean;\n    returnAudio?: boolean;\n    returnAlternativeTranscriptions?: boolean;\n    returnConfidenceScore?: boolean;\n    returnWordTiming?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.UtteranceDetectionOptions\n */\nexport class UtteranceDetectionOptions implements GrpcMessage {\n  static id = 'ondewo.s2t.UtteranceDetectionOptions';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new UtteranceDetectionOptions();\n    UtteranceDetectionOptions.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: UtteranceDetectionOptions) {\n    _instance.startOfUtteranceThreshold =\n      _instance.startOfUtteranceThreshold || 0;\n    _instance.endOfUtteranceThreshold = _instance.endOfUtteranceThreshold || 0;\n    _instance.nextChunkTimeout = _instance.nextChunkTimeout || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: UtteranceDetectionOptions,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.transcribeNotFinal = _reader.readBool();\n          break;\n        case 2:\n          _instance.startOfUtteranceThreshold = _reader.readFloat();\n          break;\n        case 3:\n          _instance.endOfUtteranceThreshold = _reader.readFloat();\n          break;\n        case 4:\n          _instance.nextChunkTimeout = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    UtteranceDetectionOptions.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: UtteranceDetectionOptions,\n    _writer: BinaryWriter\n  ) {\n    if (\n      _instance.transcribeNotFinal ||\n      _instance.transcribeNotFinal === false\n    ) {\n      _writer.writeBool(1, _instance.transcribeNotFinal);\n    }\n    if (_instance.startOfUtteranceThreshold) {\n      _writer.writeFloat(2, _instance.startOfUtteranceThreshold);\n    }\n    if (_instance.endOfUtteranceThreshold) {\n      _writer.writeFloat(3, _instance.endOfUtteranceThreshold);\n    }\n    if (_instance.nextChunkTimeout) {\n      _writer.writeFloat(4, _instance.nextChunkTimeout);\n    }\n  }\n\n  private _transcribeNotFinal?: boolean;\n  private _startOfUtteranceThreshold?: number;\n  private _endOfUtteranceThreshold?: number;\n  private _nextChunkTimeout?: number;\n\n  private _oneofTranscribeNotFinal: UtteranceDetectionOptions.OneofTranscribeNotFinalCase =\n    UtteranceDetectionOptions.OneofTranscribeNotFinalCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of UtteranceDetectionOptions to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<UtteranceDetectionOptions.AsObject>) {\n    _value = _value || {};\n    this.transcribeNotFinal = _value.transcribeNotFinal;\n    this.startOfUtteranceThreshold = _value.startOfUtteranceThreshold;\n    this.endOfUtteranceThreshold = _value.endOfUtteranceThreshold;\n    this.nextChunkTimeout = _value.nextChunkTimeout;\n    UtteranceDetectionOptions.refineValues(this);\n  }\n  get transcribeNotFinal(): boolean | undefined {\n    return this._transcribeNotFinal;\n  }\n  set transcribeNotFinal(value: boolean | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofTranscribeNotFinal =\n        UtteranceDetectionOptions.OneofTranscribeNotFinalCase.transcribeNotFinal;\n    }\n    this._transcribeNotFinal = value;\n  }\n  get startOfUtteranceThreshold(): number | undefined {\n    return this._startOfUtteranceThreshold;\n  }\n  set startOfUtteranceThreshold(value: number | undefined) {\n    this._startOfUtteranceThreshold = value;\n  }\n  get endOfUtteranceThreshold(): number | undefined {\n    return this._endOfUtteranceThreshold;\n  }\n  set endOfUtteranceThreshold(value: number | undefined) {\n    this._endOfUtteranceThreshold = value;\n  }\n  get nextChunkTimeout(): number | undefined {\n    return this._nextChunkTimeout;\n  }\n  set nextChunkTimeout(value: number | undefined) {\n    this._nextChunkTimeout = value;\n  }\n  get oneofTranscribeNotFinal() {\n    return this._oneofTranscribeNotFinal;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    UtteranceDetectionOptions.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): UtteranceDetectionOptions.AsObject {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold,\n      nextChunkTimeout: this.nextChunkTimeout\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): UtteranceDetectionOptions.AsProtobufJSON {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold,\n      nextChunkTimeout: this.nextChunkTimeout\n    };\n  }\n}\nexport module UtteranceDetectionOptions {\n  /**\n   * Standard JavaScript object representation for UtteranceDetectionOptions\n   */\n  export interface AsObject {\n    transcribeNotFinal?: boolean;\n    startOfUtteranceThreshold?: number;\n    endOfUtteranceThreshold?: number;\n    nextChunkTimeout?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for UtteranceDetectionOptions\n   */\n  export interface AsProtobufJSON {\n    transcribeNotFinal?: boolean;\n    startOfUtteranceThreshold?: number;\n    endOfUtteranceThreshold?: number;\n    nextChunkTimeout?: number;\n  }\n  export enum OneofTranscribeNotFinalCase {\n    none = 0,\n    transcribeNotFinal = 1\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PostProcessingOptions\n */\nexport class PostProcessingOptions implements GrpcMessage {\n  static id = 'ondewo.s2t.PostProcessingOptions';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PostProcessingOptions();\n    PostProcessingOptions.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PostProcessingOptions) {\n    _instance.spellingCorrection = _instance.spellingCorrection || false;\n    _instance.normalize = _instance.normalize || false;\n    _instance.config = _instance.config || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PostProcessingOptions,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.spellingCorrection = _reader.readBool();\n          break;\n        case 2:\n          _instance.normalize = _reader.readBool();\n          break;\n        case 3:\n          _instance.config = new PostProcessing();\n          _reader.readMessage(\n            _instance.config,\n            PostProcessing.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PostProcessingOptions.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PostProcessingOptions,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.spellingCorrection) {\n      _writer.writeBool(1, _instance.spellingCorrection);\n    }\n    if (_instance.normalize) {\n      _writer.writeBool(2, _instance.normalize);\n    }\n    if (_instance.config) {\n      _writer.writeMessage(\n        3,\n        _instance.config as any,\n        PostProcessing.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _spellingCorrection?: boolean;\n  private _normalize?: boolean;\n  private _config?: PostProcessing;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PostProcessingOptions to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PostProcessingOptions.AsObject>) {\n    _value = _value || {};\n    this.spellingCorrection = _value.spellingCorrection;\n    this.normalize = _value.normalize;\n    this.config = _value.config ? new PostProcessing(_value.config) : undefined;\n    PostProcessingOptions.refineValues(this);\n  }\n  get spellingCorrection(): boolean | undefined {\n    return this._spellingCorrection;\n  }\n  set spellingCorrection(value: boolean | undefined) {\n    this._spellingCorrection = value;\n  }\n  get normalize(): boolean | undefined {\n    return this._normalize;\n  }\n  set normalize(value: boolean | undefined) {\n    this._normalize = value;\n  }\n  get config(): PostProcessing | undefined {\n    return this._config;\n  }\n  set config(value: PostProcessing | undefined) {\n    this._config = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PostProcessingOptions.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PostProcessingOptions.AsObject {\n    return {\n      spellingCorrection: this.spellingCorrection,\n      normalize: this.normalize,\n      config: this.config ? this.config.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PostProcessingOptions.AsProtobufJSON {\n    return {\n      spellingCorrection: this.spellingCorrection,\n      normalize: this.normalize,\n      config: this.config ? this.config.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module PostProcessingOptions {\n  /**\n   * Standard JavaScript object representation for PostProcessingOptions\n   */\n  export interface AsObject {\n    spellingCorrection?: boolean;\n    normalize?: boolean;\n    config?: PostProcessing.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for PostProcessingOptions\n   */\n  export interface AsProtobufJSON {\n    spellingCorrection?: boolean;\n    normalize?: boolean;\n    config?: PostProcessing.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeStreamRequest\n */\nexport class TranscribeStreamRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeStreamRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeStreamRequest();\n    TranscribeStreamRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeStreamRequest) {\n    _instance.audioChunk = _instance.audioChunk || new Uint8Array();\n    _instance.endOfStream = _instance.endOfStream || false;\n    _instance.config = _instance.config || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeStreamRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.audioChunk = _reader.readBytes();\n          break;\n        case 2:\n          _instance.endOfStream = _reader.readBool();\n          break;\n        case 3:\n          _instance.config = new TranscribeRequestConfig();\n          _reader.readMessage(\n            _instance.config,\n            TranscribeRequestConfig.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeStreamRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeStreamRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.audioChunk && _instance.audioChunk.length) {\n      _writer.writeBytes(1, _instance.audioChunk);\n    }\n    if (_instance.endOfStream) {\n      _writer.writeBool(2, _instance.endOfStream);\n    }\n    if (_instance.config) {\n      _writer.writeMessage(\n        3,\n        _instance.config as any,\n        TranscribeRequestConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _audioChunk?: Uint8Array;\n  private _endOfStream?: boolean;\n  private _config?: TranscribeRequestConfig;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeStreamRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeStreamRequest.AsObject>) {\n    _value = _value || {};\n    this.audioChunk = _value.audioChunk;\n    this.endOfStream = _value.endOfStream;\n    this.config = _value.config\n      ? new TranscribeRequestConfig(_value.config)\n      : undefined;\n    TranscribeStreamRequest.refineValues(this);\n  }\n  get audioChunk(): Uint8Array | undefined {\n    return this._audioChunk;\n  }\n  set audioChunk(value: Uint8Array | undefined) {\n    this._audioChunk = value;\n  }\n  get endOfStream(): boolean | undefined {\n    return this._endOfStream;\n  }\n  set endOfStream(value: boolean | undefined) {\n    this._endOfStream = value;\n  }\n  get config(): TranscribeRequestConfig | undefined {\n    return this._config;\n  }\n  set config(value: TranscribeRequestConfig | undefined) {\n    this._config = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeStreamRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeStreamRequest.AsObject {\n    return {\n      audioChunk: this.audioChunk\n        ? this.audioChunk.subarray(0)\n        : new Uint8Array(),\n      endOfStream: this.endOfStream,\n      config: this.config ? this.config.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeStreamRequest.AsProtobufJSON {\n    return {\n      audioChunk: this.audioChunk ? uint8ArrayToBase64(this.audioChunk) : '',\n      endOfStream: this.endOfStream,\n      config: this.config ? this.config.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module TranscribeStreamRequest {\n  /**\n   * Standard JavaScript object representation for TranscribeStreamRequest\n   */\n  export interface AsObject {\n    audioChunk?: Uint8Array;\n    endOfStream?: boolean;\n    config?: TranscribeRequestConfig.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeStreamRequest\n   */\n  export interface AsProtobufJSON {\n    audioChunk?: string;\n    endOfStream?: boolean;\n    config?: TranscribeRequestConfig.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Transcription\n */\nexport class Transcription implements GrpcMessage {\n  static id = 'ondewo.s2t.Transcription';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Transcription();\n    Transcription.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Transcription) {\n    _instance.transcription = _instance.transcription || '';\n    _instance.confidenceScore = _instance.confidenceScore || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Transcription,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.transcription = _reader.readString();\n          break;\n        case 2:\n          _instance.confidenceScore = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Transcription.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Transcription,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcription) {\n      _writer.writeString(1, _instance.transcription);\n    }\n    if (_instance.confidenceScore) {\n      _writer.writeFloat(2, _instance.confidenceScore);\n    }\n  }\n\n  private _transcription?: string;\n  private _confidenceScore?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Transcription to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Transcription.AsObject>) {\n    _value = _value || {};\n    this.transcription = _value.transcription;\n    this.confidenceScore = _value.confidenceScore;\n    Transcription.refineValues(this);\n  }\n  get transcription(): string | undefined {\n    return this._transcription;\n  }\n  set transcription(value: string | undefined) {\n    this._transcription = value;\n  }\n  get confidenceScore(): number | undefined {\n    return this._confidenceScore;\n  }\n  set confidenceScore(value: number | undefined) {\n    this._confidenceScore = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Transcription.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Transcription.AsObject {\n    return {\n      transcription: this.transcription,\n      confidenceScore: this.confidenceScore\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Transcription.AsProtobufJSON {\n    return {\n      transcription: this.transcription,\n      confidenceScore: this.confidenceScore\n    };\n  }\n}\nexport module Transcription {\n  /**\n   * Standard JavaScript object representation for Transcription\n   */\n  export interface AsObject {\n    transcription?: string;\n    confidenceScore?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Transcription\n   */\n  export interface AsProtobufJSON {\n    transcription?: string;\n    confidenceScore?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeStreamResponse\n */\nexport class TranscribeStreamResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeStreamResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeStreamResponse();\n    TranscribeStreamResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeStreamResponse) {\n    _instance.transcriptions = _instance.transcriptions || [];\n    _instance.time = _instance.time || 0;\n    _instance.final = _instance.final || false;\n    _instance.returnAudio = _instance.returnAudio || false;\n    _instance.audio = _instance.audio || new Uint8Array();\n    _instance.utteranceStart = _instance.utteranceStart || false;\n    _instance.audioUuid = _instance.audioUuid || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeStreamResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Transcription();\n          _reader.readMessage(\n            messageInitializer1,\n            Transcription.deserializeBinaryFromReader\n          );\n          (_instance.transcriptions = _instance.transcriptions || []).push(\n            messageInitializer1\n          );\n          break;\n        case 2:\n          _instance.time = _reader.readFloat();\n          break;\n        case 3:\n          _instance.final = _reader.readBool();\n          break;\n        case 4:\n          _instance.returnAudio = _reader.readBool();\n          break;\n        case 5:\n          _instance.audio = _reader.readBytes();\n          break;\n        case 6:\n          _instance.utteranceStart = _reader.readBool();\n          break;\n        case 7:\n          _instance.audioUuid = _reader.readString();\n          break;\n        case 8:\n          _instance.config = new TranscribeRequestConfig();\n          _reader.readMessage(\n            _instance.config,\n            TranscribeRequestConfig.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeStreamResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeStreamResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcriptions && _instance.transcriptions.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.transcriptions as any,\n        Transcription.serializeBinaryToWriter\n      );\n    }\n    if (_instance.time) {\n      _writer.writeFloat(2, _instance.time);\n    }\n    if (_instance.final) {\n      _writer.writeBool(3, _instance.final);\n    }\n    if (_instance.returnAudio) {\n      _writer.writeBool(4, _instance.returnAudio);\n    }\n    if (_instance.audio && _instance.audio.length) {\n      _writer.writeBytes(5, _instance.audio);\n    }\n    if (_instance.utteranceStart) {\n      _writer.writeBool(6, _instance.utteranceStart);\n    }\n    if (_instance.audioUuid) {\n      _writer.writeString(7, _instance.audioUuid);\n    }\n    if (_instance.config) {\n      _writer.writeMessage(\n        8,\n        _instance.config as any,\n        TranscribeRequestConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _transcriptions?: Transcription[];\n  private _time?: number;\n  private _final?: boolean;\n  private _returnAudio?: boolean;\n  private _audio?: Uint8Array;\n  private _utteranceStart?: boolean;\n  private _audioUuid?: string;\n  private _config?: TranscribeRequestConfig;\n\n  private _oneofConfig: TranscribeStreamResponse.OneofConfigCase =\n    TranscribeStreamResponse.OneofConfigCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeStreamResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeStreamResponse.AsObject>) {\n    _value = _value || {};\n    this.transcriptions = (_value.transcriptions || []).map(\n      m => new Transcription(m)\n    );\n    this.time = _value.time;\n    this.final = _value.final;\n    this.returnAudio = _value.returnAudio;\n    this.audio = _value.audio;\n    this.utteranceStart = _value.utteranceStart;\n    this.audioUuid = _value.audioUuid;\n    this.config = _value.config\n      ? new TranscribeRequestConfig(_value.config)\n      : undefined;\n    TranscribeStreamResponse.refineValues(this);\n  }\n  get transcriptions(): Transcription[] | undefined {\n    return this._transcriptions;\n  }\n  set transcriptions(value: Transcription[] | undefined) {\n    this._transcriptions = value;\n  }\n  get time(): number | undefined {\n    return this._time;\n  }\n  set time(value: number | undefined) {\n    this._time = value;\n  }\n  get final(): boolean | undefined {\n    return this._final;\n  }\n  set final(value: boolean | undefined) {\n    this._final = value;\n  }\n  get returnAudio(): boolean | undefined {\n    return this._returnAudio;\n  }\n  set returnAudio(value: boolean | undefined) {\n    this._returnAudio = value;\n  }\n  get audio(): Uint8Array | undefined {\n    return this._audio;\n  }\n  set audio(value: Uint8Array | undefined) {\n    this._audio = value;\n  }\n  get utteranceStart(): boolean | undefined {\n    return this._utteranceStart;\n  }\n  set utteranceStart(value: boolean | undefined) {\n    this._utteranceStart = value;\n  }\n  get audioUuid(): string | undefined {\n    return this._audioUuid;\n  }\n  set audioUuid(value: string | undefined) {\n    this._audioUuid = value;\n  }\n  get config(): TranscribeRequestConfig | undefined {\n    return this._config;\n  }\n  set config(value: TranscribeRequestConfig | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofConfig = TranscribeStreamResponse.OneofConfigCase.config;\n    }\n    this._config = value;\n  }\n  get oneofConfig() {\n    return this._oneofConfig;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeStreamResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeStreamResponse.AsObject {\n    return {\n      transcriptions: (this.transcriptions || []).map(m => m.toObject()),\n      time: this.time,\n      final: this.final,\n      returnAudio: this.returnAudio,\n      audio: this.audio ? this.audio.subarray(0) : new Uint8Array(),\n      utteranceStart: this.utteranceStart,\n      audioUuid: this.audioUuid,\n      config: this.config ? this.config.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeStreamResponse.AsProtobufJSON {\n    return {\n      transcriptions: (this.transcriptions || []).map(m =>\n        m.toProtobufJSON(options)\n      ),\n      time: this.time,\n      final: this.final,\n      returnAudio: this.returnAudio,\n      audio: this.audio ? uint8ArrayToBase64(this.audio) : '',\n      utteranceStart: this.utteranceStart,\n      audioUuid: this.audioUuid,\n      config: this.config ? this.config.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module TranscribeStreamResponse {\n  /**\n   * Standard JavaScript object representation for TranscribeStreamResponse\n   */\n  export interface AsObject {\n    transcriptions?: Transcription.AsObject[];\n    time?: number;\n    final?: boolean;\n    returnAudio?: boolean;\n    audio?: Uint8Array;\n    utteranceStart?: boolean;\n    audioUuid?: string;\n    config?: TranscribeRequestConfig.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeStreamResponse\n   */\n  export interface AsProtobufJSON {\n    transcriptions?: Transcription.AsProtobufJSON[] | null;\n    time?: number;\n    final?: boolean;\n    returnAudio?: boolean;\n    audio?: string;\n    utteranceStart?: boolean;\n    audioUuid?: string;\n    config?: TranscribeRequestConfig.AsProtobufJSON | null;\n  }\n  export enum OneofConfigCase {\n    none = 0,\n    config = 1\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeFileRequest\n */\nexport class TranscribeFileRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeFileRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeFileRequest();\n    TranscribeFileRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeFileRequest) {\n    _instance.audioFile = _instance.audioFile || new Uint8Array();\n    _instance.config = _instance.config || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeFileRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.audioFile = _reader.readBytes();\n          break;\n        case 2:\n          _instance.config = new TranscribeRequestConfig();\n          _reader.readMessage(\n            _instance.config,\n            TranscribeRequestConfig.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeFileRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeFileRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.audioFile && _instance.audioFile.length) {\n      _writer.writeBytes(1, _instance.audioFile);\n    }\n    if (_instance.config) {\n      _writer.writeMessage(\n        2,\n        _instance.config as any,\n        TranscribeRequestConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _audioFile?: Uint8Array;\n  private _config?: TranscribeRequestConfig;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeFileRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeFileRequest.AsObject>) {\n    _value = _value || {};\n    this.audioFile = _value.audioFile;\n    this.config = _value.config\n      ? new TranscribeRequestConfig(_value.config)\n      : undefined;\n    TranscribeFileRequest.refineValues(this);\n  }\n  get audioFile(): Uint8Array | undefined {\n    return this._audioFile;\n  }\n  set audioFile(value: Uint8Array | undefined) {\n    this._audioFile = value;\n  }\n  get config(): TranscribeRequestConfig | undefined {\n    return this._config;\n  }\n  set config(value: TranscribeRequestConfig | undefined) {\n    this._config = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeFileRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeFileRequest.AsObject {\n    return {\n      audioFile: this.audioFile ? this.audioFile.subarray(0) : new Uint8Array(),\n      config: this.config ? this.config.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeFileRequest.AsProtobufJSON {\n    return {\n      audioFile: this.audioFile ? uint8ArrayToBase64(this.audioFile) : '',\n      config: this.config ? this.config.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module TranscribeFileRequest {\n  /**\n   * Standard JavaScript object representation for TranscribeFileRequest\n   */\n  export interface AsObject {\n    audioFile?: Uint8Array;\n    config?: TranscribeRequestConfig.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeFileRequest\n   */\n  export interface AsProtobufJSON {\n    audioFile?: string;\n    config?: TranscribeRequestConfig.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.TranscribeFileResponse\n */\nexport class TranscribeFileResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.TranscribeFileResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new TranscribeFileResponse();\n    TranscribeFileResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: TranscribeFileResponse) {\n    _instance.transcriptions = _instance.transcriptions || [];\n    _instance.time = _instance.time || 0;\n    _instance.wordTiming = _instance.wordTiming || [];\n    _instance.audioUuid = _instance.audioUuid || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: TranscribeFileResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Transcription();\n          _reader.readMessage(\n            messageInitializer1,\n            Transcription.deserializeBinaryFromReader\n          );\n          (_instance.transcriptions = _instance.transcriptions || []).push(\n            messageInitializer1\n          );\n          break;\n        case 2:\n          _instance.time = _reader.readFloat();\n          break;\n        case 3:\n          const messageInitializer3 = new WordTiming();\n          _reader.readMessage(\n            messageInitializer3,\n            WordTiming.deserializeBinaryFromReader\n          );\n          (_instance.wordTiming = _instance.wordTiming || []).push(\n            messageInitializer3\n          );\n          break;\n        case 4:\n          _instance.audioUuid = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    TranscribeFileResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: TranscribeFileResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcriptions && _instance.transcriptions.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.transcriptions as any,\n        Transcription.serializeBinaryToWriter\n      );\n    }\n    if (_instance.time) {\n      _writer.writeFloat(2, _instance.time);\n    }\n    if (_instance.wordTiming && _instance.wordTiming.length) {\n      _writer.writeRepeatedMessage(\n        3,\n        _instance.wordTiming as any,\n        WordTiming.serializeBinaryToWriter\n      );\n    }\n    if (_instance.audioUuid) {\n      _writer.writeString(4, _instance.audioUuid);\n    }\n  }\n\n  private _transcriptions?: Transcription[];\n  private _time?: number;\n  private _wordTiming?: WordTiming[];\n  private _audioUuid?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of TranscribeFileResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<TranscribeFileResponse.AsObject>) {\n    _value = _value || {};\n    this.transcriptions = (_value.transcriptions || []).map(\n      m => new Transcription(m)\n    );\n    this.time = _value.time;\n    this.wordTiming = (_value.wordTiming || []).map(m => new WordTiming(m));\n    this.audioUuid = _value.audioUuid;\n    TranscribeFileResponse.refineValues(this);\n  }\n  get transcriptions(): Transcription[] | undefined {\n    return this._transcriptions;\n  }\n  set transcriptions(value: Transcription[] | undefined) {\n    this._transcriptions = value;\n  }\n  get time(): number | undefined {\n    return this._time;\n  }\n  set time(value: number | undefined) {\n    this._time = value;\n  }\n  get wordTiming(): WordTiming[] | undefined {\n    return this._wordTiming;\n  }\n  set wordTiming(value: WordTiming[] | undefined) {\n    this._wordTiming = value;\n  }\n  get audioUuid(): string | undefined {\n    return this._audioUuid;\n  }\n  set audioUuid(value: string | undefined) {\n    this._audioUuid = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    TranscribeFileResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): TranscribeFileResponse.AsObject {\n    return {\n      transcriptions: (this.transcriptions || []).map(m => m.toObject()),\n      time: this.time,\n      wordTiming: (this.wordTiming || []).map(m => m.toObject()),\n      audioUuid: this.audioUuid\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): TranscribeFileResponse.AsProtobufJSON {\n    return {\n      transcriptions: (this.transcriptions || []).map(m =>\n        m.toProtobufJSON(options)\n      ),\n      time: this.time,\n      wordTiming: (this.wordTiming || []).map(m => m.toProtobufJSON(options)),\n      audioUuid: this.audioUuid\n    };\n  }\n}\nexport module TranscribeFileResponse {\n  /**\n   * Standard JavaScript object representation for TranscribeFileResponse\n   */\n  export interface AsObject {\n    transcriptions?: Transcription.AsObject[];\n    time?: number;\n    wordTiming?: WordTiming.AsObject[];\n    audioUuid?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for TranscribeFileResponse\n   */\n  export interface AsProtobufJSON {\n    transcriptions?: Transcription.AsProtobufJSON[] | null;\n    time?: number;\n    wordTiming?: WordTiming.AsProtobufJSON[] | null;\n    audioUuid?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.WordTiming\n */\nexport class WordTiming implements GrpcMessage {\n  static id = 'ondewo.s2t.WordTiming';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new WordTiming();\n    WordTiming.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: WordTiming) {\n    _instance.word = _instance.word || '';\n    _instance.begin = _instance.begin || 0;\n    _instance.end = _instance.end || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: WordTiming,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.word = _reader.readString();\n          break;\n        case 2:\n          _instance.begin = _reader.readInt32();\n          break;\n        case 3:\n          _instance.end = _reader.readInt32();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    WordTiming.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: WordTiming, _writer: BinaryWriter) {\n    if (_instance.word) {\n      _writer.writeString(1, _instance.word);\n    }\n    if (_instance.begin) {\n      _writer.writeInt32(2, _instance.begin);\n    }\n    if (_instance.end) {\n      _writer.writeInt32(3, _instance.end);\n    }\n  }\n\n  private _word?: string;\n  private _begin?: number;\n  private _end?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of WordTiming to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<WordTiming.AsObject>) {\n    _value = _value || {};\n    this.word = _value.word;\n    this.begin = _value.begin;\n    this.end = _value.end;\n    WordTiming.refineValues(this);\n  }\n  get word(): string | undefined {\n    return this._word;\n  }\n  set word(value: string | undefined) {\n    this._word = value;\n  }\n  get begin(): number | undefined {\n    return this._begin;\n  }\n  set begin(value: number | undefined) {\n    this._begin = value;\n  }\n  get end(): number | undefined {\n    return this._end;\n  }\n  set end(value: number | undefined) {\n    this._end = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    WordTiming.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): WordTiming.AsObject {\n    return {\n      word: this.word,\n      begin: this.begin,\n      end: this.end\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): WordTiming.AsProtobufJSON {\n    return {\n      word: this.word,\n      begin: this.begin,\n      end: this.end\n    };\n  }\n}\nexport module WordTiming {\n  /**\n   * Standard JavaScript object representation for WordTiming\n   */\n  export interface AsObject {\n    word?: string;\n    begin?: number;\n    end?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for WordTiming\n   */\n  export interface AsProtobufJSON {\n    word?: string;\n    begin?: number;\n    end?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.S2tPipelineId\n */\nexport class S2tPipelineId implements GrpcMessage {\n  static id = 'ondewo.s2t.S2tPipelineId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new S2tPipelineId();\n    S2tPipelineId.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: S2tPipelineId) {\n    _instance.id = _instance.id || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: S2tPipelineId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    S2tPipelineId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: S2tPipelineId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of S2tPipelineId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<S2tPipelineId.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    S2tPipelineId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    S2tPipelineId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): S2tPipelineId.AsObject {\n    return {\n      id: this.id\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): S2tPipelineId.AsProtobufJSON {\n    return {\n      id: this.id\n    };\n  }\n}\nexport module S2tPipelineId {\n  /**\n   * Standard JavaScript object representation for S2tPipelineId\n   */\n  export interface AsObject {\n    id?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for S2tPipelineId\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tPipelinesRequest\n */\nexport class ListS2tPipelinesRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tPipelinesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tPipelinesRequest();\n    ListS2tPipelinesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tPipelinesRequest) {\n    _instance.languages = _instance.languages || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tPipelinesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tPipelinesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tPipelinesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(3, _instance.domains);\n    }\n  }\n\n  private _languages?: string[];\n  private _pipelineOwners?: string[];\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tPipelinesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tPipelinesRequest.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.domains = (_value.domains || []).slice();\n    ListS2tPipelinesRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tPipelinesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tPipelinesRequest.AsObject {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tPipelinesRequest.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListS2tPipelinesRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tPipelinesRequest\n   */\n  export interface AsObject {\n    languages?: string[];\n    pipelineOwners?: string[];\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tPipelinesRequest\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n    pipelineOwners?: string[];\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tPipelinesResponse\n */\nexport class ListS2tPipelinesResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tPipelinesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tPipelinesResponse();\n    ListS2tPipelinesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tPipelinesResponse) {\n    _instance.pipelineConfigs = _instance.pipelineConfigs || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tPipelinesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Speech2TextConfig();\n          _reader.readMessage(\n            messageInitializer1,\n            Speech2TextConfig.deserializeBinaryFromReader\n          );\n          (_instance.pipelineConfigs = _instance.pipelineConfigs || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tPipelinesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tPipelinesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelineConfigs && _instance.pipelineConfigs.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.pipelineConfigs as any,\n        Speech2TextConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _pipelineConfigs?: Speech2TextConfig[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tPipelinesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tPipelinesResponse.AsObject>) {\n    _value = _value || {};\n    this.pipelineConfigs = (_value.pipelineConfigs || []).map(\n      m => new Speech2TextConfig(m)\n    );\n    ListS2tPipelinesResponse.refineValues(this);\n  }\n  get pipelineConfigs(): Speech2TextConfig[] | undefined {\n    return this._pipelineConfigs;\n  }\n  set pipelineConfigs(value: Speech2TextConfig[] | undefined) {\n    this._pipelineConfigs = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tPipelinesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tPipelinesResponse.AsObject {\n    return {\n      pipelineConfigs: (this.pipelineConfigs || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tPipelinesResponse.AsProtobufJSON {\n    return {\n      pipelineConfigs: (this.pipelineConfigs || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module ListS2tPipelinesResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tPipelinesResponse\n   */\n  export interface AsObject {\n    pipelineConfigs?: Speech2TextConfig.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tPipelinesResponse\n   */\n  export interface AsProtobufJSON {\n    pipelineConfigs?: Speech2TextConfig.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguagesRequest\n */\nexport class ListS2tLanguagesRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguagesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguagesRequest();\n    ListS2tLanguagesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguagesRequest) {\n    _instance.domains = _instance.domains || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguagesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguagesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguagesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(1, _instance.domains);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n  }\n\n  private _domains?: string[];\n  private _pipelineOwners?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguagesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tLanguagesRequest.AsObject>) {\n    _value = _value || {};\n    this.domains = (_value.domains || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    ListS2tLanguagesRequest.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguagesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguagesRequest.AsObject {\n    return {\n      domains: (this.domains || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguagesRequest.AsProtobufJSON {\n    return {\n      domains: (this.domains || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n}\nexport module ListS2tLanguagesRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguagesRequest\n   */\n  export interface AsObject {\n    domains?: string[];\n    pipelineOwners?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguagesRequest\n   */\n  export interface AsProtobufJSON {\n    domains?: string[];\n    pipelineOwners?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguagesResponse\n */\nexport class ListS2tLanguagesResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguagesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguagesResponse();\n    ListS2tLanguagesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguagesResponse) {\n    _instance.languages = _instance.languages || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguagesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguagesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguagesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n  }\n\n  private _languages?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguagesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tLanguagesResponse.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    ListS2tLanguagesResponse.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguagesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguagesResponse.AsObject {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguagesResponse.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n}\nexport module ListS2tLanguagesResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguagesResponse\n   */\n  export interface AsObject {\n    languages?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguagesResponse\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tDomainsRequest\n */\nexport class ListS2tDomainsRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tDomainsRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tDomainsRequest();\n    ListS2tDomainsRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tDomainsRequest) {\n    _instance.languages = _instance.languages || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tDomainsRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tDomainsRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tDomainsRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n  }\n\n  private _languages?: string[];\n  private _pipelineOwners?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tDomainsRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tDomainsRequest.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    ListS2tDomainsRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tDomainsRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tDomainsRequest.AsObject {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tDomainsRequest.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n}\nexport module ListS2tDomainsRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tDomainsRequest\n   */\n  export interface AsObject {\n    languages?: string[];\n    pipelineOwners?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tDomainsRequest\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n    pipelineOwners?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tDomainsResponse\n */\nexport class ListS2tDomainsResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tDomainsResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tDomainsResponse();\n    ListS2tDomainsResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tDomainsResponse) {\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tDomainsResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tDomainsResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tDomainsResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(1, _instance.domains);\n    }\n  }\n\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tDomainsResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListS2tDomainsResponse.AsObject>) {\n    _value = _value || {};\n    this.domains = (_value.domains || []).slice();\n    ListS2tDomainsResponse.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tDomainsResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tDomainsResponse.AsObject {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tDomainsResponse.AsProtobufJSON {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListS2tDomainsResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tDomainsResponse\n   */\n  export interface AsObject {\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tDomainsResponse\n   */\n  export interface AsProtobufJSON {\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.GetServiceInfoResponse\n */\nexport class GetServiceInfoResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.GetServiceInfoResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GetServiceInfoResponse();\n    GetServiceInfoResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GetServiceInfoResponse) {\n    _instance.version = _instance.version || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GetServiceInfoResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.version = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GetServiceInfoResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: GetServiceInfoResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.version) {\n      _writer.writeString(1, _instance.version);\n    }\n  }\n\n  private _version?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GetServiceInfoResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GetServiceInfoResponse.AsObject>) {\n    _value = _value || {};\n    this.version = _value.version;\n    GetServiceInfoResponse.refineValues(this);\n  }\n  get version(): string | undefined {\n    return this._version;\n  }\n  set version(value: string | undefined) {\n    this._version = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GetServiceInfoResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GetServiceInfoResponse.AsObject {\n    return {\n      version: this.version\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GetServiceInfoResponse.AsProtobufJSON {\n    return {\n      version: this.version\n    };\n  }\n}\nexport module GetServiceInfoResponse {\n  /**\n   * Standard JavaScript object representation for GetServiceInfoResponse\n   */\n  export interface AsObject {\n    version?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GetServiceInfoResponse\n   */\n  export interface AsProtobufJSON {\n    version?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Speech2TextConfig\n */\nexport class Speech2TextConfig implements GrpcMessage {\n  static id = 'ondewo.s2t.Speech2TextConfig';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Speech2TextConfig();\n    Speech2TextConfig.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Speech2TextConfig) {\n    _instance.id = _instance.id || '';\n    _instance.description = _instance.description || undefined;\n    _instance.active = _instance.active || false;\n    _instance.inference = _instance.inference || undefined;\n    _instance.streamingServer = _instance.streamingServer || undefined;\n    _instance.voiceActivityDetection =\n      _instance.voiceActivityDetection || undefined;\n    _instance.postProcessing = _instance.postProcessing || undefined;\n    _instance.logging = _instance.logging || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Speech2TextConfig,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          _instance.description = new Description();\n          _reader.readMessage(\n            _instance.description,\n            Description.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.active = _reader.readBool();\n          break;\n        case 4:\n          _instance.inference = new Inference();\n          _reader.readMessage(\n            _instance.inference,\n            Inference.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.streamingServer = new StreamingServer();\n          _reader.readMessage(\n            _instance.streamingServer,\n            StreamingServer.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.voiceActivityDetection = new VoiceActivityDetection();\n          _reader.readMessage(\n            _instance.voiceActivityDetection,\n            VoiceActivityDetection.deserializeBinaryFromReader\n          );\n          break;\n        case 7:\n          _instance.postProcessing = new PostProcessing();\n          _reader.readMessage(\n            _instance.postProcessing,\n            PostProcessing.deserializeBinaryFromReader\n          );\n          break;\n        case 8:\n          _instance.logging = new Logging();\n          _reader.readMessage(\n            _instance.logging,\n            Logging.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Speech2TextConfig.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Speech2TextConfig,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.description) {\n      _writer.writeMessage(\n        2,\n        _instance.description as any,\n        Description.serializeBinaryToWriter\n      );\n    }\n    if (_instance.active) {\n      _writer.writeBool(3, _instance.active);\n    }\n    if (_instance.inference) {\n      _writer.writeMessage(\n        4,\n        _instance.inference as any,\n        Inference.serializeBinaryToWriter\n      );\n    }\n    if (_instance.streamingServer) {\n      _writer.writeMessage(\n        5,\n        _instance.streamingServer as any,\n        StreamingServer.serializeBinaryToWriter\n      );\n    }\n    if (_instance.voiceActivityDetection) {\n      _writer.writeMessage(\n        6,\n        _instance.voiceActivityDetection as any,\n        VoiceActivityDetection.serializeBinaryToWriter\n      );\n    }\n    if (_instance.postProcessing) {\n      _writer.writeMessage(\n        7,\n        _instance.postProcessing as any,\n        PostProcessing.serializeBinaryToWriter\n      );\n    }\n    if (_instance.logging) {\n      _writer.writeMessage(\n        8,\n        _instance.logging as any,\n        Logging.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _description?: Description;\n  private _active?: boolean;\n  private _inference?: Inference;\n  private _streamingServer?: StreamingServer;\n  private _voiceActivityDetection?: VoiceActivityDetection;\n  private _postProcessing?: PostProcessing;\n  private _logging?: Logging;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Speech2TextConfig to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Speech2TextConfig.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.description = _value.description\n      ? new Description(_value.description)\n      : undefined;\n    this.active = _value.active;\n    this.inference = _value.inference\n      ? new Inference(_value.inference)\n      : undefined;\n    this.streamingServer = _value.streamingServer\n      ? new StreamingServer(_value.streamingServer)\n      : undefined;\n    this.voiceActivityDetection = _value.voiceActivityDetection\n      ? new VoiceActivityDetection(_value.voiceActivityDetection)\n      : undefined;\n    this.postProcessing = _value.postProcessing\n      ? new PostProcessing(_value.postProcessing)\n      : undefined;\n    this.logging = _value.logging ? new Logging(_value.logging) : undefined;\n    Speech2TextConfig.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get description(): Description | undefined {\n    return this._description;\n  }\n  set description(value: Description | undefined) {\n    this._description = value;\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get inference(): Inference | undefined {\n    return this._inference;\n  }\n  set inference(value: Inference | undefined) {\n    this._inference = value;\n  }\n  get streamingServer(): StreamingServer | undefined {\n    return this._streamingServer;\n  }\n  set streamingServer(value: StreamingServer | undefined) {\n    this._streamingServer = value;\n  }\n  get voiceActivityDetection(): VoiceActivityDetection | undefined {\n    return this._voiceActivityDetection;\n  }\n  set voiceActivityDetection(value: VoiceActivityDetection | undefined) {\n    this._voiceActivityDetection = value;\n  }\n  get postProcessing(): PostProcessing | undefined {\n    return this._postProcessing;\n  }\n  set postProcessing(value: PostProcessing | undefined) {\n    this._postProcessing = value;\n  }\n  get logging(): Logging | undefined {\n    return this._logging;\n  }\n  set logging(value: Logging | undefined) {\n    this._logging = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Speech2TextConfig.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Speech2TextConfig.AsObject {\n    return {\n      id: this.id,\n      description: this.description ? this.description.toObject() : undefined,\n      active: this.active,\n      inference: this.inference ? this.inference.toObject() : undefined,\n      streamingServer: this.streamingServer\n        ? this.streamingServer.toObject()\n        : undefined,\n      voiceActivityDetection: this.voiceActivityDetection\n        ? this.voiceActivityDetection.toObject()\n        : undefined,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toObject()\n        : undefined,\n      logging: this.logging ? this.logging.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Speech2TextConfig.AsProtobufJSON {\n    return {\n      id: this.id,\n      description: this.description\n        ? this.description.toProtobufJSON(options)\n        : null,\n      active: this.active,\n      inference: this.inference ? this.inference.toProtobufJSON(options) : null,\n      streamingServer: this.streamingServer\n        ? this.streamingServer.toProtobufJSON(options)\n        : null,\n      voiceActivityDetection: this.voiceActivityDetection\n        ? this.voiceActivityDetection.toProtobufJSON(options)\n        : null,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toProtobufJSON(options)\n        : null,\n      logging: this.logging ? this.logging.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module Speech2TextConfig {\n  /**\n   * Standard JavaScript object representation for Speech2TextConfig\n   */\n  export interface AsObject {\n    id?: string;\n    description?: Description.AsObject;\n    active?: boolean;\n    inference?: Inference.AsObject;\n    streamingServer?: StreamingServer.AsObject;\n    voiceActivityDetection?: VoiceActivityDetection.AsObject;\n    postProcessing?: PostProcessing.AsObject;\n    logging?: Logging.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Speech2TextConfig\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    description?: Description.AsProtobufJSON | null;\n    active?: boolean;\n    inference?: Inference.AsProtobufJSON | null;\n    streamingServer?: StreamingServer.AsProtobufJSON | null;\n    voiceActivityDetection?: VoiceActivityDetection.AsProtobufJSON | null;\n    postProcessing?: PostProcessing.AsProtobufJSON | null;\n    logging?: Logging.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Description\n */\nexport class Description implements GrpcMessage {\n  static id = 'ondewo.s2t.Description';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Description();\n    Description.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Description) {\n    _instance.language = _instance.language || '';\n    _instance.pipelineOwner = _instance.pipelineOwner || '';\n    _instance.domain = _instance.domain || '';\n    _instance.comments = _instance.comments || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Description,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        case 2:\n          _instance.pipelineOwner = _reader.readString();\n          break;\n        case 3:\n          _instance.domain = _reader.readString();\n          break;\n        case 4:\n          _instance.comments = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Description.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Description,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n    if (_instance.pipelineOwner) {\n      _writer.writeString(2, _instance.pipelineOwner);\n    }\n    if (_instance.domain) {\n      _writer.writeString(3, _instance.domain);\n    }\n    if (_instance.comments) {\n      _writer.writeString(4, _instance.comments);\n    }\n  }\n\n  private _language?: string;\n  private _pipelineOwner?: string;\n  private _domain?: string;\n  private _comments?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Description to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Description.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    this.pipelineOwner = _value.pipelineOwner;\n    this.domain = _value.domain;\n    this.comments = _value.comments;\n    Description.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get pipelineOwner(): string | undefined {\n    return this._pipelineOwner;\n  }\n  set pipelineOwner(value: string | undefined) {\n    this._pipelineOwner = value;\n  }\n  get domain(): string | undefined {\n    return this._domain;\n  }\n  set domain(value: string | undefined) {\n    this._domain = value;\n  }\n  get comments(): string | undefined {\n    return this._comments;\n  }\n  set comments(value: string | undefined) {\n    this._comments = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Description.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Description.AsObject {\n    return {\n      language: this.language,\n      pipelineOwner: this.pipelineOwner,\n      domain: this.domain,\n      comments: this.comments\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Description.AsProtobufJSON {\n    return {\n      language: this.language,\n      pipelineOwner: this.pipelineOwner,\n      domain: this.domain,\n      comments: this.comments\n    };\n  }\n}\nexport module Description {\n  /**\n   * Standard JavaScript object representation for Description\n   */\n  export interface AsObject {\n    language?: string;\n    pipelineOwner?: string;\n    domain?: string;\n    comments?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Description\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n    pipelineOwner?: string;\n    domain?: string;\n    comments?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Inference\n */\nexport class Inference implements GrpcMessage {\n  static id = 'ondewo.s2t.Inference';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Inference();\n    Inference.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Inference) {\n    _instance.ctcAcousticModels = _instance.ctcAcousticModels || undefined;\n    _instance.languageModels = _instance.languageModels || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Inference,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.ctcAcousticModels = new CtcAcousticModels();\n          _reader.readMessage(\n            _instance.ctcAcousticModels,\n            CtcAcousticModels.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.languageModels = new LanguageModels();\n          _reader.readMessage(\n            _instance.languageModels,\n            LanguageModels.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Inference.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Inference, _writer: BinaryWriter) {\n    if (_instance.ctcAcousticModels) {\n      _writer.writeMessage(\n        1,\n        _instance.ctcAcousticModels as any,\n        CtcAcousticModels.serializeBinaryToWriter\n      );\n    }\n    if (_instance.languageModels) {\n      _writer.writeMessage(\n        2,\n        _instance.languageModels as any,\n        LanguageModels.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _ctcAcousticModels?: CtcAcousticModels;\n  private _languageModels?: LanguageModels;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Inference to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Inference.AsObject>) {\n    _value = _value || {};\n    this.ctcAcousticModels = _value.ctcAcousticModels\n      ? new CtcAcousticModels(_value.ctcAcousticModels)\n      : undefined;\n    this.languageModels = _value.languageModels\n      ? new LanguageModels(_value.languageModels)\n      : undefined;\n    Inference.refineValues(this);\n  }\n  get ctcAcousticModels(): CtcAcousticModels | undefined {\n    return this._ctcAcousticModels;\n  }\n  set ctcAcousticModels(value: CtcAcousticModels | undefined) {\n    this._ctcAcousticModels = value;\n  }\n  get languageModels(): LanguageModels | undefined {\n    return this._languageModels;\n  }\n  set languageModels(value: LanguageModels | undefined) {\n    this._languageModels = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Inference.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Inference.AsObject {\n    return {\n      ctcAcousticModels: this.ctcAcousticModels\n        ? this.ctcAcousticModels.toObject()\n        : undefined,\n      languageModels: this.languageModels\n        ? this.languageModels.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Inference.AsProtobufJSON {\n    return {\n      ctcAcousticModels: this.ctcAcousticModels\n        ? this.ctcAcousticModels.toProtobufJSON(options)\n        : null,\n      languageModels: this.languageModels\n        ? this.languageModels.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Inference {\n  /**\n   * Standard JavaScript object representation for Inference\n   */\n  export interface AsObject {\n    ctcAcousticModels?: CtcAcousticModels.AsObject;\n    languageModels?: LanguageModels.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Inference\n   */\n  export interface AsProtobufJSON {\n    ctcAcousticModels?: CtcAcousticModels.AsProtobufJSON | null;\n    languageModels?: LanguageModels.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.CtcAcousticModels\n */\nexport class CtcAcousticModels implements GrpcMessage {\n  static id = 'ondewo.s2t.CtcAcousticModels';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CtcAcousticModels();\n    CtcAcousticModels.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CtcAcousticModels) {\n    _instance.type = _instance.type || '';\n    _instance.quartznet = _instance.quartznet || undefined;\n    _instance.quartznetTriton = _instance.quartznetTriton || undefined;\n    _instance.wav2vec = _instance.wav2vec || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CtcAcousticModels,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.quartznet = new Quartznet();\n          _reader.readMessage(\n            _instance.quartznet,\n            Quartznet.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.quartznetTriton = new QuartznetTriton();\n          _reader.readMessage(\n            _instance.quartznetTriton,\n            QuartznetTriton.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.wav2vec = new Wav2Vec();\n          _reader.readMessage(\n            _instance.wav2vec,\n            Wav2Vec.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CtcAcousticModels.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CtcAcousticModels,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.quartznet) {\n      _writer.writeMessage(\n        2,\n        _instance.quartznet as any,\n        Quartznet.serializeBinaryToWriter\n      );\n    }\n    if (_instance.quartznetTriton) {\n      _writer.writeMessage(\n        3,\n        _instance.quartznetTriton as any,\n        QuartznetTriton.serializeBinaryToWriter\n      );\n    }\n    if (_instance.wav2vec) {\n      _writer.writeMessage(\n        4,\n        _instance.wav2vec as any,\n        Wav2Vec.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _quartznet?: Quartznet;\n  private _quartznetTriton?: QuartznetTriton;\n  private _wav2vec?: Wav2Vec;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CtcAcousticModels to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CtcAcousticModels.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.quartznet = _value.quartznet\n      ? new Quartznet(_value.quartznet)\n      : undefined;\n    this.quartznetTriton = _value.quartznetTriton\n      ? new QuartznetTriton(_value.quartznetTriton)\n      : undefined;\n    this.wav2vec = _value.wav2vec ? new Wav2Vec(_value.wav2vec) : undefined;\n    CtcAcousticModels.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get quartznet(): Quartznet | undefined {\n    return this._quartznet;\n  }\n  set quartznet(value: Quartznet | undefined) {\n    this._quartznet = value;\n  }\n  get quartznetTriton(): QuartznetTriton | undefined {\n    return this._quartznetTriton;\n  }\n  set quartznetTriton(value: QuartznetTriton | undefined) {\n    this._quartznetTriton = value;\n  }\n  get wav2vec(): Wav2Vec | undefined {\n    return this._wav2vec;\n  }\n  set wav2vec(value: Wav2Vec | undefined) {\n    this._wav2vec = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CtcAcousticModels.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CtcAcousticModels.AsObject {\n    return {\n      type: this.type,\n      quartznet: this.quartznet ? this.quartznet.toObject() : undefined,\n      quartznetTriton: this.quartznetTriton\n        ? this.quartznetTriton.toObject()\n        : undefined,\n      wav2vec: this.wav2vec ? this.wav2vec.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CtcAcousticModels.AsProtobufJSON {\n    return {\n      type: this.type,\n      quartznet: this.quartznet ? this.quartznet.toProtobufJSON(options) : null,\n      quartznetTriton: this.quartznetTriton\n        ? this.quartznetTriton.toProtobufJSON(options)\n        : null,\n      wav2vec: this.wav2vec ? this.wav2vec.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module CtcAcousticModels {\n  /**\n   * Standard JavaScript object representation for CtcAcousticModels\n   */\n  export interface AsObject {\n    type?: string;\n    quartznet?: Quartznet.AsObject;\n    quartznetTriton?: QuartznetTriton.AsObject;\n    wav2vec?: Wav2Vec.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for CtcAcousticModels\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    quartznet?: Quartznet.AsProtobufJSON | null;\n    quartznetTriton?: QuartznetTriton.AsProtobufJSON | null;\n    wav2vec?: Wav2Vec.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Wav2Vec\n */\nexport class Wav2Vec implements GrpcMessage {\n  static id = 'ondewo.s2t.Wav2Vec';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Wav2Vec();\n    Wav2Vec.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Wav2Vec) {\n    _instance.modelPath = _instance.modelPath || '';\n    _instance.useGpu = _instance.useGpu || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Wav2Vec,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.modelPath = _reader.readString();\n          break;\n        case 2:\n          _instance.useGpu = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Wav2Vec.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Wav2Vec, _writer: BinaryWriter) {\n    if (_instance.modelPath) {\n      _writer.writeString(1, _instance.modelPath);\n    }\n    if (_instance.useGpu) {\n      _writer.writeBool(2, _instance.useGpu);\n    }\n  }\n\n  private _modelPath?: string;\n  private _useGpu?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Wav2Vec to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Wav2Vec.AsObject>) {\n    _value = _value || {};\n    this.modelPath = _value.modelPath;\n    this.useGpu = _value.useGpu;\n    Wav2Vec.refineValues(this);\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Wav2Vec.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Wav2Vec.AsObject {\n    return {\n      modelPath: this.modelPath,\n      useGpu: this.useGpu\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Wav2Vec.AsProtobufJSON {\n    return {\n      modelPath: this.modelPath,\n      useGpu: this.useGpu\n    };\n  }\n}\nexport module Wav2Vec {\n  /**\n   * Standard JavaScript object representation for Wav2Vec\n   */\n  export interface AsObject {\n    modelPath?: string;\n    useGpu?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for Wav2Vec\n   */\n  export interface AsProtobufJSON {\n    modelPath?: string;\n    useGpu?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Quartznet\n */\nexport class Quartznet implements GrpcMessage {\n  static id = 'ondewo.s2t.Quartznet';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Quartznet();\n    Quartznet.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Quartznet) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.loadType = _instance.loadType || '';\n    _instance.ptFiles = _instance.ptFiles || undefined;\n    _instance.ckptFile = _instance.ckptFile || undefined;\n    _instance.useGpu = _instance.useGpu || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Quartznet,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.loadType = _reader.readString();\n          break;\n        case 3:\n          _instance.ptFiles = new PtFiles();\n          _reader.readMessage(\n            _instance.ptFiles,\n            PtFiles.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.ckptFile = new CkptFile();\n          _reader.readMessage(\n            _instance.ckptFile,\n            CkptFile.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.useGpu = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Quartznet.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Quartznet, _writer: BinaryWriter) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.loadType) {\n      _writer.writeString(2, _instance.loadType);\n    }\n    if (_instance.ptFiles) {\n      _writer.writeMessage(\n        3,\n        _instance.ptFiles as any,\n        PtFiles.serializeBinaryToWriter\n      );\n    }\n    if (_instance.ckptFile) {\n      _writer.writeMessage(\n        4,\n        _instance.ckptFile as any,\n        CkptFile.serializeBinaryToWriter\n      );\n    }\n    if (_instance.useGpu) {\n      _writer.writeBool(5, _instance.useGpu);\n    }\n  }\n\n  private _configPath?: string;\n  private _loadType?: string;\n  private _ptFiles?: PtFiles;\n  private _ckptFile?: CkptFile;\n  private _useGpu?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Quartznet to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Quartznet.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.loadType = _value.loadType;\n    this.ptFiles = _value.ptFiles ? new PtFiles(_value.ptFiles) : undefined;\n    this.ckptFile = _value.ckptFile ? new CkptFile(_value.ckptFile) : undefined;\n    this.useGpu = _value.useGpu;\n    Quartznet.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get loadType(): string | undefined {\n    return this._loadType;\n  }\n  set loadType(value: string | undefined) {\n    this._loadType = value;\n  }\n  get ptFiles(): PtFiles | undefined {\n    return this._ptFiles;\n  }\n  set ptFiles(value: PtFiles | undefined) {\n    this._ptFiles = value;\n  }\n  get ckptFile(): CkptFile | undefined {\n    return this._ckptFile;\n  }\n  set ckptFile(value: CkptFile | undefined) {\n    this._ckptFile = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Quartznet.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Quartznet.AsObject {\n    return {\n      configPath: this.configPath,\n      loadType: this.loadType,\n      ptFiles: this.ptFiles ? this.ptFiles.toObject() : undefined,\n      ckptFile: this.ckptFile ? this.ckptFile.toObject() : undefined,\n      useGpu: this.useGpu\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Quartznet.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      loadType: this.loadType,\n      ptFiles: this.ptFiles ? this.ptFiles.toProtobufJSON(options) : null,\n      ckptFile: this.ckptFile ? this.ckptFile.toProtobufJSON(options) : null,\n      useGpu: this.useGpu\n    };\n  }\n}\nexport module Quartznet {\n  /**\n   * Standard JavaScript object representation for Quartznet\n   */\n  export interface AsObject {\n    configPath?: string;\n    loadType?: string;\n    ptFiles?: PtFiles.AsObject;\n    ckptFile?: CkptFile.AsObject;\n    useGpu?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for Quartznet\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    loadType?: string;\n    ptFiles?: PtFiles.AsProtobufJSON | null;\n    ckptFile?: CkptFile.AsProtobufJSON | null;\n    useGpu?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PtFiles\n */\nexport class PtFiles implements GrpcMessage {\n  static id = 'ondewo.s2t.PtFiles';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PtFiles();\n    PtFiles.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PtFiles) {\n    _instance.path = _instance.path || '';\n    _instance.step = _instance.step || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PtFiles,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.path = _reader.readString();\n          break;\n        case 2:\n          _instance.step = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PtFiles.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: PtFiles, _writer: BinaryWriter) {\n    if (_instance.path) {\n      _writer.writeString(1, _instance.path);\n    }\n    if (_instance.step) {\n      _writer.writeString(2, _instance.step);\n    }\n  }\n\n  private _path?: string;\n  private _step?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PtFiles to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PtFiles.AsObject>) {\n    _value = _value || {};\n    this.path = _value.path;\n    this.step = _value.step;\n    PtFiles.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get step(): string | undefined {\n    return this._step;\n  }\n  set step(value: string | undefined) {\n    this._step = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PtFiles.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PtFiles.AsObject {\n    return {\n      path: this.path,\n      step: this.step\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PtFiles.AsProtobufJSON {\n    return {\n      path: this.path,\n      step: this.step\n    };\n  }\n}\nexport module PtFiles {\n  /**\n   * Standard JavaScript object representation for PtFiles\n   */\n  export interface AsObject {\n    path?: string;\n    step?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for PtFiles\n   */\n  export interface AsProtobufJSON {\n    path?: string;\n    step?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.CkptFile\n */\nexport class CkptFile implements GrpcMessage {\n  static id = 'ondewo.s2t.CkptFile';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CkptFile();\n    CkptFile.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CkptFile) {\n    _instance.path = _instance.path || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CkptFile,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.path = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CkptFile.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: CkptFile, _writer: BinaryWriter) {\n    if (_instance.path) {\n      _writer.writeString(1, _instance.path);\n    }\n  }\n\n  private _path?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CkptFile to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CkptFile.AsObject>) {\n    _value = _value || {};\n    this.path = _value.path;\n    CkptFile.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CkptFile.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CkptFile.AsObject {\n    return {\n      path: this.path\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CkptFile.AsProtobufJSON {\n    return {\n      path: this.path\n    };\n  }\n}\nexport module CkptFile {\n  /**\n   * Standard JavaScript object representation for CkptFile\n   */\n  export interface AsObject {\n    path?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for CkptFile\n   */\n  export interface AsProtobufJSON {\n    path?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.QuartznetTriton\n */\nexport class QuartznetTriton implements GrpcMessage {\n  static id = 'ondewo.s2t.QuartznetTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new QuartznetTriton();\n    QuartznetTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: QuartznetTriton) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.tritonUrl = _instance.tritonUrl || '';\n    _instance.tritonModel = _instance.tritonModel || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: QuartznetTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.tritonUrl = _reader.readString();\n          break;\n        case 3:\n          _instance.tritonModel = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    QuartznetTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: QuartznetTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.tritonUrl) {\n      _writer.writeString(2, _instance.tritonUrl);\n    }\n    if (_instance.tritonModel) {\n      _writer.writeString(3, _instance.tritonModel);\n    }\n  }\n\n  private _configPath?: string;\n  private _tritonUrl?: string;\n  private _tritonModel?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of QuartznetTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<QuartznetTriton.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.tritonUrl = _value.tritonUrl;\n    this.tritonModel = _value.tritonModel;\n    QuartznetTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  get tritonModel(): string | undefined {\n    return this._tritonModel;\n  }\n  set tritonModel(value: string | undefined) {\n    this._tritonModel = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    QuartznetTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): QuartznetTriton.AsObject {\n    return {\n      configPath: this.configPath,\n      tritonUrl: this.tritonUrl,\n      tritonModel: this.tritonModel\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): QuartznetTriton.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      tritonUrl: this.tritonUrl,\n      tritonModel: this.tritonModel\n    };\n  }\n}\nexport module QuartznetTriton {\n  /**\n   * Standard JavaScript object representation for QuartznetTriton\n   */\n  export interface AsObject {\n    configPath?: string;\n    tritonUrl?: string;\n    tritonModel?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for QuartznetTriton\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    tritonUrl?: string;\n    tritonModel?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.LanguageModels\n */\nexport class LanguageModels implements GrpcMessage {\n  static id = 'ondewo.s2t.LanguageModels';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new LanguageModels();\n    LanguageModels.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: LanguageModels) {\n    _instance.path = _instance.path || '';\n    _instance.beamSize = _instance.beamSize || '0';\n    _instance.defaultLm = _instance.defaultLm || '';\n    _instance.beamSearchScorerAlpha = _instance.beamSearchScorerAlpha || 0;\n    _instance.beamSearchScorerBeta = _instance.beamSearchScorerBeta || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: LanguageModels,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.path = _reader.readString();\n          break;\n        case 2:\n          _instance.beamSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.defaultLm = _reader.readString();\n          break;\n        case 4:\n          _instance.beamSearchScorerAlpha = _reader.readFloat();\n          break;\n        case 5:\n          _instance.beamSearchScorerBeta = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    LanguageModels.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: LanguageModels,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.path) {\n      _writer.writeString(1, _instance.path);\n    }\n    if (_instance.beamSize) {\n      _writer.writeInt64String(2, _instance.beamSize);\n    }\n    if (_instance.defaultLm) {\n      _writer.writeString(3, _instance.defaultLm);\n    }\n    if (_instance.beamSearchScorerAlpha) {\n      _writer.writeFloat(4, _instance.beamSearchScorerAlpha);\n    }\n    if (_instance.beamSearchScorerBeta) {\n      _writer.writeFloat(5, _instance.beamSearchScorerBeta);\n    }\n  }\n\n  private _path?: string;\n  private _beamSize?: string;\n  private _defaultLm?: string;\n  private _beamSearchScorerAlpha?: number;\n  private _beamSearchScorerBeta?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of LanguageModels to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<LanguageModels.AsObject>) {\n    _value = _value || {};\n    this.path = _value.path;\n    this.beamSize = _value.beamSize;\n    this.defaultLm = _value.defaultLm;\n    this.beamSearchScorerAlpha = _value.beamSearchScorerAlpha;\n    this.beamSearchScorerBeta = _value.beamSearchScorerBeta;\n    LanguageModels.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get beamSize(): string | undefined {\n    return this._beamSize;\n  }\n  set beamSize(value: string | undefined) {\n    this._beamSize = value;\n  }\n  get defaultLm(): string | undefined {\n    return this._defaultLm;\n  }\n  set defaultLm(value: string | undefined) {\n    this._defaultLm = value;\n  }\n  get beamSearchScorerAlpha(): number | undefined {\n    return this._beamSearchScorerAlpha;\n  }\n  set beamSearchScorerAlpha(value: number | undefined) {\n    this._beamSearchScorerAlpha = value;\n  }\n  get beamSearchScorerBeta(): number | undefined {\n    return this._beamSearchScorerBeta;\n  }\n  set beamSearchScorerBeta(value: number | undefined) {\n    this._beamSearchScorerBeta = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    LanguageModels.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): LanguageModels.AsObject {\n    return {\n      path: this.path,\n      beamSize: this.beamSize,\n      defaultLm: this.defaultLm,\n      beamSearchScorerAlpha: this.beamSearchScorerAlpha,\n      beamSearchScorerBeta: this.beamSearchScorerBeta\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): LanguageModels.AsProtobufJSON {\n    return {\n      path: this.path,\n      beamSize: this.beamSize,\n      defaultLm: this.defaultLm,\n      beamSearchScorerAlpha: this.beamSearchScorerAlpha,\n      beamSearchScorerBeta: this.beamSearchScorerBeta\n    };\n  }\n}\nexport module LanguageModels {\n  /**\n   * Standard JavaScript object representation for LanguageModels\n   */\n  export interface AsObject {\n    path?: string;\n    beamSize?: string;\n    defaultLm?: string;\n    beamSearchScorerAlpha?: number;\n    beamSearchScorerBeta?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for LanguageModels\n   */\n  export interface AsProtobufJSON {\n    path?: string;\n    beamSize?: string;\n    defaultLm?: string;\n    beamSearchScorerAlpha?: number;\n    beamSearchScorerBeta?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.StreamingServer\n */\nexport class StreamingServer implements GrpcMessage {\n  static id = 'ondewo.s2t.StreamingServer';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new StreamingServer();\n    StreamingServer.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: StreamingServer) {\n    _instance.host = _instance.host || '';\n    _instance.port = _instance.port || '0';\n    _instance.outputStyle = _instance.outputStyle || '';\n    _instance.streamingSpeechRecognition =\n      _instance.streamingSpeechRecognition || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: StreamingServer,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.host = _reader.readString();\n          break;\n        case 2:\n          _instance.port = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.outputStyle = _reader.readString();\n          break;\n        case 4:\n          _instance.streamingSpeechRecognition = new StreamingSpeechRecognition();\n          _reader.readMessage(\n            _instance.streamingSpeechRecognition,\n            StreamingSpeechRecognition.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    StreamingServer.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: StreamingServer,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.host) {\n      _writer.writeString(1, _instance.host);\n    }\n    if (_instance.port) {\n      _writer.writeInt64String(2, _instance.port);\n    }\n    if (_instance.outputStyle) {\n      _writer.writeString(3, _instance.outputStyle);\n    }\n    if (_instance.streamingSpeechRecognition) {\n      _writer.writeMessage(\n        4,\n        _instance.streamingSpeechRecognition as any,\n        StreamingSpeechRecognition.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _host?: string;\n  private _port?: string;\n  private _outputStyle?: string;\n  private _streamingSpeechRecognition?: StreamingSpeechRecognition;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of StreamingServer to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<StreamingServer.AsObject>) {\n    _value = _value || {};\n    this.host = _value.host;\n    this.port = _value.port;\n    this.outputStyle = _value.outputStyle;\n    this.streamingSpeechRecognition = _value.streamingSpeechRecognition\n      ? new StreamingSpeechRecognition(_value.streamingSpeechRecognition)\n      : undefined;\n    StreamingServer.refineValues(this);\n  }\n  get host(): string | undefined {\n    return this._host;\n  }\n  set host(value: string | undefined) {\n    this._host = value;\n  }\n  get port(): string | undefined {\n    return this._port;\n  }\n  set port(value: string | undefined) {\n    this._port = value;\n  }\n  get outputStyle(): string | undefined {\n    return this._outputStyle;\n  }\n  set outputStyle(value: string | undefined) {\n    this._outputStyle = value;\n  }\n  get streamingSpeechRecognition(): StreamingSpeechRecognition | undefined {\n    return this._streamingSpeechRecognition;\n  }\n  set streamingSpeechRecognition(\n    value: StreamingSpeechRecognition | undefined\n  ) {\n    this._streamingSpeechRecognition = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    StreamingServer.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): StreamingServer.AsObject {\n    return {\n      host: this.host,\n      port: this.port,\n      outputStyle: this.outputStyle,\n      streamingSpeechRecognition: this.streamingSpeechRecognition\n        ? this.streamingSpeechRecognition.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): StreamingServer.AsProtobufJSON {\n    return {\n      host: this.host,\n      port: this.port,\n      outputStyle: this.outputStyle,\n      streamingSpeechRecognition: this.streamingSpeechRecognition\n        ? this.streamingSpeechRecognition.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module StreamingServer {\n  /**\n   * Standard JavaScript object representation for StreamingServer\n   */\n  export interface AsObject {\n    host?: string;\n    port?: string;\n    outputStyle?: string;\n    streamingSpeechRecognition?: StreamingSpeechRecognition.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for StreamingServer\n   */\n  export interface AsProtobufJSON {\n    host?: string;\n    port?: string;\n    outputStyle?: string;\n    streamingSpeechRecognition?: StreamingSpeechRecognition.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.StreamingSpeechRecognition\n */\nexport class StreamingSpeechRecognition implements GrpcMessage {\n  static id = 'ondewo.s2t.StreamingSpeechRecognition';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new StreamingSpeechRecognition();\n    StreamingSpeechRecognition.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: StreamingSpeechRecognition) {\n    _instance.transcribeNotFinal = _instance.transcribeNotFinal || false;\n    _instance.ctcDecodingMethod = _instance.ctcDecodingMethod || '';\n    _instance.samplingRate = _instance.samplingRate || '0';\n    _instance.minAudioChunkSize = _instance.minAudioChunkSize || '0';\n    _instance.startOfUtteranceThreshold =\n      _instance.startOfUtteranceThreshold || 0;\n    _instance.endOfUtteranceThreshold = _instance.endOfUtteranceThreshold || 0;\n    _instance.nextChunkTimeout = _instance.nextChunkTimeout || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: StreamingSpeechRecognition,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.transcribeNotFinal = _reader.readBool();\n          break;\n        case 2:\n          _instance.ctcDecodingMethod = _reader.readString();\n          break;\n        case 3:\n          _instance.samplingRate = _reader.readInt64String();\n          break;\n        case 4:\n          _instance.minAudioChunkSize = _reader.readInt64String();\n          break;\n        case 5:\n          _instance.startOfUtteranceThreshold = _reader.readFloat();\n          break;\n        case 6:\n          _instance.endOfUtteranceThreshold = _reader.readFloat();\n          break;\n        case 7:\n          _instance.nextChunkTimeout = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    StreamingSpeechRecognition.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: StreamingSpeechRecognition,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.transcribeNotFinal) {\n      _writer.writeBool(1, _instance.transcribeNotFinal);\n    }\n    if (_instance.ctcDecodingMethod) {\n      _writer.writeString(2, _instance.ctcDecodingMethod);\n    }\n    if (_instance.samplingRate) {\n      _writer.writeInt64String(3, _instance.samplingRate);\n    }\n    if (_instance.minAudioChunkSize) {\n      _writer.writeInt64String(4, _instance.minAudioChunkSize);\n    }\n    if (_instance.startOfUtteranceThreshold) {\n      _writer.writeFloat(5, _instance.startOfUtteranceThreshold);\n    }\n    if (_instance.endOfUtteranceThreshold) {\n      _writer.writeFloat(6, _instance.endOfUtteranceThreshold);\n    }\n    if (_instance.nextChunkTimeout) {\n      _writer.writeFloat(7, _instance.nextChunkTimeout);\n    }\n  }\n\n  private _transcribeNotFinal?: boolean;\n  private _ctcDecodingMethod?: string;\n  private _samplingRate?: string;\n  private _minAudioChunkSize?: string;\n  private _startOfUtteranceThreshold?: number;\n  private _endOfUtteranceThreshold?: number;\n  private _nextChunkTimeout?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of StreamingSpeechRecognition to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<StreamingSpeechRecognition.AsObject>) {\n    _value = _value || {};\n    this.transcribeNotFinal = _value.transcribeNotFinal;\n    this.ctcDecodingMethod = _value.ctcDecodingMethod;\n    this.samplingRate = _value.samplingRate;\n    this.minAudioChunkSize = _value.minAudioChunkSize;\n    this.startOfUtteranceThreshold = _value.startOfUtteranceThreshold;\n    this.endOfUtteranceThreshold = _value.endOfUtteranceThreshold;\n    this.nextChunkTimeout = _value.nextChunkTimeout;\n    StreamingSpeechRecognition.refineValues(this);\n  }\n  get transcribeNotFinal(): boolean | undefined {\n    return this._transcribeNotFinal;\n  }\n  set transcribeNotFinal(value: boolean | undefined) {\n    this._transcribeNotFinal = value;\n  }\n  get ctcDecodingMethod(): string | undefined {\n    return this._ctcDecodingMethod;\n  }\n  set ctcDecodingMethod(value: string | undefined) {\n    this._ctcDecodingMethod = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get minAudioChunkSize(): string | undefined {\n    return this._minAudioChunkSize;\n  }\n  set minAudioChunkSize(value: string | undefined) {\n    this._minAudioChunkSize = value;\n  }\n  get startOfUtteranceThreshold(): number | undefined {\n    return this._startOfUtteranceThreshold;\n  }\n  set startOfUtteranceThreshold(value: number | undefined) {\n    this._startOfUtteranceThreshold = value;\n  }\n  get endOfUtteranceThreshold(): number | undefined {\n    return this._endOfUtteranceThreshold;\n  }\n  set endOfUtteranceThreshold(value: number | undefined) {\n    this._endOfUtteranceThreshold = value;\n  }\n  get nextChunkTimeout(): number | undefined {\n    return this._nextChunkTimeout;\n  }\n  set nextChunkTimeout(value: number | undefined) {\n    this._nextChunkTimeout = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    StreamingSpeechRecognition.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): StreamingSpeechRecognition.AsObject {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      ctcDecodingMethod: this.ctcDecodingMethod,\n      samplingRate: this.samplingRate,\n      minAudioChunkSize: this.minAudioChunkSize,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold,\n      nextChunkTimeout: this.nextChunkTimeout\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): StreamingSpeechRecognition.AsProtobufJSON {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      ctcDecodingMethod: this.ctcDecodingMethod,\n      samplingRate: this.samplingRate,\n      minAudioChunkSize: this.minAudioChunkSize,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold,\n      nextChunkTimeout: this.nextChunkTimeout\n    };\n  }\n}\nexport module StreamingSpeechRecognition {\n  /**\n   * Standard JavaScript object representation for StreamingSpeechRecognition\n   */\n  export interface AsObject {\n    transcribeNotFinal?: boolean;\n    ctcDecodingMethod?: string;\n    samplingRate?: string;\n    minAudioChunkSize?: string;\n    startOfUtteranceThreshold?: number;\n    endOfUtteranceThreshold?: number;\n    nextChunkTimeout?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for StreamingSpeechRecognition\n   */\n  export interface AsProtobufJSON {\n    transcribeNotFinal?: boolean;\n    ctcDecodingMethod?: string;\n    samplingRate?: string;\n    minAudioChunkSize?: string;\n    startOfUtteranceThreshold?: number;\n    endOfUtteranceThreshold?: number;\n    nextChunkTimeout?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.VoiceActivityDetection\n */\nexport class VoiceActivityDetection implements GrpcMessage {\n  static id = 'ondewo.s2t.VoiceActivityDetection';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new VoiceActivityDetection();\n    VoiceActivityDetection.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: VoiceActivityDetection) {\n    _instance.active = _instance.active || '';\n    _instance.samplingRate = _instance.samplingRate || '0';\n    _instance.pyannote = _instance.pyannote || undefined;\n    _instance.matchbox = _instance.matchbox || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: VoiceActivityDetection,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.active = _reader.readString();\n          break;\n        case 2:\n          _instance.samplingRate = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.pyannote = new Pyannote();\n          _reader.readMessage(\n            _instance.pyannote,\n            Pyannote.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.matchbox = new Matchbox();\n          _reader.readMessage(\n            _instance.matchbox,\n            Matchbox.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    VoiceActivityDetection.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: VoiceActivityDetection,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.active) {\n      _writer.writeString(1, _instance.active);\n    }\n    if (_instance.samplingRate) {\n      _writer.writeInt64String(2, _instance.samplingRate);\n    }\n    if (_instance.pyannote) {\n      _writer.writeMessage(\n        3,\n        _instance.pyannote as any,\n        Pyannote.serializeBinaryToWriter\n      );\n    }\n    if (_instance.matchbox) {\n      _writer.writeMessage(\n        4,\n        _instance.matchbox as any,\n        Matchbox.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _active?: string;\n  private _samplingRate?: string;\n  private _pyannote?: Pyannote;\n  private _matchbox?: Matchbox;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of VoiceActivityDetection to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<VoiceActivityDetection.AsObject>) {\n    _value = _value || {};\n    this.active = _value.active;\n    this.samplingRate = _value.samplingRate;\n    this.pyannote = _value.pyannote ? new Pyannote(_value.pyannote) : undefined;\n    this.matchbox = _value.matchbox ? new Matchbox(_value.matchbox) : undefined;\n    VoiceActivityDetection.refineValues(this);\n  }\n  get active(): string | undefined {\n    return this._active;\n  }\n  set active(value: string | undefined) {\n    this._active = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get pyannote(): Pyannote | undefined {\n    return this._pyannote;\n  }\n  set pyannote(value: Pyannote | undefined) {\n    this._pyannote = value;\n  }\n  get matchbox(): Matchbox | undefined {\n    return this._matchbox;\n  }\n  set matchbox(value: Matchbox | undefined) {\n    this._matchbox = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    VoiceActivityDetection.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): VoiceActivityDetection.AsObject {\n    return {\n      active: this.active,\n      samplingRate: this.samplingRate,\n      pyannote: this.pyannote ? this.pyannote.toObject() : undefined,\n      matchbox: this.matchbox ? this.matchbox.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): VoiceActivityDetection.AsProtobufJSON {\n    return {\n      active: this.active,\n      samplingRate: this.samplingRate,\n      pyannote: this.pyannote ? this.pyannote.toProtobufJSON(options) : null,\n      matchbox: this.matchbox ? this.matchbox.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module VoiceActivityDetection {\n  /**\n   * Standard JavaScript object representation for VoiceActivityDetection\n   */\n  export interface AsObject {\n    active?: string;\n    samplingRate?: string;\n    pyannote?: Pyannote.AsObject;\n    matchbox?: Matchbox.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for VoiceActivityDetection\n   */\n  export interface AsProtobufJSON {\n    active?: string;\n    samplingRate?: string;\n    pyannote?: Pyannote.AsProtobufJSON | null;\n    matchbox?: Matchbox.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Pyannote\n */\nexport class Pyannote implements GrpcMessage {\n  static id = 'ondewo.s2t.Pyannote';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Pyannote();\n    Pyannote.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Pyannote) {\n    _instance.modelPath = _instance.modelPath || '';\n    _instance.minAudioSize = _instance.minAudioSize || '0';\n    _instance.offset = _instance.offset || 0;\n    _instance.onset = _instance.onset || 0;\n\n    _instance.minDurationOff = _instance.minDurationOff || 0;\n    _instance.minDurationOn = _instance.minDurationOn || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Pyannote,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.modelPath = _reader.readString();\n          break;\n        case 2:\n          _instance.minAudioSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.offset = _reader.readFloat();\n          break;\n        case 4:\n          _instance.onset = _reader.readFloat();\n          break;\n        case 5:\n          _instance.logScale = _reader.readBool();\n          break;\n        case 6:\n          _instance.minDurationOff = _reader.readFloat();\n          break;\n        case 7:\n          _instance.minDurationOn = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Pyannote.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Pyannote, _writer: BinaryWriter) {\n    if (_instance.modelPath) {\n      _writer.writeString(1, _instance.modelPath);\n    }\n    if (_instance.minAudioSize) {\n      _writer.writeInt64String(2, _instance.minAudioSize);\n    }\n    if (_instance.offset) {\n      _writer.writeFloat(3, _instance.offset);\n    }\n    if (_instance.onset) {\n      _writer.writeFloat(4, _instance.onset);\n    }\n    if (_instance.logScale || _instance.logScale === false) {\n      _writer.writeBool(5, _instance.logScale);\n    }\n    if (_instance.minDurationOff) {\n      _writer.writeFloat(6, _instance.minDurationOff);\n    }\n    if (_instance.minDurationOn) {\n      _writer.writeFloat(7, _instance.minDurationOn);\n    }\n  }\n\n  private _modelPath?: string;\n  private _minAudioSize?: string;\n  private _offset?: number;\n  private _onset?: number;\n  private _logScale?: boolean;\n  private _minDurationOff?: number;\n  private _minDurationOn?: number;\n\n  private _oneofLogScale: Pyannote.OneofLogScaleCase =\n    Pyannote.OneofLogScaleCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Pyannote to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Pyannote.AsObject>) {\n    _value = _value || {};\n    this.modelPath = _value.modelPath;\n    this.minAudioSize = _value.minAudioSize;\n    this.offset = _value.offset;\n    this.onset = _value.onset;\n    this.logScale = _value.logScale;\n    this.minDurationOff = _value.minDurationOff;\n    this.minDurationOn = _value.minDurationOn;\n    Pyannote.refineValues(this);\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  get minAudioSize(): string | undefined {\n    return this._minAudioSize;\n  }\n  set minAudioSize(value: string | undefined) {\n    this._minAudioSize = value;\n  }\n  get offset(): number | undefined {\n    return this._offset;\n  }\n  set offset(value: number | undefined) {\n    this._offset = value;\n  }\n  get onset(): number | undefined {\n    return this._onset;\n  }\n  set onset(value: number | undefined) {\n    this._onset = value;\n  }\n  get logScale(): boolean | undefined {\n    return this._logScale;\n  }\n  set logScale(value: boolean | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofLogScale = Pyannote.OneofLogScaleCase.logScale;\n    }\n    this._logScale = value;\n  }\n  get minDurationOff(): number | undefined {\n    return this._minDurationOff;\n  }\n  set minDurationOff(value: number | undefined) {\n    this._minDurationOff = value;\n  }\n  get minDurationOn(): number | undefined {\n    return this._minDurationOn;\n  }\n  set minDurationOn(value: number | undefined) {\n    this._minDurationOn = value;\n  }\n  get oneofLogScale() {\n    return this._oneofLogScale;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Pyannote.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Pyannote.AsObject {\n    return {\n      modelPath: this.modelPath,\n      minAudioSize: this.minAudioSize,\n      offset: this.offset,\n      onset: this.onset,\n      logScale: this.logScale,\n      minDurationOff: this.minDurationOff,\n      minDurationOn: this.minDurationOn\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Pyannote.AsProtobufJSON {\n    return {\n      modelPath: this.modelPath,\n      minAudioSize: this.minAudioSize,\n      offset: this.offset,\n      onset: this.onset,\n      logScale: this.logScale,\n      minDurationOff: this.minDurationOff,\n      minDurationOn: this.minDurationOn\n    };\n  }\n}\nexport module Pyannote {\n  /**\n   * Standard JavaScript object representation for Pyannote\n   */\n  export interface AsObject {\n    modelPath?: string;\n    minAudioSize?: string;\n    offset?: number;\n    onset?: number;\n    logScale?: boolean;\n    minDurationOff?: number;\n    minDurationOn?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Pyannote\n   */\n  export interface AsProtobufJSON {\n    modelPath?: string;\n    minAudioSize?: string;\n    offset?: number;\n    onset?: number;\n    logScale?: boolean;\n    minDurationOff?: number;\n    minDurationOn?: number;\n  }\n  export enum OneofLogScaleCase {\n    none = 0,\n    logScale = 1\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Matchbox\n */\nexport class Matchbox implements GrpcMessage {\n  static id = 'ondewo.s2t.Matchbox';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Matchbox();\n    Matchbox.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Matchbox) {\n    _instance.modelConfig = _instance.modelConfig || '';\n    _instance.encoderPath = _instance.encoderPath || '';\n    _instance.decoderPath = _instance.decoderPath || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Matchbox,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.modelConfig = _reader.readString();\n          break;\n        case 2:\n          _instance.encoderPath = _reader.readString();\n          break;\n        case 3:\n          _instance.decoderPath = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Matchbox.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Matchbox, _writer: BinaryWriter) {\n    if (_instance.modelConfig) {\n      _writer.writeString(1, _instance.modelConfig);\n    }\n    if (_instance.encoderPath) {\n      _writer.writeString(2, _instance.encoderPath);\n    }\n    if (_instance.decoderPath) {\n      _writer.writeString(3, _instance.decoderPath);\n    }\n  }\n\n  private _modelConfig?: string;\n  private _encoderPath?: string;\n  private _decoderPath?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Matchbox to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Matchbox.AsObject>) {\n    _value = _value || {};\n    this.modelConfig = _value.modelConfig;\n    this.encoderPath = _value.encoderPath;\n    this.decoderPath = _value.decoderPath;\n    Matchbox.refineValues(this);\n  }\n  get modelConfig(): string | undefined {\n    return this._modelConfig;\n  }\n  set modelConfig(value: string | undefined) {\n    this._modelConfig = value;\n  }\n  get encoderPath(): string | undefined {\n    return this._encoderPath;\n  }\n  set encoderPath(value: string | undefined) {\n    this._encoderPath = value;\n  }\n  get decoderPath(): string | undefined {\n    return this._decoderPath;\n  }\n  set decoderPath(value: string | undefined) {\n    this._decoderPath = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Matchbox.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Matchbox.AsObject {\n    return {\n      modelConfig: this.modelConfig,\n      encoderPath: this.encoderPath,\n      decoderPath: this.decoderPath\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Matchbox.AsProtobufJSON {\n    return {\n      modelConfig: this.modelConfig,\n      encoderPath: this.encoderPath,\n      decoderPath: this.decoderPath\n    };\n  }\n}\nexport module Matchbox {\n  /**\n   * Standard JavaScript object representation for Matchbox\n   */\n  export interface AsObject {\n    modelConfig?: string;\n    encoderPath?: string;\n    decoderPath?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Matchbox\n   */\n  export interface AsProtobufJSON {\n    modelConfig?: string;\n    encoderPath?: string;\n    decoderPath?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PostProcessing\n */\nexport class PostProcessing implements GrpcMessage {\n  static id = 'ondewo.s2t.PostProcessing';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PostProcessing();\n    PostProcessing.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PostProcessing) {\n    _instance.pipeline = _instance.pipeline || [];\n    _instance.postProcessors = _instance.postProcessors || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PostProcessing,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.pipeline = _instance.pipeline || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          _instance.postProcessors = new PostProcessors();\n          _reader.readMessage(\n            _instance.postProcessors,\n            PostProcessors.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PostProcessing.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PostProcessing,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipeline && _instance.pipeline.length) {\n      _writer.writeRepeatedString(1, _instance.pipeline);\n    }\n    if (_instance.postProcessors) {\n      _writer.writeMessage(\n        2,\n        _instance.postProcessors as any,\n        PostProcessors.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _pipeline?: string[];\n  private _postProcessors?: PostProcessors;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PostProcessing to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PostProcessing.AsObject>) {\n    _value = _value || {};\n    this.pipeline = (_value.pipeline || []).slice();\n    this.postProcessors = _value.postProcessors\n      ? new PostProcessors(_value.postProcessors)\n      : undefined;\n    PostProcessing.refineValues(this);\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get postProcessors(): PostProcessors | undefined {\n    return this._postProcessors;\n  }\n  set postProcessors(value: PostProcessors | undefined) {\n    this._postProcessors = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PostProcessing.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PostProcessing.AsObject {\n    return {\n      pipeline: (this.pipeline || []).slice(),\n      postProcessors: this.postProcessors\n        ? this.postProcessors.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PostProcessing.AsProtobufJSON {\n    return {\n      pipeline: (this.pipeline || []).slice(),\n      postProcessors: this.postProcessors\n        ? this.postProcessors.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module PostProcessing {\n  /**\n   * Standard JavaScript object representation for PostProcessing\n   */\n  export interface AsObject {\n    pipeline?: string[];\n    postProcessors?: PostProcessors.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for PostProcessing\n   */\n  export interface AsProtobufJSON {\n    pipeline?: string[];\n    postProcessors?: PostProcessors.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.PostProcessors\n */\nexport class PostProcessors implements GrpcMessage {\n  static id = 'ondewo.s2t.PostProcessors';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PostProcessors();\n    PostProcessors.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PostProcessors) {\n    _instance.symSpell = _instance.symSpell || undefined;\n    _instance.normalization = _instance.normalization || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PostProcessors,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.symSpell = new SymSpell();\n          _reader.readMessage(\n            _instance.symSpell,\n            SymSpell.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.normalization = new Normalization();\n          _reader.readMessage(\n            _instance.normalization,\n            Normalization.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PostProcessors.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PostProcessors,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.symSpell) {\n      _writer.writeMessage(\n        1,\n        _instance.symSpell as any,\n        SymSpell.serializeBinaryToWriter\n      );\n    }\n    if (_instance.normalization) {\n      _writer.writeMessage(\n        2,\n        _instance.normalization as any,\n        Normalization.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _symSpell?: SymSpell;\n  private _normalization?: Normalization;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PostProcessors to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PostProcessors.AsObject>) {\n    _value = _value || {};\n    this.symSpell = _value.symSpell ? new SymSpell(_value.symSpell) : undefined;\n    this.normalization = _value.normalization\n      ? new Normalization(_value.normalization)\n      : undefined;\n    PostProcessors.refineValues(this);\n  }\n  get symSpell(): SymSpell | undefined {\n    return this._symSpell;\n  }\n  set symSpell(value: SymSpell | undefined) {\n    this._symSpell = value;\n  }\n  get normalization(): Normalization | undefined {\n    return this._normalization;\n  }\n  set normalization(value: Normalization | undefined) {\n    this._normalization = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PostProcessors.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PostProcessors.AsObject {\n    return {\n      symSpell: this.symSpell ? this.symSpell.toObject() : undefined,\n      normalization: this.normalization\n        ? this.normalization.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PostProcessors.AsProtobufJSON {\n    return {\n      symSpell: this.symSpell ? this.symSpell.toProtobufJSON(options) : null,\n      normalization: this.normalization\n        ? this.normalization.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module PostProcessors {\n  /**\n   * Standard JavaScript object representation for PostProcessors\n   */\n  export interface AsObject {\n    symSpell?: SymSpell.AsObject;\n    normalization?: Normalization.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for PostProcessors\n   */\n  export interface AsProtobufJSON {\n    symSpell?: SymSpell.AsProtobufJSON | null;\n    normalization?: Normalization.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.SymSpell\n */\nexport class SymSpell implements GrpcMessage {\n  static id = 'ondewo.s2t.SymSpell';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SymSpell();\n    SymSpell.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SymSpell) {\n    _instance.dictPath = _instance.dictPath || '';\n    _instance.maxDictionaryEditDistance =\n      _instance.maxDictionaryEditDistance || '0';\n    _instance.prefixLength = _instance.prefixLength || '0';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SymSpell,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.dictPath = _reader.readString();\n          break;\n        case 2:\n          _instance.maxDictionaryEditDistance = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.prefixLength = _reader.readInt64String();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SymSpell.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: SymSpell, _writer: BinaryWriter) {\n    if (_instance.dictPath) {\n      _writer.writeString(1, _instance.dictPath);\n    }\n    if (_instance.maxDictionaryEditDistance) {\n      _writer.writeInt64String(2, _instance.maxDictionaryEditDistance);\n    }\n    if (_instance.prefixLength) {\n      _writer.writeInt64String(3, _instance.prefixLength);\n    }\n  }\n\n  private _dictPath?: string;\n  private _maxDictionaryEditDistance?: string;\n  private _prefixLength?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SymSpell to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SymSpell.AsObject>) {\n    _value = _value || {};\n    this.dictPath = _value.dictPath;\n    this.maxDictionaryEditDistance = _value.maxDictionaryEditDistance;\n    this.prefixLength = _value.prefixLength;\n    SymSpell.refineValues(this);\n  }\n  get dictPath(): string | undefined {\n    return this._dictPath;\n  }\n  set dictPath(value: string | undefined) {\n    this._dictPath = value;\n  }\n  get maxDictionaryEditDistance(): string | undefined {\n    return this._maxDictionaryEditDistance;\n  }\n  set maxDictionaryEditDistance(value: string | undefined) {\n    this._maxDictionaryEditDistance = value;\n  }\n  get prefixLength(): string | undefined {\n    return this._prefixLength;\n  }\n  set prefixLength(value: string | undefined) {\n    this._prefixLength = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SymSpell.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SymSpell.AsObject {\n    return {\n      dictPath: this.dictPath,\n      maxDictionaryEditDistance: this.maxDictionaryEditDistance,\n      prefixLength: this.prefixLength\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SymSpell.AsProtobufJSON {\n    return {\n      dictPath: this.dictPath,\n      maxDictionaryEditDistance: this.maxDictionaryEditDistance,\n      prefixLength: this.prefixLength\n    };\n  }\n}\nexport module SymSpell {\n  /**\n   * Standard JavaScript object representation for SymSpell\n   */\n  export interface AsObject {\n    dictPath?: string;\n    maxDictionaryEditDistance?: string;\n    prefixLength?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for SymSpell\n   */\n  export interface AsProtobufJSON {\n    dictPath?: string;\n    maxDictionaryEditDistance?: string;\n    prefixLength?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Normalization\n */\nexport class Normalization implements GrpcMessage {\n  static id = 'ondewo.s2t.Normalization';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Normalization();\n    Normalization.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Normalization) {\n    _instance.language = _instance.language || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Normalization,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Normalization.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Normalization,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n  }\n\n  private _language?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Normalization to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Normalization.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    Normalization.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Normalization.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Normalization.AsObject {\n    return {\n      language: this.language\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Normalization.AsProtobufJSON {\n    return {\n      language: this.language\n    };\n  }\n}\nexport module Normalization {\n  /**\n   * Standard JavaScript object representation for Normalization\n   */\n  export interface AsObject {\n    language?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Normalization\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.Logging\n */\nexport class Logging implements GrpcMessage {\n  static id = 'ondewo.s2t.Logging';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Logging();\n    Logging.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Logging) {\n    _instance.type = _instance.type || '';\n    _instance.path = _instance.path || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Logging,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.path = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Logging.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Logging, _writer: BinaryWriter) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.path) {\n      _writer.writeString(2, _instance.path);\n    }\n  }\n\n  private _type?: string;\n  private _path?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Logging to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Logging.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.path = _value.path;\n    Logging.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Logging.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Logging.AsObject {\n    return {\n      type: this.type,\n      path: this.path\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Logging.AsProtobufJSON {\n    return {\n      type: this.type,\n      path: this.path\n    };\n  }\n}\nexport module Logging {\n  /**\n   * Standard JavaScript object representation for Logging\n   */\n  export interface AsObject {\n    type?: string;\n    path?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Logging\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    path?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguageModelsRequest\n */\nexport class ListS2tLanguageModelsRequest implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguageModelsRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguageModelsRequest();\n    ListS2tLanguageModelsRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguageModelsRequest) {\n    _instance.ids = _instance.ids || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguageModelsRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.ids = _instance.ids || []).push(_reader.readString());\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguageModelsRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguageModelsRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.ids && _instance.ids.length) {\n      _writer.writeRepeatedString(1, _instance.ids);\n    }\n  }\n\n  private _ids?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguageModelsRequest to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<ListS2tLanguageModelsRequest.AsObject>\n  ) {\n    _value = _value || {};\n    this.ids = (_value.ids || []).slice();\n    ListS2tLanguageModelsRequest.refineValues(this);\n  }\n  get ids(): string[] | undefined {\n    return this._ids;\n  }\n  set ids(value: string[] | undefined) {\n    this._ids = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguageModelsRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguageModelsRequest.AsObject {\n    return {\n      ids: (this.ids || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguageModelsRequest.AsProtobufJSON {\n    return {\n      ids: (this.ids || []).slice()\n    };\n  }\n}\nexport module ListS2tLanguageModelsRequest {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguageModelsRequest\n   */\n  export interface AsObject {\n    ids?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguageModelsRequest\n   */\n  export interface AsProtobufJSON {\n    ids?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.LanguageModelPipelineId\n */\nexport class LanguageModelPipelineId implements GrpcMessage {\n  static id = 'ondewo.s2t.LanguageModelPipelineId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new LanguageModelPipelineId();\n    LanguageModelPipelineId.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: LanguageModelPipelineId) {\n    _instance.pipelineId = _instance.pipelineId || '';\n    _instance.modelNames = _instance.modelNames || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: LanguageModelPipelineId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.pipelineId = _reader.readString();\n          break;\n        case 2:\n          (_instance.modelNames = _instance.modelNames || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    LanguageModelPipelineId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: LanguageModelPipelineId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelineId) {\n      _writer.writeString(1, _instance.pipelineId);\n    }\n    if (_instance.modelNames && _instance.modelNames.length) {\n      _writer.writeRepeatedString(2, _instance.modelNames);\n    }\n  }\n\n  private _pipelineId?: string;\n  private _modelNames?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of LanguageModelPipelineId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<LanguageModelPipelineId.AsObject>) {\n    _value = _value || {};\n    this.pipelineId = _value.pipelineId;\n    this.modelNames = (_value.modelNames || []).slice();\n    LanguageModelPipelineId.refineValues(this);\n  }\n  get pipelineId(): string | undefined {\n    return this._pipelineId;\n  }\n  set pipelineId(value: string | undefined) {\n    this._pipelineId = value;\n  }\n  get modelNames(): string[] | undefined {\n    return this._modelNames;\n  }\n  set modelNames(value: string[] | undefined) {\n    this._modelNames = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    LanguageModelPipelineId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): LanguageModelPipelineId.AsObject {\n    return {\n      pipelineId: this.pipelineId,\n      modelNames: (this.modelNames || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): LanguageModelPipelineId.AsProtobufJSON {\n    return {\n      pipelineId: this.pipelineId,\n      modelNames: (this.modelNames || []).slice()\n    };\n  }\n}\nexport module LanguageModelPipelineId {\n  /**\n   * Standard JavaScript object representation for LanguageModelPipelineId\n   */\n  export interface AsObject {\n    pipelineId?: string;\n    modelNames?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for LanguageModelPipelineId\n   */\n  export interface AsProtobufJSON {\n    pipelineId?: string;\n    modelNames?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.s2t.ListS2tLanguageModelsResponse\n */\nexport class ListS2tLanguageModelsResponse implements GrpcMessage {\n  static id = 'ondewo.s2t.ListS2tLanguageModelsResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguageModelsResponse();\n    ListS2tLanguageModelsResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListS2tLanguageModelsResponse) {\n    _instance.lmPipelineIds = _instance.lmPipelineIds || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListS2tLanguageModelsResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new LanguageModelPipelineId();\n          _reader.readMessage(\n            messageInitializer1,\n            LanguageModelPipelineId.deserializeBinaryFromReader\n          );\n          (_instance.lmPipelineIds = _instance.lmPipelineIds || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListS2tLanguageModelsResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListS2tLanguageModelsResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.lmPipelineIds && _instance.lmPipelineIds.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.lmPipelineIds as any,\n        LanguageModelPipelineId.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _lmPipelineIds?: LanguageModelPipelineId[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListS2tLanguageModelsResponse to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<ListS2tLanguageModelsResponse.AsObject>\n  ) {\n    _value = _value || {};\n    this.lmPipelineIds = (_value.lmPipelineIds || []).map(\n      m => new LanguageModelPipelineId(m)\n    );\n    ListS2tLanguageModelsResponse.refineValues(this);\n  }\n  get lmPipelineIds(): LanguageModelPipelineId[] | undefined {\n    return this._lmPipelineIds;\n  }\n  set lmPipelineIds(value: LanguageModelPipelineId[] | undefined) {\n    this._lmPipelineIds = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListS2tLanguageModelsResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListS2tLanguageModelsResponse.AsObject {\n    return {\n      lmPipelineIds: (this.lmPipelineIds || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListS2tLanguageModelsResponse.AsProtobufJSON {\n    return {\n      lmPipelineIds: (this.lmPipelineIds || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module ListS2tLanguageModelsResponse {\n  /**\n   * Standard JavaScript object representation for ListS2tLanguageModelsResponse\n   */\n  export interface AsObject {\n    lmPipelineIds?: LanguageModelPipelineId.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListS2tLanguageModelsResponse\n   */\n  export interface AsProtobufJSON {\n    lmPipelineIds?: LanguageModelPipelineId.AsProtobufJSON[] | null;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\n\n/**\n * Specific GrpcClientSettings for Speech2Text.\n * Use it only if your default settings are not set or the service requires other settings.\n */\nexport const GRPC_SPEECH2_TEXT_CLIENT_SETTINGS = new InjectionToken<any>(\n  'GRPC_SPEECH2_TEXT_CLIENT_SETTINGS'\n);\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcEvent,\n  GrpcMetadata\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './speech-to-text.pb';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nimport { GRPC_SPEECH2_TEXT_CLIENT_SETTINGS } from './speech-to-text.pbconf';\n/**\n * Service client implementation for ondewo.s2t.Speech2Text\n */\n@Injectable({ providedIn: 'any' })\nexport class Speech2TextClient {\n  private client: GrpcClient<any>;\n\n  /**\n   * Raw RPC implementation for each service client method.\n   * The raw methods provide more control on the incoming data and events. E.g. they can be useful to read status `OK` metadata.\n   * Attention: these methods do not throw errors when non-zero status codes are received.\n   */\n  $raw = {\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/TranscribeFile\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.TranscribeFileResponse>>\n     */\n    transcribeFile: (\n      requestData: thisProto.TranscribeFileRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.TranscribeFileResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/TranscribeFile',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.TranscribeFileRequest,\n        responseClass: thisProto.TranscribeFileResponse\n      });\n    },\n    /**\n     * Server streaming RPC for /ondewo.s2t.Speech2Text/TranscribeStream\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.TranscribeStreamResponse>>\n     */\n    transcribeStream: (\n      requestData: thisProto.TranscribeStreamRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.TranscribeStreamResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.serverStream,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/TranscribeStream',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.TranscribeStreamRequest,\n        responseClass: thisProto.TranscribeStreamResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/GetS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Speech2TextConfig>>\n     */\n    getS2tPipeline: (\n      requestData: thisProto.S2tPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Speech2TextConfig>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/GetS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.S2tPipelineId,\n        responseClass: thisProto.Speech2TextConfig\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/CreateS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.S2tPipelineId>>\n     */\n    createS2tPipeline: (\n      requestData: thisProto.Speech2TextConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.S2tPipelineId>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/CreateS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Speech2TextConfig,\n        responseClass: thisProto.S2tPipelineId\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/DeleteS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    deleteS2tPipeline: (\n      requestData: thisProto.S2tPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/DeleteS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.S2tPipelineId,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/UpdateS2tPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    updateS2tPipeline: (\n      requestData: thisProto.Speech2TextConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/UpdateS2tPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Speech2TextConfig,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tPipelines\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tPipelinesResponse>>\n     */\n    listS2tPipelines: (\n      requestData: thisProto.ListS2tPipelinesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tPipelinesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tPipelines',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tPipelinesRequest,\n        responseClass: thisProto.ListS2tPipelinesResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tLanguages\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tLanguagesResponse>>\n     */\n    listS2tLanguages: (\n      requestData: thisProto.ListS2tLanguagesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tLanguagesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tLanguages',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tLanguagesRequest,\n        responseClass: thisProto.ListS2tLanguagesResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tDomains\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tDomainsResponse>>\n     */\n    listS2tDomains: (\n      requestData: thisProto.ListS2tDomainsRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tDomainsResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tDomains',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tDomainsRequest,\n        responseClass: thisProto.ListS2tDomainsResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/GetServiceInfo\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.GetServiceInfoResponse>>\n     */\n    getServiceInfo: (\n      requestData: googleProtobuf000.Empty,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.GetServiceInfoResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/GetServiceInfo',\n        requestData,\n        requestMetadata,\n        requestClass: googleProtobuf000.Empty,\n        responseClass: thisProto.GetServiceInfoResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tLanguageModels\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListS2tLanguageModelsResponse>>\n     */\n    listS2tLanguageModels: (\n      requestData: thisProto.ListS2tLanguageModelsRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListS2tLanguageModelsResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.s2t.Speech2Text/ListS2tLanguageModels',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListS2tLanguageModelsRequest,\n        responseClass: thisProto.ListS2tLanguageModelsResponse\n      });\n    }\n  };\n\n  constructor(\n    @Optional() @Inject(GRPC_SPEECH2_TEXT_CLIENT_SETTINGS) settings: any,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory<any>,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.s2t.Speech2Text',\n      settings\n    );\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/TranscribeFile\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.TranscribeFileResponse>\n   */\n  transcribeFile(\n    requestData: thisProto.TranscribeFileRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.TranscribeFileResponse> {\n    return this.$raw\n      .transcribeFile(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Server streaming RPC for /ondewo.s2t.Speech2Text/TranscribeStream\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.TranscribeStreamResponse>\n   */\n  transcribeStream(\n    requestData: thisProto.TranscribeStreamRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.TranscribeStreamResponse> {\n    return this.$raw\n      .transcribeStream(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/GetS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Speech2TextConfig>\n   */\n  getS2tPipeline(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Speech2TextConfig> {\n    return this.$raw\n      .getS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/CreateS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.S2tPipelineId>\n   */\n  createS2tPipeline(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.S2tPipelineId> {\n    return this.$raw\n      .createS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/DeleteS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  deleteS2tPipeline(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .deleteS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/UpdateS2tPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  updateS2tPipeline(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .updateS2tPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tPipelines\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tPipelinesResponse>\n   */\n  listS2tPipelines(\n    requestData: thisProto.ListS2tPipelinesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tPipelinesResponse> {\n    return this.$raw\n      .listS2tPipelines(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tLanguages\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tLanguagesResponse>\n   */\n  listS2tLanguages(\n    requestData: thisProto.ListS2tLanguagesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tLanguagesResponse> {\n    return this.$raw\n      .listS2tLanguages(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tDomains\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tDomainsResponse>\n   */\n  listS2tDomains(\n    requestData: thisProto.ListS2tDomainsRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tDomainsResponse> {\n    return this.$raw\n      .listS2tDomains(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/GetServiceInfo\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.GetServiceInfoResponse>\n   */\n  getServiceInfo(\n    requestData: googleProtobuf000.Empty,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.GetServiceInfoResponse> {\n    return this.$raw\n      .getServiceInfo(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.s2t.Speech2Text/ListS2tLanguageModels\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListS2tLanguageModelsResponse>\n   */\n  listS2tLanguageModels(\n    requestData: thisProto.ListS2tLanguageModelsRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListS2tLanguageModelsResponse> {\n    return this.$raw\n      .listS2tLanguageModels(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n}\n"]}