{"version":3,"file":"ondewo-s2t-client-angular.umd.js","sources":["../../api/ondewo/s2t/speech-to-text.pbconf.ts","../../api/ondewo/s2t/speech-to-text.pb.ts","../../api/google/protobuf/empty.pb.ts","../../api/ondewo/s2t/speech-to-text.pbsc.ts","../../ondewo-s2t-client-angular.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\nimport { GrpcClientSettings } from '@ngx-grpc/common';\n/*\n  To configure the services you need to provide a configuration for each of them.\n\n  E.g. you can create a module where you configure all of them and then import this module into your AppModule:\n\n  const grpcSettings = { host: environment.grpcHost };\n\n  @NgModule({\n    providers: [\n      { provide: GRPC_SPEECH2_TEXT_CLIENT_SETTINGS, useValue: grpcSettings },\n    ],\n  })\n  export class GrpcConfigModule { }\n*/\nexport const GRPC_SPEECH2_TEXT_CLIENT_SETTINGS = new InjectionToken<\n  GrpcClientSettings\n>('GRPC_SPEECH2_TEXT_CLIENT_SETTINGS');\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { GrpcMessage, RecursivePartial } from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '../../google/protobuf/empty.pb';\nexport enum CTCDecoding {\n  greedy = 0,\n  beamSearchWithLm = 1\n}\nexport class TranscribeStreamRequest implements GrpcMessage {\n  static toBinary(instance: TranscribeStreamRequest) {\n    const writer = new BinaryWriter();\n    TranscribeStreamRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new TranscribeStreamRequest();\n    TranscribeStreamRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: TranscribeStreamRequest) {\n    instance.s2tPipelineId = instance.s2tPipelineId || '';\n    instance.audioChunk = instance.audioChunk || new Uint8Array();\n    instance.ctcDecoding = instance.ctcDecoding || 0;\n    instance.spellingCorrection = instance.spellingCorrection || false;\n    instance.disableNormalization = instance.disableNormalization || false;\n    instance.endOfStream = instance.endOfStream || false;\n  }\n\n  static fromBinaryReader(\n    instance: TranscribeStreamRequest,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.s2tPipelineId = reader.readString();\n          break;\n        case 2:\n          instance.audioChunk = reader.readBytes();\n          break;\n        case 3:\n          instance.ctcDecoding = reader.readEnum();\n          break;\n        case 4:\n          instance.spellingCorrection = reader.readBool();\n          break;\n        case 5:\n          instance.disableNormalization = reader.readBool();\n          break;\n        case 6:\n          instance.endOfStream = reader.readBool();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    TranscribeStreamRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: TranscribeStreamRequest,\n    writer: BinaryWriter\n  ) {\n    if (instance.s2tPipelineId) {\n      writer.writeString(1, instance.s2tPipelineId);\n    }\n    if (instance.audioChunk && instance.audioChunk.length) {\n      writer.writeBytes(2, instance.audioChunk);\n    }\n    if (instance.ctcDecoding) {\n      writer.writeEnum(3, instance.ctcDecoding);\n    }\n    if (instance.spellingCorrection) {\n      writer.writeBool(4, instance.spellingCorrection);\n    }\n    if (instance.disableNormalization) {\n      writer.writeBool(5, instance.disableNormalization);\n    }\n    if (instance.endOfStream) {\n      writer.writeBool(6, instance.endOfStream);\n    }\n  }\n\n  private _s2tPipelineId?: string;\n  private _audioChunk?: Uint8Array;\n  private _ctcDecoding?: CTCDecoding;\n  private _spellingCorrection?: boolean;\n  private _disableNormalization?: boolean;\n  private _endOfStream?: boolean;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param TranscribeStreamRequest value\n   */\n  constructor(value?: RecursivePartial<TranscribeStreamRequest>) {\n    value = value || {};\n    this.s2tPipelineId = value.s2tPipelineId;\n    this.audioChunk = value.audioChunk;\n    this.ctcDecoding = value.ctcDecoding;\n    this.spellingCorrection = value.spellingCorrection;\n    this.disableNormalization = value.disableNormalization;\n    this.endOfStream = value.endOfStream;\n    TranscribeStreamRequest.refineValues(this);\n  }\n  get s2tPipelineId(): string | undefined {\n    return this._s2tPipelineId;\n  }\n  set s2tPipelineId(value: string | undefined) {\n    this._s2tPipelineId = value;\n  }\n  get audioChunk(): Uint8Array | undefined {\n    return this._audioChunk;\n  }\n  set audioChunk(value: Uint8Array | undefined) {\n    this._audioChunk = value;\n  }\n  get ctcDecoding(): CTCDecoding | undefined {\n    return this._ctcDecoding;\n  }\n  set ctcDecoding(value: CTCDecoding | undefined) {\n    this._ctcDecoding = value;\n  }\n  get spellingCorrection(): boolean | undefined {\n    return this._spellingCorrection;\n  }\n  set spellingCorrection(value: boolean | undefined) {\n    this._spellingCorrection = value;\n  }\n  get disableNormalization(): boolean | undefined {\n    return this._disableNormalization;\n  }\n  set disableNormalization(value: boolean | undefined) {\n    this._disableNormalization = value;\n  }\n  get endOfStream(): boolean | undefined {\n    return this._endOfStream;\n  }\n  set endOfStream(value: boolean | undefined) {\n    this._endOfStream = value;\n  }\n  toObject() {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      audioChunk: this.audioChunk\n        ? this.audioChunk.subarray(0)\n        : new Uint8Array(),\n      ctcDecoding: this.ctcDecoding,\n      spellingCorrection: this.spellingCorrection,\n      disableNormalization: this.disableNormalization,\n      endOfStream: this.endOfStream\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module TranscribeStreamRequest {}\nexport class TranscribeStreamResponse implements GrpcMessage {\n  static toBinary(instance: TranscribeStreamResponse) {\n    const writer = new BinaryWriter();\n    TranscribeStreamResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new TranscribeStreamResponse();\n    TranscribeStreamResponse.fromBinaryReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  static refineValues(instance: TranscribeStreamResponse) {\n    instance.transcription = instance.transcription || '';\n    instance.time = instance.time || 0;\n    instance.final = instance.final || false;\n  }\n\n  static fromBinaryReader(\n    instance: TranscribeStreamResponse,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.transcription = reader.readString();\n          break;\n        case 2:\n          instance.time = reader.readFloat();\n          break;\n        case 3:\n          instance.final = reader.readBool();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    TranscribeStreamResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: TranscribeStreamResponse,\n    writer: BinaryWriter\n  ) {\n    if (instance.transcription) {\n      writer.writeString(1, instance.transcription);\n    }\n    if (instance.time) {\n      writer.writeFloat(2, instance.time);\n    }\n    if (instance.final) {\n      writer.writeBool(3, instance.final);\n    }\n  }\n\n  private _transcription?: string;\n  private _time?: number;\n  private _final?: boolean;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param TranscribeStreamResponse value\n   */\n  constructor(value?: RecursivePartial<TranscribeStreamResponse>) {\n    value = value || {};\n    this.transcription = value.transcription;\n    this.time = value.time;\n    this.final = value.final;\n    TranscribeStreamResponse.refineValues(this);\n  }\n  get transcription(): string | undefined {\n    return this._transcription;\n  }\n  set transcription(value: string | undefined) {\n    this._transcription = value;\n  }\n  get time(): number | undefined {\n    return this._time;\n  }\n  set time(value: number | undefined) {\n    this._time = value;\n  }\n  get final(): boolean | undefined {\n    return this._final;\n  }\n  set final(value: boolean | undefined) {\n    this._final = value;\n  }\n  toObject() {\n    return {\n      transcription: this.transcription,\n      time: this.time,\n      final: this.final\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module TranscribeStreamResponse {}\nexport class TranscribeFileRequest implements GrpcMessage {\n  static toBinary(instance: TranscribeFileRequest) {\n    const writer = new BinaryWriter();\n    TranscribeFileRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new TranscribeFileRequest();\n    TranscribeFileRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: TranscribeFileRequest) {\n    instance.s2tPipelineId = instance.s2tPipelineId || '';\n    instance.audioFile = instance.audioFile || new Uint8Array();\n    instance.ctcDecoding = instance.ctcDecoding || 0;\n    instance.spellingCorrection = instance.spellingCorrection || false;\n    instance.disableNormalization = instance.disableNormalization || false;\n    instance.includeTiming = instance.includeTiming || false;\n  }\n\n  static fromBinaryReader(\n    instance: TranscribeFileRequest,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.s2tPipelineId = reader.readString();\n          break;\n        case 2:\n          instance.audioFile = reader.readBytes();\n          break;\n        case 3:\n          instance.ctcDecoding = reader.readEnum();\n          break;\n        case 4:\n          instance.spellingCorrection = reader.readBool();\n          break;\n        case 5:\n          instance.disableNormalization = reader.readBool();\n          break;\n        case 6:\n          instance.includeTiming = reader.readBool();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    TranscribeFileRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: TranscribeFileRequest, writer: BinaryWriter) {\n    if (instance.s2tPipelineId) {\n      writer.writeString(1, instance.s2tPipelineId);\n    }\n    if (instance.audioFile && instance.audioFile.length) {\n      writer.writeBytes(2, instance.audioFile);\n    }\n    if (instance.ctcDecoding) {\n      writer.writeEnum(3, instance.ctcDecoding);\n    }\n    if (instance.spellingCorrection) {\n      writer.writeBool(4, instance.spellingCorrection);\n    }\n    if (instance.disableNormalization) {\n      writer.writeBool(5, instance.disableNormalization);\n    }\n    if (instance.includeTiming) {\n      writer.writeBool(6, instance.includeTiming);\n    }\n  }\n\n  private _s2tPipelineId?: string;\n  private _audioFile?: Uint8Array;\n  private _ctcDecoding?: CTCDecoding;\n  private _spellingCorrection?: boolean;\n  private _disableNormalization?: boolean;\n  private _includeTiming?: boolean;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param TranscribeFileRequest value\n   */\n  constructor(value?: RecursivePartial<TranscribeFileRequest>) {\n    value = value || {};\n    this.s2tPipelineId = value.s2tPipelineId;\n    this.audioFile = value.audioFile;\n    this.ctcDecoding = value.ctcDecoding;\n    this.spellingCorrection = value.spellingCorrection;\n    this.disableNormalization = value.disableNormalization;\n    this.includeTiming = value.includeTiming;\n    TranscribeFileRequest.refineValues(this);\n  }\n  get s2tPipelineId(): string | undefined {\n    return this._s2tPipelineId;\n  }\n  set s2tPipelineId(value: string | undefined) {\n    this._s2tPipelineId = value;\n  }\n  get audioFile(): Uint8Array | undefined {\n    return this._audioFile;\n  }\n  set audioFile(value: Uint8Array | undefined) {\n    this._audioFile = value;\n  }\n  get ctcDecoding(): CTCDecoding | undefined {\n    return this._ctcDecoding;\n  }\n  set ctcDecoding(value: CTCDecoding | undefined) {\n    this._ctcDecoding = value;\n  }\n  get spellingCorrection(): boolean | undefined {\n    return this._spellingCorrection;\n  }\n  set spellingCorrection(value: boolean | undefined) {\n    this._spellingCorrection = value;\n  }\n  get disableNormalization(): boolean | undefined {\n    return this._disableNormalization;\n  }\n  set disableNormalization(value: boolean | undefined) {\n    this._disableNormalization = value;\n  }\n  get includeTiming(): boolean | undefined {\n    return this._includeTiming;\n  }\n  set includeTiming(value: boolean | undefined) {\n    this._includeTiming = value;\n  }\n  toObject() {\n    return {\n      s2tPipelineId: this.s2tPipelineId,\n      audioFile: this.audioFile ? this.audioFile.subarray(0) : new Uint8Array(),\n      ctcDecoding: this.ctcDecoding,\n      spellingCorrection: this.spellingCorrection,\n      disableNormalization: this.disableNormalization,\n      includeTiming: this.includeTiming\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module TranscribeFileRequest {}\nexport class TranscribeFileResponse implements GrpcMessage {\n  static toBinary(instance: TranscribeFileResponse) {\n    const writer = new BinaryWriter();\n    TranscribeFileResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new TranscribeFileResponse();\n    TranscribeFileResponse.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: TranscribeFileResponse) {\n    instance.transcription = instance.transcription || '';\n    instance.time = instance.time || 0;\n    instance.wordTiming = instance.wordTiming || [];\n  }\n\n  static fromBinaryReader(\n    instance: TranscribeFileResponse,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.transcription = reader.readString();\n          break;\n        case 2:\n          instance.time = reader.readFloat();\n          break;\n        case 3:\n          const messageInitializer3 = new WordTiming();\n          reader.readMessage(messageInitializer3, WordTiming.fromBinaryReader);\n          (instance.wordTiming = instance.wordTiming || []).push(\n            messageInitializer3\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    TranscribeFileResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: TranscribeFileResponse,\n    writer: BinaryWriter\n  ) {\n    if (instance.transcription) {\n      writer.writeString(1, instance.transcription);\n    }\n    if (instance.time) {\n      writer.writeFloat(2, instance.time);\n    }\n    if (instance.wordTiming && instance.wordTiming.length) {\n      writer.writeRepeatedMessage(\n        3,\n        instance.wordTiming as any,\n        WordTiming.toBinaryWriter\n      );\n    }\n  }\n\n  private _transcription?: string;\n  private _time?: number;\n  private _wordTiming?: WordTiming[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param TranscribeFileResponse value\n   */\n  constructor(value?: RecursivePartial<TranscribeFileResponse>) {\n    value = value || {};\n    this.transcription = value.transcription;\n    this.time = value.time;\n    this.wordTiming = (value.wordTiming || []).map(m => new WordTiming(m));\n    TranscribeFileResponse.refineValues(this);\n  }\n  get transcription(): string | undefined {\n    return this._transcription;\n  }\n  set transcription(value: string | undefined) {\n    this._transcription = value;\n  }\n  get time(): number | undefined {\n    return this._time;\n  }\n  set time(value: number | undefined) {\n    this._time = value;\n  }\n  get wordTiming(): WordTiming[] | undefined {\n    return this._wordTiming;\n  }\n  set wordTiming(value: WordTiming[] | undefined) {\n    this._wordTiming = value;\n  }\n  toObject() {\n    return {\n      transcription: this.transcription,\n      time: this.time,\n      wordTiming: (this.wordTiming || []).map(m => m.toObject())\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module TranscribeFileResponse {}\nexport class WordTiming implements GrpcMessage {\n  static toBinary(instance: WordTiming) {\n    const writer = new BinaryWriter();\n    WordTiming.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new WordTiming();\n    WordTiming.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: WordTiming) {\n    instance.word = instance.word || '';\n    instance.begin = instance.begin || 0;\n    instance.end = instance.end || 0;\n  }\n\n  static fromBinaryReader(instance: WordTiming, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.word = reader.readString();\n          break;\n        case 2:\n          instance.begin = reader.readInt32();\n          break;\n        case 3:\n          instance.end = reader.readInt32();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    WordTiming.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: WordTiming, writer: BinaryWriter) {\n    if (instance.word) {\n      writer.writeString(1, instance.word);\n    }\n    if (instance.begin) {\n      writer.writeInt32(2, instance.begin);\n    }\n    if (instance.end) {\n      writer.writeInt32(3, instance.end);\n    }\n  }\n\n  private _word?: string;\n  private _begin?: number;\n  private _end?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param WordTiming value\n   */\n  constructor(value?: RecursivePartial<WordTiming>) {\n    value = value || {};\n    this.word = value.word;\n    this.begin = value.begin;\n    this.end = value.end;\n    WordTiming.refineValues(this);\n  }\n  get word(): string | undefined {\n    return this._word;\n  }\n  set word(value: string | undefined) {\n    this._word = value;\n  }\n  get begin(): number | undefined {\n    return this._begin;\n  }\n  set begin(value: number | undefined) {\n    this._begin = value;\n  }\n  get end(): number | undefined {\n    return this._end;\n  }\n  set end(value: number | undefined) {\n    this._end = value;\n  }\n  toObject() {\n    return {\n      word: this.word,\n      begin: this.begin,\n      end: this.end\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module WordTiming {}\nexport class S2tPipelineId implements GrpcMessage {\n  static toBinary(instance: S2tPipelineId) {\n    const writer = new BinaryWriter();\n    S2tPipelineId.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new S2tPipelineId();\n    S2tPipelineId.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: S2tPipelineId) {\n    instance.id = instance.id || '';\n  }\n\n  static fromBinaryReader(instance: S2tPipelineId, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.id = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    S2tPipelineId.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: S2tPipelineId, writer: BinaryWriter) {\n    if (instance.id) {\n      writer.writeString(1, instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param S2tPipelineId value\n   */\n  constructor(value?: RecursivePartial<S2tPipelineId>) {\n    value = value || {};\n    this.id = value.id;\n    S2tPipelineId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  toObject() {\n    return {\n      id: this.id\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module S2tPipelineId {}\nexport class ListS2tPipelinesRequest implements GrpcMessage {\n  static toBinary(instance: ListS2tPipelinesRequest) {\n    const writer = new BinaryWriter();\n    ListS2tPipelinesRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListS2tPipelinesRequest();\n    ListS2tPipelinesRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: ListS2tPipelinesRequest) {\n    instance.languages = instance.languages || [];\n    instance.pipelineOwners = instance.pipelineOwners || [];\n    instance.domains = instance.domains || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListS2tPipelinesRequest,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.languages = instance.languages || []).push(\n            reader.readString()\n          );\n          break;\n        case 2:\n          (instance.pipelineOwners = instance.pipelineOwners || []).push(\n            reader.readString()\n          );\n          break;\n        case 3:\n          (instance.domains = instance.domains || []).push(reader.readString());\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListS2tPipelinesRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListS2tPipelinesRequest,\n    writer: BinaryWriter\n  ) {\n    if (instance.languages && instance.languages.length) {\n      writer.writeRepeatedString(1, instance.languages);\n    }\n    if (instance.pipelineOwners && instance.pipelineOwners.length) {\n      writer.writeRepeatedString(2, instance.pipelineOwners);\n    }\n    if (instance.domains && instance.domains.length) {\n      writer.writeRepeatedString(3, instance.domains);\n    }\n  }\n\n  private _languages?: string[];\n  private _pipelineOwners?: string[];\n  private _domains?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListS2tPipelinesRequest value\n   */\n  constructor(value?: RecursivePartial<ListS2tPipelinesRequest>) {\n    value = value || {};\n    this.languages = (value.languages || []).slice();\n    this.pipelineOwners = (value.pipelineOwners || []).slice();\n    this.domains = (value.domains || []).slice();\n    ListS2tPipelinesRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  toObject() {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListS2tPipelinesRequest {}\nexport class ListS2tPipelinesResponse implements GrpcMessage {\n  static toBinary(instance: ListS2tPipelinesResponse) {\n    const writer = new BinaryWriter();\n    ListS2tPipelinesResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListS2tPipelinesResponse();\n    ListS2tPipelinesResponse.fromBinaryReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  static refineValues(instance: ListS2tPipelinesResponse) {\n    instance.pipelineConfigs = instance.pipelineConfigs || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListS2tPipelinesResponse,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Speech2TextConfig();\n          reader.readMessage(\n            messageInitializer1,\n            Speech2TextConfig.fromBinaryReader\n          );\n          (instance.pipelineConfigs = instance.pipelineConfigs || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListS2tPipelinesResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListS2tPipelinesResponse,\n    writer: BinaryWriter\n  ) {\n    if (instance.pipelineConfigs && instance.pipelineConfigs.length) {\n      writer.writeRepeatedMessage(\n        1,\n        instance.pipelineConfigs as any,\n        Speech2TextConfig.toBinaryWriter\n      );\n    }\n  }\n\n  private _pipelineConfigs?: Speech2TextConfig[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListS2tPipelinesResponse value\n   */\n  constructor(value?: RecursivePartial<ListS2tPipelinesResponse>) {\n    value = value || {};\n    this.pipelineConfigs = (value.pipelineConfigs || []).map(\n      m => new Speech2TextConfig(m)\n    );\n    ListS2tPipelinesResponse.refineValues(this);\n  }\n  get pipelineConfigs(): Speech2TextConfig[] | undefined {\n    return this._pipelineConfigs;\n  }\n  set pipelineConfigs(value: Speech2TextConfig[] | undefined) {\n    this._pipelineConfigs = value;\n  }\n  toObject() {\n    return {\n      pipelineConfigs: (this.pipelineConfigs || []).map(m => m.toObject())\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListS2tPipelinesResponse {}\nexport class ListS2tLanguagesRequest implements GrpcMessage {\n  static toBinary(instance: ListS2tLanguagesRequest) {\n    const writer = new BinaryWriter();\n    ListS2tLanguagesRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguagesRequest();\n    ListS2tLanguagesRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: ListS2tLanguagesRequest) {\n    instance.domains = instance.domains || [];\n    instance.pipelineOwners = instance.pipelineOwners || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListS2tLanguagesRequest,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.domains = instance.domains || []).push(reader.readString());\n          break;\n        case 2:\n          (instance.pipelineOwners = instance.pipelineOwners || []).push(\n            reader.readString()\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListS2tLanguagesRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListS2tLanguagesRequest,\n    writer: BinaryWriter\n  ) {\n    if (instance.domains && instance.domains.length) {\n      writer.writeRepeatedString(1, instance.domains);\n    }\n    if (instance.pipelineOwners && instance.pipelineOwners.length) {\n      writer.writeRepeatedString(2, instance.pipelineOwners);\n    }\n  }\n\n  private _domains?: string[];\n  private _pipelineOwners?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListS2tLanguagesRequest value\n   */\n  constructor(value?: RecursivePartial<ListS2tLanguagesRequest>) {\n    value = value || {};\n    this.domains = (value.domains || []).slice();\n    this.pipelineOwners = (value.pipelineOwners || []).slice();\n    ListS2tLanguagesRequest.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  toObject() {\n    return {\n      domains: (this.domains || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListS2tLanguagesRequest {}\nexport class ListS2tLanguagesResponse implements GrpcMessage {\n  static toBinary(instance: ListS2tLanguagesResponse) {\n    const writer = new BinaryWriter();\n    ListS2tLanguagesResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListS2tLanguagesResponse();\n    ListS2tLanguagesResponse.fromBinaryReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  static refineValues(instance: ListS2tLanguagesResponse) {\n    instance.languages = instance.languages || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListS2tLanguagesResponse,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.languages = instance.languages || []).push(\n            reader.readString()\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListS2tLanguagesResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListS2tLanguagesResponse,\n    writer: BinaryWriter\n  ) {\n    if (instance.languages && instance.languages.length) {\n      writer.writeRepeatedString(1, instance.languages);\n    }\n  }\n\n  private _languages?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListS2tLanguagesResponse value\n   */\n  constructor(value?: RecursivePartial<ListS2tLanguagesResponse>) {\n    value = value || {};\n    this.languages = (value.languages || []).slice();\n    ListS2tLanguagesResponse.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  toObject() {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListS2tLanguagesResponse {}\nexport class ListS2tDomainsRequest implements GrpcMessage {\n  static toBinary(instance: ListS2tDomainsRequest) {\n    const writer = new BinaryWriter();\n    ListS2tDomainsRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListS2tDomainsRequest();\n    ListS2tDomainsRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: ListS2tDomainsRequest) {\n    instance.languages = instance.languages || [];\n    instance.pipelineOwners = instance.pipelineOwners || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListS2tDomainsRequest,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.languages = instance.languages || []).push(\n            reader.readString()\n          );\n          break;\n        case 2:\n          (instance.pipelineOwners = instance.pipelineOwners || []).push(\n            reader.readString()\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListS2tDomainsRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: ListS2tDomainsRequest, writer: BinaryWriter) {\n    if (instance.languages && instance.languages.length) {\n      writer.writeRepeatedString(1, instance.languages);\n    }\n    if (instance.pipelineOwners && instance.pipelineOwners.length) {\n      writer.writeRepeatedString(2, instance.pipelineOwners);\n    }\n  }\n\n  private _languages?: string[];\n  private _pipelineOwners?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListS2tDomainsRequest value\n   */\n  constructor(value?: RecursivePartial<ListS2tDomainsRequest>) {\n    value = value || {};\n    this.languages = (value.languages || []).slice();\n    this.pipelineOwners = (value.pipelineOwners || []).slice();\n    ListS2tDomainsRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  toObject() {\n    return {\n      languages: (this.languages || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListS2tDomainsRequest {}\nexport class ListS2tDomainsResponse implements GrpcMessage {\n  static toBinary(instance: ListS2tDomainsResponse) {\n    const writer = new BinaryWriter();\n    ListS2tDomainsResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListS2tDomainsResponse();\n    ListS2tDomainsResponse.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: ListS2tDomainsResponse) {\n    instance.domains = instance.domains || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListS2tDomainsResponse,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.domains = instance.domains || []).push(reader.readString());\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListS2tDomainsResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListS2tDomainsResponse,\n    writer: BinaryWriter\n  ) {\n    if (instance.domains && instance.domains.length) {\n      writer.writeRepeatedString(1, instance.domains);\n    }\n  }\n\n  private _domains?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListS2tDomainsResponse value\n   */\n  constructor(value?: RecursivePartial<ListS2tDomainsResponse>) {\n    value = value || {};\n    this.domains = (value.domains || []).slice();\n    ListS2tDomainsResponse.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  toObject() {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListS2tDomainsResponse {}\nexport class Speech2TextConfig implements GrpcMessage {\n  static toBinary(instance: Speech2TextConfig) {\n    const writer = new BinaryWriter();\n    Speech2TextConfig.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Speech2TextConfig();\n    Speech2TextConfig.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Speech2TextConfig) {\n    instance.id = instance.id || '';\n    instance.description = instance.description || undefined;\n    instance.active = instance.active || false;\n    instance.inference = instance.inference || undefined;\n    instance.streamingServer = instance.streamingServer || undefined;\n    instance.voiceActivityDetection =\n      instance.voiceActivityDetection || undefined;\n    instance.postProcessing = instance.postProcessing || undefined;\n    instance.logging = instance.logging || undefined;\n  }\n\n  static fromBinaryReader(instance: Speech2TextConfig, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.id = reader.readString();\n          break;\n        case 2:\n          instance.description = new Description();\n          reader.readMessage(\n            instance.description,\n            Description.fromBinaryReader\n          );\n          break;\n        case 3:\n          instance.active = reader.readBool();\n          break;\n        case 4:\n          instance.inference = new Inference();\n          reader.readMessage(instance.inference, Inference.fromBinaryReader);\n          break;\n        case 5:\n          instance.streamingServer = new StreamingServer();\n          reader.readMessage(\n            instance.streamingServer,\n            StreamingServer.fromBinaryReader\n          );\n          break;\n        case 6:\n          instance.voiceActivityDetection = new VoiceActivityDetection();\n          reader.readMessage(\n            instance.voiceActivityDetection,\n            VoiceActivityDetection.fromBinaryReader\n          );\n          break;\n        case 7:\n          instance.postProcessing = new PostProcessing();\n          reader.readMessage(\n            instance.postProcessing,\n            PostProcessing.fromBinaryReader\n          );\n          break;\n        case 8:\n          instance.logging = new Logging();\n          reader.readMessage(instance.logging, Logging.fromBinaryReader);\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Speech2TextConfig.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Speech2TextConfig, writer: BinaryWriter) {\n    if (instance.id) {\n      writer.writeString(1, instance.id);\n    }\n    if (instance.description) {\n      writer.writeMessage(\n        2,\n        instance.description as any,\n        Description.toBinaryWriter\n      );\n    }\n    if (instance.active) {\n      writer.writeBool(3, instance.active);\n    }\n    if (instance.inference) {\n      writer.writeMessage(\n        4,\n        instance.inference as any,\n        Inference.toBinaryWriter\n      );\n    }\n    if (instance.streamingServer) {\n      writer.writeMessage(\n        5,\n        instance.streamingServer as any,\n        StreamingServer.toBinaryWriter\n      );\n    }\n    if (instance.voiceActivityDetection) {\n      writer.writeMessage(\n        6,\n        instance.voiceActivityDetection as any,\n        VoiceActivityDetection.toBinaryWriter\n      );\n    }\n    if (instance.postProcessing) {\n      writer.writeMessage(\n        7,\n        instance.postProcessing as any,\n        PostProcessing.toBinaryWriter\n      );\n    }\n    if (instance.logging) {\n      writer.writeMessage(8, instance.logging as any, Logging.toBinaryWriter);\n    }\n  }\n\n  private _id?: string;\n  private _description?: Description;\n  private _active?: boolean;\n  private _inference?: Inference;\n  private _streamingServer?: StreamingServer;\n  private _voiceActivityDetection?: VoiceActivityDetection;\n  private _postProcessing?: PostProcessing;\n  private _logging?: Logging;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Speech2TextConfig value\n   */\n  constructor(value?: RecursivePartial<Speech2TextConfig>) {\n    value = value || {};\n    this.id = value.id;\n    this.description = value.description\n      ? new Description(value.description)\n      : undefined;\n    this.active = value.active;\n    this.inference = value.inference\n      ? new Inference(value.inference)\n      : undefined;\n    this.streamingServer = value.streamingServer\n      ? new StreamingServer(value.streamingServer)\n      : undefined;\n    this.voiceActivityDetection = value.voiceActivityDetection\n      ? new VoiceActivityDetection(value.voiceActivityDetection)\n      : undefined;\n    this.postProcessing = value.postProcessing\n      ? new PostProcessing(value.postProcessing)\n      : undefined;\n    this.logging = value.logging ? new Logging(value.logging) : undefined;\n    Speech2TextConfig.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get description(): Description | undefined {\n    return this._description;\n  }\n  set description(value: Description | undefined) {\n    this._description = value;\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get inference(): Inference | undefined {\n    return this._inference;\n  }\n  set inference(value: Inference | undefined) {\n    this._inference = value;\n  }\n  get streamingServer(): StreamingServer | undefined {\n    return this._streamingServer;\n  }\n  set streamingServer(value: StreamingServer | undefined) {\n    this._streamingServer = value;\n  }\n  get voiceActivityDetection(): VoiceActivityDetection | undefined {\n    return this._voiceActivityDetection;\n  }\n  set voiceActivityDetection(value: VoiceActivityDetection | undefined) {\n    this._voiceActivityDetection = value;\n  }\n  get postProcessing(): PostProcessing | undefined {\n    return this._postProcessing;\n  }\n  set postProcessing(value: PostProcessing | undefined) {\n    this._postProcessing = value;\n  }\n  get logging(): Logging | undefined {\n    return this._logging;\n  }\n  set logging(value: Logging | undefined) {\n    this._logging = value;\n  }\n  toObject() {\n    return {\n      id: this.id,\n      description: this.description ? this.description.toObject() : undefined,\n      active: this.active,\n      inference: this.inference ? this.inference.toObject() : undefined,\n      streamingServer: this.streamingServer\n        ? this.streamingServer.toObject()\n        : undefined,\n      voiceActivityDetection: this.voiceActivityDetection\n        ? this.voiceActivityDetection.toObject()\n        : undefined,\n      postProcessing: this.postProcessing\n        ? this.postProcessing.toObject()\n        : undefined,\n      logging: this.logging ? this.logging.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Speech2TextConfig {}\nexport class Description implements GrpcMessage {\n  static toBinary(instance: Description) {\n    const writer = new BinaryWriter();\n    Description.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Description();\n    Description.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Description) {\n    instance.language = instance.language || '';\n    instance.pipelineOwner = instance.pipelineOwner || '';\n    instance.domain = instance.domain || '';\n    instance.comments = instance.comments || '';\n  }\n\n  static fromBinaryReader(instance: Description, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.language = reader.readString();\n          break;\n        case 2:\n          instance.pipelineOwner = reader.readString();\n          break;\n        case 3:\n          instance.domain = reader.readString();\n          break;\n        case 4:\n          instance.comments = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Description.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Description, writer: BinaryWriter) {\n    if (instance.language) {\n      writer.writeString(1, instance.language);\n    }\n    if (instance.pipelineOwner) {\n      writer.writeString(2, instance.pipelineOwner);\n    }\n    if (instance.domain) {\n      writer.writeString(3, instance.domain);\n    }\n    if (instance.comments) {\n      writer.writeString(4, instance.comments);\n    }\n  }\n\n  private _language?: string;\n  private _pipelineOwner?: string;\n  private _domain?: string;\n  private _comments?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Description value\n   */\n  constructor(value?: RecursivePartial<Description>) {\n    value = value || {};\n    this.language = value.language;\n    this.pipelineOwner = value.pipelineOwner;\n    this.domain = value.domain;\n    this.comments = value.comments;\n    Description.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get pipelineOwner(): string | undefined {\n    return this._pipelineOwner;\n  }\n  set pipelineOwner(value: string | undefined) {\n    this._pipelineOwner = value;\n  }\n  get domain(): string | undefined {\n    return this._domain;\n  }\n  set domain(value: string | undefined) {\n    this._domain = value;\n  }\n  get comments(): string | undefined {\n    return this._comments;\n  }\n  set comments(value: string | undefined) {\n    this._comments = value;\n  }\n  toObject() {\n    return {\n      language: this.language,\n      pipelineOwner: this.pipelineOwner,\n      domain: this.domain,\n      comments: this.comments\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Description {}\nexport class Inference implements GrpcMessage {\n  static toBinary(instance: Inference) {\n    const writer = new BinaryWriter();\n    Inference.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Inference();\n    Inference.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Inference) {\n    instance.ctcAcousticModels = instance.ctcAcousticModels || undefined;\n    instance.languageModel = instance.languageModel || undefined;\n  }\n\n  static fromBinaryReader(instance: Inference, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.ctcAcousticModels = new CtcAcousticModels();\n          reader.readMessage(\n            instance.ctcAcousticModels,\n            CtcAcousticModels.fromBinaryReader\n          );\n          break;\n        case 2:\n          instance.languageModel = new LanguageModel();\n          reader.readMessage(\n            instance.languageModel,\n            LanguageModel.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Inference.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Inference, writer: BinaryWriter) {\n    if (instance.ctcAcousticModels) {\n      writer.writeMessage(\n        1,\n        instance.ctcAcousticModels as any,\n        CtcAcousticModels.toBinaryWriter\n      );\n    }\n    if (instance.languageModel) {\n      writer.writeMessage(\n        2,\n        instance.languageModel as any,\n        LanguageModel.toBinaryWriter\n      );\n    }\n  }\n\n  private _ctcAcousticModels?: CtcAcousticModels;\n  private _languageModel?: LanguageModel;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Inference value\n   */\n  constructor(value?: RecursivePartial<Inference>) {\n    value = value || {};\n    this.ctcAcousticModels = value.ctcAcousticModels\n      ? new CtcAcousticModels(value.ctcAcousticModels)\n      : undefined;\n    this.languageModel = value.languageModel\n      ? new LanguageModel(value.languageModel)\n      : undefined;\n    Inference.refineValues(this);\n  }\n  get ctcAcousticModels(): CtcAcousticModels | undefined {\n    return this._ctcAcousticModels;\n  }\n  set ctcAcousticModels(value: CtcAcousticModels | undefined) {\n    this._ctcAcousticModels = value;\n  }\n  get languageModel(): LanguageModel | undefined {\n    return this._languageModel;\n  }\n  set languageModel(value: LanguageModel | undefined) {\n    this._languageModel = value;\n  }\n  toObject() {\n    return {\n      ctcAcousticModels: this.ctcAcousticModels\n        ? this.ctcAcousticModels.toObject()\n        : undefined,\n      languageModel: this.languageModel\n        ? this.languageModel.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Inference {}\nexport class CtcAcousticModels implements GrpcMessage {\n  static toBinary(instance: CtcAcousticModels) {\n    const writer = new BinaryWriter();\n    CtcAcousticModels.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new CtcAcousticModels();\n    CtcAcousticModels.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: CtcAcousticModels) {\n    instance.type = instance.type || '';\n    instance.quartznet = instance.quartznet || undefined;\n    instance.quartznetTriton = instance.quartznetTriton || undefined;\n    instance.wav2vec = instance.wav2vec || undefined;\n  }\n\n  static fromBinaryReader(instance: CtcAcousticModels, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.type = reader.readString();\n          break;\n        case 2:\n          instance.quartznet = new Quartznet();\n          reader.readMessage(instance.quartznet, Quartznet.fromBinaryReader);\n          break;\n        case 3:\n          instance.quartznetTriton = new QuartznetTriton();\n          reader.readMessage(\n            instance.quartznetTriton,\n            QuartznetTriton.fromBinaryReader\n          );\n          break;\n        case 4:\n          instance.wav2vec = new Wav2Vec();\n          reader.readMessage(instance.wav2vec, Wav2Vec.fromBinaryReader);\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    CtcAcousticModels.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: CtcAcousticModels, writer: BinaryWriter) {\n    if (instance.type) {\n      writer.writeString(1, instance.type);\n    }\n    if (instance.quartznet) {\n      writer.writeMessage(\n        2,\n        instance.quartznet as any,\n        Quartznet.toBinaryWriter\n      );\n    }\n    if (instance.quartznetTriton) {\n      writer.writeMessage(\n        3,\n        instance.quartznetTriton as any,\n        QuartznetTriton.toBinaryWriter\n      );\n    }\n    if (instance.wav2vec) {\n      writer.writeMessage(4, instance.wav2vec as any, Wav2Vec.toBinaryWriter);\n    }\n  }\n\n  private _type?: string;\n  private _quartznet?: Quartznet;\n  private _quartznetTriton?: QuartznetTriton;\n  private _wav2vec?: Wav2Vec;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param CtcAcousticModels value\n   */\n  constructor(value?: RecursivePartial<CtcAcousticModels>) {\n    value = value || {};\n    this.type = value.type;\n    this.quartznet = value.quartznet\n      ? new Quartznet(value.quartznet)\n      : undefined;\n    this.quartznetTriton = value.quartznetTriton\n      ? new QuartznetTriton(value.quartznetTriton)\n      : undefined;\n    this.wav2vec = value.wav2vec ? new Wav2Vec(value.wav2vec) : undefined;\n    CtcAcousticModels.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get quartznet(): Quartznet | undefined {\n    return this._quartznet;\n  }\n  set quartznet(value: Quartznet | undefined) {\n    this._quartznet = value;\n  }\n  get quartznetTriton(): QuartznetTriton | undefined {\n    return this._quartznetTriton;\n  }\n  set quartznetTriton(value: QuartznetTriton | undefined) {\n    this._quartznetTriton = value;\n  }\n  get wav2vec(): Wav2Vec | undefined {\n    return this._wav2vec;\n  }\n  set wav2vec(value: Wav2Vec | undefined) {\n    this._wav2vec = value;\n  }\n  toObject() {\n    return {\n      type: this.type,\n      quartznet: this.quartznet ? this.quartznet.toObject() : undefined,\n      quartznetTriton: this.quartznetTriton\n        ? this.quartznetTriton.toObject()\n        : undefined,\n      wav2vec: this.wav2vec ? this.wav2vec.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module CtcAcousticModels {}\nexport class Wav2Vec implements GrpcMessage {\n  static toBinary(instance: Wav2Vec) {\n    const writer = new BinaryWriter();\n    Wav2Vec.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Wav2Vec();\n    Wav2Vec.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Wav2Vec) {\n    instance.modelPath = instance.modelPath || '';\n    instance.useGpu = instance.useGpu || false;\n  }\n\n  static fromBinaryReader(instance: Wav2Vec, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.modelPath = reader.readString();\n          break;\n        case 2:\n          instance.useGpu = reader.readBool();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Wav2Vec.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Wav2Vec, writer: BinaryWriter) {\n    if (instance.modelPath) {\n      writer.writeString(1, instance.modelPath);\n    }\n    if (instance.useGpu) {\n      writer.writeBool(2, instance.useGpu);\n    }\n  }\n\n  private _modelPath?: string;\n  private _useGpu?: boolean;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Wav2Vec value\n   */\n  constructor(value?: RecursivePartial<Wav2Vec>) {\n    value = value || {};\n    this.modelPath = value.modelPath;\n    this.useGpu = value.useGpu;\n    Wav2Vec.refineValues(this);\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n  toObject() {\n    return {\n      modelPath: this.modelPath,\n      useGpu: this.useGpu\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Wav2Vec {}\nexport class Quartznet implements GrpcMessage {\n  static toBinary(instance: Quartznet) {\n    const writer = new BinaryWriter();\n    Quartznet.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Quartznet();\n    Quartznet.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Quartznet) {\n    instance.configPath = instance.configPath || '';\n    instance.loadType = instance.loadType || '';\n    instance.ptFiles = instance.ptFiles || undefined;\n    instance.ckptFile = instance.ckptFile || undefined;\n  }\n\n  static fromBinaryReader(instance: Quartznet, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.configPath = reader.readString();\n          break;\n        case 2:\n          instance.loadType = reader.readString();\n          break;\n        case 3:\n          instance.ptFiles = new PtFiles();\n          reader.readMessage(instance.ptFiles, PtFiles.fromBinaryReader);\n          break;\n        case 4:\n          instance.ckptFile = new CkptFile();\n          reader.readMessage(instance.ckptFile, CkptFile.fromBinaryReader);\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Quartznet.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Quartznet, writer: BinaryWriter) {\n    if (instance.configPath) {\n      writer.writeString(1, instance.configPath);\n    }\n    if (instance.loadType) {\n      writer.writeString(2, instance.loadType);\n    }\n    if (instance.ptFiles) {\n      writer.writeMessage(3, instance.ptFiles as any, PtFiles.toBinaryWriter);\n    }\n    if (instance.ckptFile) {\n      writer.writeMessage(4, instance.ckptFile as any, CkptFile.toBinaryWriter);\n    }\n  }\n\n  private _configPath?: string;\n  private _loadType?: string;\n  private _ptFiles?: PtFiles;\n  private _ckptFile?: CkptFile;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Quartznet value\n   */\n  constructor(value?: RecursivePartial<Quartznet>) {\n    value = value || {};\n    this.configPath = value.configPath;\n    this.loadType = value.loadType;\n    this.ptFiles = value.ptFiles ? new PtFiles(value.ptFiles) : undefined;\n    this.ckptFile = value.ckptFile ? new CkptFile(value.ckptFile) : undefined;\n    Quartznet.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get loadType(): string | undefined {\n    return this._loadType;\n  }\n  set loadType(value: string | undefined) {\n    this._loadType = value;\n  }\n  get ptFiles(): PtFiles | undefined {\n    return this._ptFiles;\n  }\n  set ptFiles(value: PtFiles | undefined) {\n    this._ptFiles = value;\n  }\n  get ckptFile(): CkptFile | undefined {\n    return this._ckptFile;\n  }\n  set ckptFile(value: CkptFile | undefined) {\n    this._ckptFile = value;\n  }\n  toObject() {\n    return {\n      configPath: this.configPath,\n      loadType: this.loadType,\n      ptFiles: this.ptFiles ? this.ptFiles.toObject() : undefined,\n      ckptFile: this.ckptFile ? this.ckptFile.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Quartznet {}\nexport class PtFiles implements GrpcMessage {\n  static toBinary(instance: PtFiles) {\n    const writer = new BinaryWriter();\n    PtFiles.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new PtFiles();\n    PtFiles.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: PtFiles) {\n    instance.path = instance.path || '';\n    instance.step = instance.step || '';\n  }\n\n  static fromBinaryReader(instance: PtFiles, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.path = reader.readString();\n          break;\n        case 2:\n          instance.step = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    PtFiles.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: PtFiles, writer: BinaryWriter) {\n    if (instance.path) {\n      writer.writeString(1, instance.path);\n    }\n    if (instance.step) {\n      writer.writeString(2, instance.step);\n    }\n  }\n\n  private _path?: string;\n  private _step?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param PtFiles value\n   */\n  constructor(value?: RecursivePartial<PtFiles>) {\n    value = value || {};\n    this.path = value.path;\n    this.step = value.step;\n    PtFiles.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get step(): string | undefined {\n    return this._step;\n  }\n  set step(value: string | undefined) {\n    this._step = value;\n  }\n  toObject() {\n    return {\n      path: this.path,\n      step: this.step\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module PtFiles {}\nexport class CkptFile implements GrpcMessage {\n  static toBinary(instance: CkptFile) {\n    const writer = new BinaryWriter();\n    CkptFile.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new CkptFile();\n    CkptFile.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: CkptFile) {\n    instance.path = instance.path || '';\n  }\n\n  static fromBinaryReader(instance: CkptFile, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.path = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    CkptFile.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: CkptFile, writer: BinaryWriter) {\n    if (instance.path) {\n      writer.writeString(1, instance.path);\n    }\n  }\n\n  private _path?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param CkptFile value\n   */\n  constructor(value?: RecursivePartial<CkptFile>) {\n    value = value || {};\n    this.path = value.path;\n    CkptFile.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  toObject() {\n    return {\n      path: this.path\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module CkptFile {}\nexport class QuartznetTriton implements GrpcMessage {\n  static toBinary(instance: QuartznetTriton) {\n    const writer = new BinaryWriter();\n    QuartznetTriton.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new QuartznetTriton();\n    QuartznetTriton.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: QuartznetTriton) {\n    instance.configPath = instance.configPath || '';\n    instance.tritonUrl = instance.tritonUrl || '';\n    instance.tritonModel = instance.tritonModel || '';\n  }\n\n  static fromBinaryReader(instance: QuartznetTriton, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.configPath = reader.readString();\n          break;\n        case 2:\n          instance.tritonUrl = reader.readString();\n          break;\n        case 3:\n          instance.tritonModel = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    QuartznetTriton.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: QuartznetTriton, writer: BinaryWriter) {\n    if (instance.configPath) {\n      writer.writeString(1, instance.configPath);\n    }\n    if (instance.tritonUrl) {\n      writer.writeString(2, instance.tritonUrl);\n    }\n    if (instance.tritonModel) {\n      writer.writeString(3, instance.tritonModel);\n    }\n  }\n\n  private _configPath?: string;\n  private _tritonUrl?: string;\n  private _tritonModel?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param QuartznetTriton value\n   */\n  constructor(value?: RecursivePartial<QuartznetTriton>) {\n    value = value || {};\n    this.configPath = value.configPath;\n    this.tritonUrl = value.tritonUrl;\n    this.tritonModel = value.tritonModel;\n    QuartznetTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  get tritonModel(): string | undefined {\n    return this._tritonModel;\n  }\n  set tritonModel(value: string | undefined) {\n    this._tritonModel = value;\n  }\n  toObject() {\n    return {\n      configPath: this.configPath,\n      tritonUrl: this.tritonUrl,\n      tritonModel: this.tritonModel\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module QuartznetTriton {}\nexport class LanguageModel implements GrpcMessage {\n  static toBinary(instance: LanguageModel) {\n    const writer = new BinaryWriter();\n    LanguageModel.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new LanguageModel();\n    LanguageModel.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: LanguageModel) {\n    instance.path = instance.path || '';\n    instance.beamSize = instance.beamSize || '0';\n    instance.beamSearchScorerAlpha = instance.beamSearchScorerAlpha || 0;\n    instance.beamSearchScorerBeta = instance.beamSearchScorerBeta || 0;\n  }\n\n  static fromBinaryReader(instance: LanguageModel, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.path = reader.readString();\n          break;\n        case 2:\n          instance.beamSize = reader.readInt64String();\n          break;\n        case 3:\n          instance.beamSearchScorerAlpha = reader.readFloat();\n          break;\n        case 4:\n          instance.beamSearchScorerBeta = reader.readFloat();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    LanguageModel.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: LanguageModel, writer: BinaryWriter) {\n    if (instance.path) {\n      writer.writeString(1, instance.path);\n    }\n    if (instance.beamSize) {\n      writer.writeInt64String(2, instance.beamSize);\n    }\n    if (instance.beamSearchScorerAlpha) {\n      writer.writeFloat(3, instance.beamSearchScorerAlpha);\n    }\n    if (instance.beamSearchScorerBeta) {\n      writer.writeFloat(4, instance.beamSearchScorerBeta);\n    }\n  }\n\n  private _path?: string;\n  private _beamSize?: string;\n  private _beamSearchScorerAlpha?: number;\n  private _beamSearchScorerBeta?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param LanguageModel value\n   */\n  constructor(value?: RecursivePartial<LanguageModel>) {\n    value = value || {};\n    this.path = value.path;\n    this.beamSize = value.beamSize;\n    this.beamSearchScorerAlpha = value.beamSearchScorerAlpha;\n    this.beamSearchScorerBeta = value.beamSearchScorerBeta;\n    LanguageModel.refineValues(this);\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get beamSize(): string | undefined {\n    return this._beamSize;\n  }\n  set beamSize(value: string | undefined) {\n    this._beamSize = value;\n  }\n  get beamSearchScorerAlpha(): number | undefined {\n    return this._beamSearchScorerAlpha;\n  }\n  set beamSearchScorerAlpha(value: number | undefined) {\n    this._beamSearchScorerAlpha = value;\n  }\n  get beamSearchScorerBeta(): number | undefined {\n    return this._beamSearchScorerBeta;\n  }\n  set beamSearchScorerBeta(value: number | undefined) {\n    this._beamSearchScorerBeta = value;\n  }\n  toObject() {\n    return {\n      path: this.path,\n      beamSize: this.beamSize,\n      beamSearchScorerAlpha: this.beamSearchScorerAlpha,\n      beamSearchScorerBeta: this.beamSearchScorerBeta\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module LanguageModel {}\nexport class StreamingServer implements GrpcMessage {\n  static toBinary(instance: StreamingServer) {\n    const writer = new BinaryWriter();\n    StreamingServer.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new StreamingServer();\n    StreamingServer.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: StreamingServer) {\n    instance.host = instance.host || '';\n    instance.port = instance.port || '0';\n    instance.outputStyle = instance.outputStyle || '';\n    instance.streamingSpeechRecognition =\n      instance.streamingSpeechRecognition || undefined;\n  }\n\n  static fromBinaryReader(instance: StreamingServer, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.host = reader.readString();\n          break;\n        case 2:\n          instance.port = reader.readInt64String();\n          break;\n        case 3:\n          instance.outputStyle = reader.readString();\n          break;\n        case 4:\n          instance.streamingSpeechRecognition = new StreamingSpeechRecognition();\n          reader.readMessage(\n            instance.streamingSpeechRecognition,\n            StreamingSpeechRecognition.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    StreamingServer.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: StreamingServer, writer: BinaryWriter) {\n    if (instance.host) {\n      writer.writeString(1, instance.host);\n    }\n    if (instance.port) {\n      writer.writeInt64String(2, instance.port);\n    }\n    if (instance.outputStyle) {\n      writer.writeString(3, instance.outputStyle);\n    }\n    if (instance.streamingSpeechRecognition) {\n      writer.writeMessage(\n        4,\n        instance.streamingSpeechRecognition as any,\n        StreamingSpeechRecognition.toBinaryWriter\n      );\n    }\n  }\n\n  private _host?: string;\n  private _port?: string;\n  private _outputStyle?: string;\n  private _streamingSpeechRecognition?: StreamingSpeechRecognition;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param StreamingServer value\n   */\n  constructor(value?: RecursivePartial<StreamingServer>) {\n    value = value || {};\n    this.host = value.host;\n    this.port = value.port;\n    this.outputStyle = value.outputStyle;\n    this.streamingSpeechRecognition = value.streamingSpeechRecognition\n      ? new StreamingSpeechRecognition(value.streamingSpeechRecognition)\n      : undefined;\n    StreamingServer.refineValues(this);\n  }\n  get host(): string | undefined {\n    return this._host;\n  }\n  set host(value: string | undefined) {\n    this._host = value;\n  }\n  get port(): string | undefined {\n    return this._port;\n  }\n  set port(value: string | undefined) {\n    this._port = value;\n  }\n  get outputStyle(): string | undefined {\n    return this._outputStyle;\n  }\n  set outputStyle(value: string | undefined) {\n    this._outputStyle = value;\n  }\n  get streamingSpeechRecognition(): StreamingSpeechRecognition | undefined {\n    return this._streamingSpeechRecognition;\n  }\n  set streamingSpeechRecognition(\n    value: StreamingSpeechRecognition | undefined\n  ) {\n    this._streamingSpeechRecognition = value;\n  }\n  toObject() {\n    return {\n      host: this.host,\n      port: this.port,\n      outputStyle: this.outputStyle,\n      streamingSpeechRecognition: this.streamingSpeechRecognition\n        ? this.streamingSpeechRecognition.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module StreamingServer {}\nexport class StreamingSpeechRecognition implements GrpcMessage {\n  static toBinary(instance: StreamingSpeechRecognition) {\n    const writer = new BinaryWriter();\n    StreamingSpeechRecognition.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new StreamingSpeechRecognition();\n    StreamingSpeechRecognition.fromBinaryReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  static refineValues(instance: StreamingSpeechRecognition) {\n    instance.transcribeNotFinal = instance.transcribeNotFinal || false;\n    instance.ctcDecodingMethod = instance.ctcDecodingMethod || '';\n    instance.samplingRate = instance.samplingRate || '0';\n    instance.minAudioChunkSize = instance.minAudioChunkSize || '0';\n    instance.startOfUtteranceThreshold =\n      instance.startOfUtteranceThreshold || 0;\n    instance.endOfUtteranceThreshold = instance.endOfUtteranceThreshold || 0;\n  }\n\n  static fromBinaryReader(\n    instance: StreamingSpeechRecognition,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.transcribeNotFinal = reader.readBool();\n          break;\n        case 2:\n          instance.ctcDecodingMethod = reader.readString();\n          break;\n        case 3:\n          instance.samplingRate = reader.readInt64String();\n          break;\n        case 4:\n          instance.minAudioChunkSize = reader.readInt64String();\n          break;\n        case 5:\n          instance.startOfUtteranceThreshold = reader.readFloat();\n          break;\n        case 6:\n          instance.endOfUtteranceThreshold = reader.readFloat();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    StreamingSpeechRecognition.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: StreamingSpeechRecognition,\n    writer: BinaryWriter\n  ) {\n    if (instance.transcribeNotFinal) {\n      writer.writeBool(1, instance.transcribeNotFinal);\n    }\n    if (instance.ctcDecodingMethod) {\n      writer.writeString(2, instance.ctcDecodingMethod);\n    }\n    if (instance.samplingRate) {\n      writer.writeInt64String(3, instance.samplingRate);\n    }\n    if (instance.minAudioChunkSize) {\n      writer.writeInt64String(4, instance.minAudioChunkSize);\n    }\n    if (instance.startOfUtteranceThreshold) {\n      writer.writeFloat(5, instance.startOfUtteranceThreshold);\n    }\n    if (instance.endOfUtteranceThreshold) {\n      writer.writeFloat(6, instance.endOfUtteranceThreshold);\n    }\n  }\n\n  private _transcribeNotFinal?: boolean;\n  private _ctcDecodingMethod?: string;\n  private _samplingRate?: string;\n  private _minAudioChunkSize?: string;\n  private _startOfUtteranceThreshold?: number;\n  private _endOfUtteranceThreshold?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param StreamingSpeechRecognition value\n   */\n  constructor(value?: RecursivePartial<StreamingSpeechRecognition>) {\n    value = value || {};\n    this.transcribeNotFinal = value.transcribeNotFinal;\n    this.ctcDecodingMethod = value.ctcDecodingMethod;\n    this.samplingRate = value.samplingRate;\n    this.minAudioChunkSize = value.minAudioChunkSize;\n    this.startOfUtteranceThreshold = value.startOfUtteranceThreshold;\n    this.endOfUtteranceThreshold = value.endOfUtteranceThreshold;\n    StreamingSpeechRecognition.refineValues(this);\n  }\n  get transcribeNotFinal(): boolean | undefined {\n    return this._transcribeNotFinal;\n  }\n  set transcribeNotFinal(value: boolean | undefined) {\n    this._transcribeNotFinal = value;\n  }\n  get ctcDecodingMethod(): string | undefined {\n    return this._ctcDecodingMethod;\n  }\n  set ctcDecodingMethod(value: string | undefined) {\n    this._ctcDecodingMethod = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get minAudioChunkSize(): string | undefined {\n    return this._minAudioChunkSize;\n  }\n  set minAudioChunkSize(value: string | undefined) {\n    this._minAudioChunkSize = value;\n  }\n  get startOfUtteranceThreshold(): number | undefined {\n    return this._startOfUtteranceThreshold;\n  }\n  set startOfUtteranceThreshold(value: number | undefined) {\n    this._startOfUtteranceThreshold = value;\n  }\n  get endOfUtteranceThreshold(): number | undefined {\n    return this._endOfUtteranceThreshold;\n  }\n  set endOfUtteranceThreshold(value: number | undefined) {\n    this._endOfUtteranceThreshold = value;\n  }\n  toObject() {\n    return {\n      transcribeNotFinal: this.transcribeNotFinal,\n      ctcDecodingMethod: this.ctcDecodingMethod,\n      samplingRate: this.samplingRate,\n      minAudioChunkSize: this.minAudioChunkSize,\n      startOfUtteranceThreshold: this.startOfUtteranceThreshold,\n      endOfUtteranceThreshold: this.endOfUtteranceThreshold\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module StreamingSpeechRecognition {}\nexport class VoiceActivityDetection implements GrpcMessage {\n  static toBinary(instance: VoiceActivityDetection) {\n    const writer = new BinaryWriter();\n    VoiceActivityDetection.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new VoiceActivityDetection();\n    VoiceActivityDetection.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: VoiceActivityDetection) {\n    instance.active = instance.active || '';\n    instance.samplingRate = instance.samplingRate || '0';\n    instance.pyannote = instance.pyannote || undefined;\n    instance.matchbox = instance.matchbox || undefined;\n  }\n\n  static fromBinaryReader(\n    instance: VoiceActivityDetection,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.active = reader.readString();\n          break;\n        case 2:\n          instance.samplingRate = reader.readInt64String();\n          break;\n        case 3:\n          instance.pyannote = new Pyannote();\n          reader.readMessage(instance.pyannote, Pyannote.fromBinaryReader);\n          break;\n        case 4:\n          instance.matchbox = new Matchbox();\n          reader.readMessage(instance.matchbox, Matchbox.fromBinaryReader);\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    VoiceActivityDetection.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: VoiceActivityDetection,\n    writer: BinaryWriter\n  ) {\n    if (instance.active) {\n      writer.writeString(1, instance.active);\n    }\n    if (instance.samplingRate) {\n      writer.writeInt64String(2, instance.samplingRate);\n    }\n    if (instance.pyannote) {\n      writer.writeMessage(3, instance.pyannote as any, Pyannote.toBinaryWriter);\n    }\n    if (instance.matchbox) {\n      writer.writeMessage(4, instance.matchbox as any, Matchbox.toBinaryWriter);\n    }\n  }\n\n  private _active?: string;\n  private _samplingRate?: string;\n  private _pyannote?: Pyannote;\n  private _matchbox?: Matchbox;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param VoiceActivityDetection value\n   */\n  constructor(value?: RecursivePartial<VoiceActivityDetection>) {\n    value = value || {};\n    this.active = value.active;\n    this.samplingRate = value.samplingRate;\n    this.pyannote = value.pyannote ? new Pyannote(value.pyannote) : undefined;\n    this.matchbox = value.matchbox ? new Matchbox(value.matchbox) : undefined;\n    VoiceActivityDetection.refineValues(this);\n  }\n  get active(): string | undefined {\n    return this._active;\n  }\n  set active(value: string | undefined) {\n    this._active = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get pyannote(): Pyannote | undefined {\n    return this._pyannote;\n  }\n  set pyannote(value: Pyannote | undefined) {\n    this._pyannote = value;\n  }\n  get matchbox(): Matchbox | undefined {\n    return this._matchbox;\n  }\n  set matchbox(value: Matchbox | undefined) {\n    this._matchbox = value;\n  }\n  toObject() {\n    return {\n      active: this.active,\n      samplingRate: this.samplingRate,\n      pyannote: this.pyannote ? this.pyannote.toObject() : undefined,\n      matchbox: this.matchbox ? this.matchbox.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module VoiceActivityDetection {}\nexport class Pyannote implements GrpcMessage {\n  static toBinary(instance: Pyannote) {\n    const writer = new BinaryWriter();\n    Pyannote.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Pyannote();\n    Pyannote.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Pyannote) {\n    instance.modelPath = instance.modelPath || '';\n    instance.minAudioSize = instance.minAudioSize || '0';\n    instance.offset = instance.offset || 0;\n    instance.onset = instance.onset || 0;\n    instance.logScale = instance.logScale || false;\n    instance.minDurationOff = instance.minDurationOff || 0;\n    instance.minDurationOn = instance.minDurationOn || 0;\n  }\n\n  static fromBinaryReader(instance: Pyannote, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.modelPath = reader.readString();\n          break;\n        case 2:\n          instance.minAudioSize = reader.readInt64String();\n          break;\n        case 3:\n          instance.offset = reader.readFloat();\n          break;\n        case 4:\n          instance.onset = reader.readFloat();\n          break;\n        case 5:\n          instance.logScale = reader.readBool();\n          break;\n        case 6:\n          instance.minDurationOff = reader.readFloat();\n          break;\n        case 7:\n          instance.minDurationOn = reader.readFloat();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Pyannote.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Pyannote, writer: BinaryWriter) {\n    if (instance.modelPath) {\n      writer.writeString(1, instance.modelPath);\n    }\n    if (instance.minAudioSize) {\n      writer.writeInt64String(2, instance.minAudioSize);\n    }\n    if (instance.offset) {\n      writer.writeFloat(3, instance.offset);\n    }\n    if (instance.onset) {\n      writer.writeFloat(4, instance.onset);\n    }\n    if (instance.logScale) {\n      writer.writeBool(5, instance.logScale);\n    }\n    if (instance.minDurationOff) {\n      writer.writeFloat(6, instance.minDurationOff);\n    }\n    if (instance.minDurationOn) {\n      writer.writeFloat(7, instance.minDurationOn);\n    }\n  }\n\n  private _modelPath?: string;\n  private _minAudioSize?: string;\n  private _offset?: number;\n  private _onset?: number;\n  private _logScale?: boolean;\n  private _minDurationOff?: number;\n  private _minDurationOn?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Pyannote value\n   */\n  constructor(value?: RecursivePartial<Pyannote>) {\n    value = value || {};\n    this.modelPath = value.modelPath;\n    this.minAudioSize = value.minAudioSize;\n    this.offset = value.offset;\n    this.onset = value.onset;\n    this.logScale = value.logScale;\n    this.minDurationOff = value.minDurationOff;\n    this.minDurationOn = value.minDurationOn;\n    Pyannote.refineValues(this);\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  get minAudioSize(): string | undefined {\n    return this._minAudioSize;\n  }\n  set minAudioSize(value: string | undefined) {\n    this._minAudioSize = value;\n  }\n  get offset(): number | undefined {\n    return this._offset;\n  }\n  set offset(value: number | undefined) {\n    this._offset = value;\n  }\n  get onset(): number | undefined {\n    return this._onset;\n  }\n  set onset(value: number | undefined) {\n    this._onset = value;\n  }\n  get logScale(): boolean | undefined {\n    return this._logScale;\n  }\n  set logScale(value: boolean | undefined) {\n    this._logScale = value;\n  }\n  get minDurationOff(): number | undefined {\n    return this._minDurationOff;\n  }\n  set minDurationOff(value: number | undefined) {\n    this._minDurationOff = value;\n  }\n  get minDurationOn(): number | undefined {\n    return this._minDurationOn;\n  }\n  set minDurationOn(value: number | undefined) {\n    this._minDurationOn = value;\n  }\n  toObject() {\n    return {\n      modelPath: this.modelPath,\n      minAudioSize: this.minAudioSize,\n      offset: this.offset,\n      onset: this.onset,\n      logScale: this.logScale,\n      minDurationOff: this.minDurationOff,\n      minDurationOn: this.minDurationOn\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Pyannote {}\nexport class Matchbox implements GrpcMessage {\n  static toBinary(instance: Matchbox) {\n    const writer = new BinaryWriter();\n    Matchbox.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Matchbox();\n    Matchbox.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Matchbox) {\n    instance.modelConfig = instance.modelConfig || '';\n    instance.encoderPath = instance.encoderPath || '';\n    instance.decoderPath = instance.decoderPath || '';\n  }\n\n  static fromBinaryReader(instance: Matchbox, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.modelConfig = reader.readString();\n          break;\n        case 2:\n          instance.encoderPath = reader.readString();\n          break;\n        case 3:\n          instance.decoderPath = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Matchbox.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Matchbox, writer: BinaryWriter) {\n    if (instance.modelConfig) {\n      writer.writeString(1, instance.modelConfig);\n    }\n    if (instance.encoderPath) {\n      writer.writeString(2, instance.encoderPath);\n    }\n    if (instance.decoderPath) {\n      writer.writeString(3, instance.decoderPath);\n    }\n  }\n\n  private _modelConfig?: string;\n  private _encoderPath?: string;\n  private _decoderPath?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Matchbox value\n   */\n  constructor(value?: RecursivePartial<Matchbox>) {\n    value = value || {};\n    this.modelConfig = value.modelConfig;\n    this.encoderPath = value.encoderPath;\n    this.decoderPath = value.decoderPath;\n    Matchbox.refineValues(this);\n  }\n  get modelConfig(): string | undefined {\n    return this._modelConfig;\n  }\n  set modelConfig(value: string | undefined) {\n    this._modelConfig = value;\n  }\n  get encoderPath(): string | undefined {\n    return this._encoderPath;\n  }\n  set encoderPath(value: string | undefined) {\n    this._encoderPath = value;\n  }\n  get decoderPath(): string | undefined {\n    return this._decoderPath;\n  }\n  set decoderPath(value: string | undefined) {\n    this._decoderPath = value;\n  }\n  toObject() {\n    return {\n      modelConfig: this.modelConfig,\n      encoderPath: this.encoderPath,\n      decoderPath: this.decoderPath\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Matchbox {}\nexport class PostProcessing implements GrpcMessage {\n  static toBinary(instance: PostProcessing) {\n    const writer = new BinaryWriter();\n    PostProcessing.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new PostProcessing();\n    PostProcessing.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: PostProcessing) {\n    instance.pipeline = instance.pipeline || [];\n    instance.postProcessors = instance.postProcessors || undefined;\n  }\n\n  static fromBinaryReader(instance: PostProcessing, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.pipeline = instance.pipeline || []).push(\n            reader.readString()\n          );\n          break;\n        case 2:\n          instance.postProcessors = new PostProcessors();\n          reader.readMessage(\n            instance.postProcessors,\n            PostProcessors.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    PostProcessing.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: PostProcessing, writer: BinaryWriter) {\n    if (instance.pipeline && instance.pipeline.length) {\n      writer.writeRepeatedString(1, instance.pipeline);\n    }\n    if (instance.postProcessors) {\n      writer.writeMessage(\n        2,\n        instance.postProcessors as any,\n        PostProcessors.toBinaryWriter\n      );\n    }\n  }\n\n  private _pipeline?: string[];\n  private _postProcessors?: PostProcessors;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param PostProcessing value\n   */\n  constructor(value?: RecursivePartial<PostProcessing>) {\n    value = value || {};\n    this.pipeline = (value.pipeline || []).slice();\n    this.postProcessors = value.postProcessors\n      ? new PostProcessors(value.postProcessors)\n      : undefined;\n    PostProcessing.refineValues(this);\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get postProcessors(): PostProcessors | undefined {\n    return this._postProcessors;\n  }\n  set postProcessors(value: PostProcessors | undefined) {\n    this._postProcessors = value;\n  }\n  toObject() {\n    return {\n      pipeline: (this.pipeline || []).slice(),\n      postProcessors: this.postProcessors\n        ? this.postProcessors.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module PostProcessing {}\nexport class PostProcessors implements GrpcMessage {\n  static toBinary(instance: PostProcessors) {\n    const writer = new BinaryWriter();\n    PostProcessors.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new PostProcessors();\n    PostProcessors.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: PostProcessors) {\n    instance.symSpell = instance.symSpell || undefined;\n    instance.normalization = instance.normalization || undefined;\n  }\n\n  static fromBinaryReader(instance: PostProcessors, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.symSpell = new SymSpell();\n          reader.readMessage(instance.symSpell, SymSpell.fromBinaryReader);\n          break;\n        case 2:\n          instance.normalization = new Normalization();\n          reader.readMessage(\n            instance.normalization,\n            Normalization.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    PostProcessors.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: PostProcessors, writer: BinaryWriter) {\n    if (instance.symSpell) {\n      writer.writeMessage(1, instance.symSpell as any, SymSpell.toBinaryWriter);\n    }\n    if (instance.normalization) {\n      writer.writeMessage(\n        2,\n        instance.normalization as any,\n        Normalization.toBinaryWriter\n      );\n    }\n  }\n\n  private _symSpell?: SymSpell;\n  private _normalization?: Normalization;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param PostProcessors value\n   */\n  constructor(value?: RecursivePartial<PostProcessors>) {\n    value = value || {};\n    this.symSpell = value.symSpell ? new SymSpell(value.symSpell) : undefined;\n    this.normalization = value.normalization\n      ? new Normalization(value.normalization)\n      : undefined;\n    PostProcessors.refineValues(this);\n  }\n  get symSpell(): SymSpell | undefined {\n    return this._symSpell;\n  }\n  set symSpell(value: SymSpell | undefined) {\n    this._symSpell = value;\n  }\n  get normalization(): Normalization | undefined {\n    return this._normalization;\n  }\n  set normalization(value: Normalization | undefined) {\n    this._normalization = value;\n  }\n  toObject() {\n    return {\n      symSpell: this.symSpell ? this.symSpell.toObject() : undefined,\n      normalization: this.normalization\n        ? this.normalization.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module PostProcessors {}\nexport class SymSpell implements GrpcMessage {\n  static toBinary(instance: SymSpell) {\n    const writer = new BinaryWriter();\n    SymSpell.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new SymSpell();\n    SymSpell.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: SymSpell) {\n    instance.dictPath = instance.dictPath || '';\n    instance.maxDictionaryEditDistance =\n      instance.maxDictionaryEditDistance || '0';\n    instance.prefixLength = instance.prefixLength || '0';\n  }\n\n  static fromBinaryReader(instance: SymSpell, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.dictPath = reader.readString();\n          break;\n        case 2:\n          instance.maxDictionaryEditDistance = reader.readInt64String();\n          break;\n        case 3:\n          instance.prefixLength = reader.readInt64String();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    SymSpell.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: SymSpell, writer: BinaryWriter) {\n    if (instance.dictPath) {\n      writer.writeString(1, instance.dictPath);\n    }\n    if (instance.maxDictionaryEditDistance) {\n      writer.writeInt64String(2, instance.maxDictionaryEditDistance);\n    }\n    if (instance.prefixLength) {\n      writer.writeInt64String(3, instance.prefixLength);\n    }\n  }\n\n  private _dictPath?: string;\n  private _maxDictionaryEditDistance?: string;\n  private _prefixLength?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param SymSpell value\n   */\n  constructor(value?: RecursivePartial<SymSpell>) {\n    value = value || {};\n    this.dictPath = value.dictPath;\n    this.maxDictionaryEditDistance = value.maxDictionaryEditDistance;\n    this.prefixLength = value.prefixLength;\n    SymSpell.refineValues(this);\n  }\n  get dictPath(): string | undefined {\n    return this._dictPath;\n  }\n  set dictPath(value: string | undefined) {\n    this._dictPath = value;\n  }\n  get maxDictionaryEditDistance(): string | undefined {\n    return this._maxDictionaryEditDistance;\n  }\n  set maxDictionaryEditDistance(value: string | undefined) {\n    this._maxDictionaryEditDistance = value;\n  }\n  get prefixLength(): string | undefined {\n    return this._prefixLength;\n  }\n  set prefixLength(value: string | undefined) {\n    this._prefixLength = value;\n  }\n  toObject() {\n    return {\n      dictPath: this.dictPath,\n      maxDictionaryEditDistance: this.maxDictionaryEditDistance,\n      prefixLength: this.prefixLength\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module SymSpell {}\nexport class Normalization implements GrpcMessage {\n  static toBinary(instance: Normalization) {\n    const writer = new BinaryWriter();\n    Normalization.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Normalization();\n    Normalization.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Normalization) {\n    instance.language = instance.language || '';\n  }\n\n  static fromBinaryReader(instance: Normalization, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.language = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Normalization.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Normalization, writer: BinaryWriter) {\n    if (instance.language) {\n      writer.writeString(1, instance.language);\n    }\n  }\n\n  private _language?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Normalization value\n   */\n  constructor(value?: RecursivePartial<Normalization>) {\n    value = value || {};\n    this.language = value.language;\n    Normalization.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  toObject() {\n    return {\n      language: this.language\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Normalization {}\nexport class Logging implements GrpcMessage {\n  static toBinary(instance: Logging) {\n    const writer = new BinaryWriter();\n    Logging.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Logging();\n    Logging.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Logging) {\n    instance.type = instance.type || '';\n    instance.path = instance.path || '';\n  }\n\n  static fromBinaryReader(instance: Logging, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.type = reader.readString();\n          break;\n        case 2:\n          instance.path = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Logging.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Logging, writer: BinaryWriter) {\n    if (instance.type) {\n      writer.writeString(1, instance.type);\n    }\n    if (instance.path) {\n      writer.writeString(2, instance.path);\n    }\n  }\n\n  private _type?: string;\n  private _path?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Logging value\n   */\n  constructor(value?: RecursivePartial<Logging>) {\n    value = value || {};\n    this.type = value.type;\n    this.path = value.path;\n    Logging.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  toObject() {\n    return {\n      type: this.type,\n      path: this.path\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Logging {}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { GrpcMessage, RecursivePartial } from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nexport class Empty implements GrpcMessage {\n  static toBinary(instance: Empty) {\n    const writer = new BinaryWriter();\n    Empty.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Empty();\n    Empty.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Empty) {}\n\n  static fromBinaryReader(instance: Empty, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        default:\n          reader.skipField();\n      }\n    }\n\n    Empty.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Empty, writer: BinaryWriter) {}\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Empty value\n   */\n  constructor(value?: RecursivePartial<Empty>) {\n    value = value || {};\n    Empty.refineValues(this);\n  }\n  toObject() {\n    return {};\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Empty {}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcClientSettings,\n  GrpcEvent\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Metadata } from 'grpc-web';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './speech-to-text.pb';\nimport * as googleProtobuf000 from '../../google/protobuf/empty.pb';\nimport { GRPC_SPEECH2_TEXT_CLIENT_SETTINGS } from './speech-to-text.pbconf';\n@Injectable({\n  providedIn: 'root'\n})\nexport class Speech2TextClient {\n  private client: GrpcClient;\n\n  constructor(\n    @Optional()\n    @Inject(GRPC_SPEECH2_TEXT_CLIENT_SETTINGS)\n    settings: GrpcClientSettings,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.s2t.Speech2Text',\n      settings\n    );\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.TranscribeFileRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.TranscribeFileResponse>\n   */\n  transcribeFile(\n    requestData: thisProto.TranscribeFileRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.TranscribeFileResponse> {\n    return this.transcribeFile$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.TranscribeFileRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.TranscribeFileResponse>>\n   */\n  transcribeFile$eventStream(\n    requestData: thisProto.TranscribeFileRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.TranscribeFileResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/TranscribeFile',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.TranscribeFileRequest,\n      responseClass: thisProto.TranscribeFileResponse\n    });\n  }\n\n  /**\n   * Server streaming RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.TranscribeStreamRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.TranscribeStreamResponse>\n   */\n  transcribeStream(\n    requestData: thisProto.TranscribeStreamRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.TranscribeStreamResponse> {\n    return this.transcribeStream$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Server streaming RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.TranscribeStreamRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.TranscribeStreamResponse>>\n   */\n  transcribeStream$eventStream(\n    requestData: thisProto.TranscribeStreamRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.TranscribeStreamResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.serverStream,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/TranscribeStream',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.TranscribeStreamRequest,\n      responseClass: thisProto.TranscribeStreamResponse\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.S2tPipelineId request\n   * @param Metadata metadata\n   * @return Observable<thisProto.Speech2TextConfig>\n   */\n  getS2tPipeline(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.Speech2TextConfig> {\n    return this.getS2tPipeline$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.S2tPipelineId request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.Speech2TextConfig>>\n   */\n  getS2tPipeline$eventStream(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.Speech2TextConfig>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/GetS2tPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.S2tPipelineId,\n      responseClass: thisProto.Speech2TextConfig\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.Speech2TextConfig request\n   * @param Metadata metadata\n   * @return Observable<thisProto.S2tPipelineId>\n   */\n  createS2tPipeline(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.S2tPipelineId> {\n    return this.createS2tPipeline$eventStream(\n      requestData,\n      requestMetadata\n    ).pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.Speech2TextConfig request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.S2tPipelineId>>\n   */\n  createS2tPipeline$eventStream(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.S2tPipelineId>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/CreateS2tPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.Speech2TextConfig,\n      responseClass: thisProto.S2tPipelineId\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.S2tPipelineId request\n   * @param Metadata metadata\n   * @return Observable<googleProtobuf000.Empty>\n   */\n  deleteS2tPipeline(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<googleProtobuf000.Empty> {\n    return this.deleteS2tPipeline$eventStream(\n      requestData,\n      requestMetadata\n    ).pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.S2tPipelineId request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<googleProtobuf000.Empty>>\n   */\n  deleteS2tPipeline$eventStream(\n    requestData: thisProto.S2tPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<googleProtobuf000.Empty>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/DeleteS2tPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.S2tPipelineId,\n      responseClass: googleProtobuf000.Empty\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.Speech2TextConfig request\n   * @param Metadata metadata\n   * @return Observable<googleProtobuf000.Empty>\n   */\n  updateS2tPipeline(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<googleProtobuf000.Empty> {\n    return this.updateS2tPipeline$eventStream(\n      requestData,\n      requestMetadata\n    ).pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.Speech2TextConfig request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<googleProtobuf000.Empty>>\n   */\n  updateS2tPipeline$eventStream(\n    requestData: thisProto.Speech2TextConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<googleProtobuf000.Empty>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/UpdateS2tPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.Speech2TextConfig,\n      responseClass: googleProtobuf000.Empty\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.ListS2tPipelinesRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.ListS2tPipelinesResponse>\n   */\n  listS2tPipelines(\n    requestData: thisProto.ListS2tPipelinesRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.ListS2tPipelinesResponse> {\n    return this.listS2tPipelines$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.ListS2tPipelinesRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.ListS2tPipelinesResponse>>\n   */\n  listS2tPipelines$eventStream(\n    requestData: thisProto.ListS2tPipelinesRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.ListS2tPipelinesResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/ListS2tPipelines',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.ListS2tPipelinesRequest,\n      responseClass: thisProto.ListS2tPipelinesResponse\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.ListS2tLanguagesRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.ListS2tLanguagesResponse>\n   */\n  listS2tLanguages(\n    requestData: thisProto.ListS2tLanguagesRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.ListS2tLanguagesResponse> {\n    return this.listS2tLanguages$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.ListS2tLanguagesRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.ListS2tLanguagesResponse>>\n   */\n  listS2tLanguages$eventStream(\n    requestData: thisProto.ListS2tLanguagesRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.ListS2tLanguagesResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/ListS2tLanguages',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.ListS2tLanguagesRequest,\n      responseClass: thisProto.ListS2tLanguagesResponse\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.ListS2tDomainsRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.ListS2tDomainsResponse>\n   */\n  listS2tDomains(\n    requestData: thisProto.ListS2tDomainsRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.ListS2tDomainsResponse> {\n    return this.listS2tDomains$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.ListS2tDomainsRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.ListS2tDomainsResponse>>\n   */\n  listS2tDomains$eventStream(\n    requestData: thisProto.ListS2tDomainsRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.ListS2tDomainsResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.s2t.Speech2Text/ListS2tDomains',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.ListS2tDomainsRequest,\n      responseClass: thisProto.ListS2tDomainsResponse\n    });\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["InjectionToken","CTCDecoding","BinaryWriter","BinaryReader","throwStatusErrors","takeMessages","GrpcCallType","thisProto.TranscribeFileRequest","thisProto.TranscribeFileResponse","thisProto.TranscribeStreamRequest","thisProto.TranscribeStreamResponse","thisProto.S2tPipelineId","thisProto.Speech2TextConfig","googleProtobuf000.Empty","thisProto.ListS2tPipelinesRequest","thisProto.ListS2tPipelinesResponse","thisProto.ListS2tLanguagesRequest","thisProto.ListS2tLanguagesResponse","thisProto.ListS2tDomainsRequest","thisProto.ListS2tDomainsResponse","Injectable","Optional","Inject","GRPC_CLIENT_FACTORY","GrpcHandler"],"mappings":"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"}